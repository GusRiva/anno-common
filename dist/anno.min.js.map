{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///anno.min.js","webpack:///webpack/bootstrap 4ad71524c9164d22096b","webpack:///../anno-store-http/~/axios/lib/utils.js","webpack:///./~/process/browser.js","webpack:///../anno-config/config.js","webpack:///(webpack)/buildin/global.js","webpack:///../anno-store-memory/~/underscore/underscore.js","webpack:///../anno-store-memory/~/nedb/lib/model.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/util/util.js","webpack:///../anno-errors/errors.js","webpack:///../anno-store/store.js","webpack:///../anno-store-http/~/axios/lib/defaults.js","webpack:///../anno-store-memory/~/async/lib/async.js","webpack:///../anno-schema/index.js","webpack:///../anno-store-http/~/axios/lib/adapters/xhr.js","webpack:///../anno-store-http/~/axios/lib/cancel/Cancel.js","webpack:///../anno-store-http/~/axios/lib/cancel/isCancel.js","webpack:///../anno-store-http/~/axios/lib/core/createError.js","webpack:///../anno-store-http/~/axios/lib/helpers/bind.js","webpack:///../anno-store-memory/~/binary-search-tree/lib/bst.js","webpack:///../anno-store-memory/~/binary-search-tree/lib/customUtils.js","webpack:///../anno-store-memory/~/nedb/browser-version/browser-specific/lib/customUtils.js","webpack:///../anno-store-memory/~/nedb/lib/indexes.js","webpack:///(webpack)/buildin/module.js","webpack:///../anno-mw-basicauth/mw-basicauth.js","webpack:///../anno-mw-httpheaders/mw-httpheaders.js","webpack:///../anno-store-http/store-http.js","webpack:///../anno-store-memory/store-memory.js","webpack:///../anno-schema/context.json","webpack:///../anno-schema/data-model.json","webpack:///../anno-schema/~/ajv/dist/ajv.min.js","webpack:///../anno-schema/~/mustache/mustache.js","webpack:///../anno-schema/openapi.json","webpack:///../anno-store-http/~/axios/index.js","webpack:///../anno-store-http/~/axios/lib/axios.js","webpack:///../anno-store-http/~/axios/lib/cancel/CancelToken.js","webpack:///../anno-store-http/~/axios/lib/core/Axios.js","webpack:///../anno-store-http/~/axios/lib/core/InterceptorManager.js","webpack:///../anno-store-http/~/axios/lib/core/dispatchRequest.js","webpack:///../anno-store-http/~/axios/lib/core/enhanceError.js","webpack:///../anno-store-http/~/axios/lib/core/settle.js","webpack:///../anno-store-http/~/axios/lib/core/transformData.js","webpack:///../anno-store-http/~/axios/lib/helpers/btoa.js","webpack:///../anno-store-http/~/axios/lib/helpers/buildURL.js","webpack:///../anno-store-http/~/axios/lib/helpers/combineURLs.js","webpack:///../anno-store-http/~/axios/lib/helpers/cookies.js","webpack:///../anno-store-http/~/axios/lib/helpers/isAbsoluteURL.js","webpack:///../anno-store-http/~/axios/lib/helpers/isURLSameOrigin.js","webpack:///../anno-store-http/~/axios/lib/helpers/normalizeHeaderName.js","webpack:///../anno-store-http/~/axios/lib/helpers/parseHeaders.js","webpack:///../anno-store-http/~/axios/lib/helpers/spread.js","webpack:///../anno-store-memory/~/binary-search-tree/index.js","webpack:///../anno-store-memory/~/binary-search-tree/lib/avltree.js","webpack:///../anno-store-memory/~/localforage/dist/localforage.js","webpack:///../anno-store-memory/~/nedb/browser-version/browser-specific/lib/storage.js","webpack:///../anno-store-memory/~/nedb/index.js","webpack:///../anno-store-memory/~/nedb/lib/cursor.js","webpack:///../anno-store-memory/~/nedb/lib/datastore.js","webpack:///../anno-store-memory/~/nedb/lib/executor.js","webpack:///../anno-store-memory/~/nedb/lib/persistence.js","webpack:///../anno-store-mongolike/~/async/dist/async.js","webpack:///../anno-store/~/async/dist/async.js","webpack:///../anno-store/~/slugid/index.js","webpack:///../anno-store/~/slugid/slugid.js","webpack:///../anno-store/~/uuid/rng-browser.js","webpack:///../anno-store/~/uuid/uuid.js","webpack:///../anno-store-mongolike/store-mongolike.js","webpack:///./entry.js","webpack:///./~/base64-js/index.js","webpack:///./~/buffer/index.js","webpack:///./~/events/events.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/path-browserify/index.js","webpack:///./~/querystring-es3/decode.js","webpack:///./~/querystring-es3/encode.js","webpack:///./~/querystring-es3/index.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/util/support/isBufferBrowser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isArray","val","toString","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isObject","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","trim","str","replace","isStandardBrowserEnv","window","document","createElement","forEach","obj","fn","length","key","merge","assignValue","result","arguments","extend","a","b","thisArg","bind","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","loadConfig","localDefaults","undefined","CONFIG","JSON","parse","stringify","DEFAULTS","assign","keys","ENV","filter","k","match","PREFIX_RE","PREFIX","getLogger","category","isNode","err","config","LOGFILE","LOGLEVEL","format","level","message","Date","toISOString","substr","logEnabled","cb","fs","silly","_len","msgs","_key","msg","appendFile","debug","_len2","_key2","_len3","_key3","console","_len4","_key4","log","RegExp","DEBUG","STORE","g","Function","eval","previousUnderscore","_","breaker","ArrayProto","ObjProto","FuncProto","slice","nativeForEach","nativeMap","map","nativeReduce","reduce","nativeReduceRight","reduceRight","nativeFilter","nativeEvery","every","nativeSome","some","nativeIndexOf","indexOf","nativeLastIndexOf","lastIndexOf","nativeIsArray","nativeKeys","nativeBind","_wrapped","VERSION","each","iterator","context","has","collect","results","index","list","reduceError","foldl","inject","memo","initial","TypeError","foldr","find","detect","any","select","reject","all","identity","contains","include","target","invoke","method","isFunc","pluck","where","attrs","first","isEmpty","findWhere","max","Math","Infinity","computed","min","shuffle","rand","shuffled","random","lookupIterator","sortBy","criteria","sort","left","right","group","behavior","groupBy","countBy","sortedIndex","low","high","mid","toArray","values","size","head","take","guard","last","rest","tail","drop","compact","flatten","input","shallow","output","without","difference","uniq","unique","isSorted","seen","union","intersection","item","other","zip","from","hasIndex","range","start","stop","step","ceil","idx","func","partial","bindAll","funcs","functions","f","memoize","hasher","delay","wait","defer","throttle","previous","later","now","remaining","debounce","immediate","callNow","ran","wrap","wrapper","compose","after","times","pairs","invert","methods","names","source","prop","pick","copy","omit","defaults","clone","tap","interceptor","eq","aStack","bStack","className","String","global","multiline","ignoreCase","aCtor","constructor","bCtor","pop","isEqual","isElement","nodeType","isArguments","isFinite","isNaN","parseFloat","isBoolean","isNull","noConflict","accum","floor","entityMap","escape","&","<",">","\"","'","/","unescape","entityRegexes","join","string","mixin","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","escapes","\\","\r","\n","\t"," "," ","template","text","data","settings","render","matcher","offset","variable","chain","_chain","checkKey","v","checkObject","util","serialize","getTime","$$date","deserialize","rawData","deepCopy","strictKeys","res","isPrimitiveType","compareNSB","compareArrays","comp","compareThings","_compareStrings","aKeys","bKeys","compareStrings","createModifierFunction","modifier","field","fieldParts","split","lastStepModifierFunctions","modifierFunctions","modify","updateQuery","newDoc","modifiers","firstChars","dollarFirstChars","_id","getDotValue","objs","parseInt","areThingsEqual","areComparable","query","queryKeys","queryKey","queryValue","matchQueryPart","needAKey","logicalOperators","treatObjAsValue","objValue","isRegExp","arrayComparisonFunctions","comparisonFunctions","$regex","$set","$unset","$push","$slice","$each","end","$addToSet","addToSet","$pop","$pull","arr","splice","$inc","$max","$min","$lt","$lte","$gt","$gte","$ne","$in","$nin","test","$exists","exists","$size","$elemMatch","$or","$and","$not","$where","Timeout","clearFn","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","inspect","opts","ctx","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","hash","recurseTimes","ret","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","base","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","set","line","numLinesEst","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","isPrimitive","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","objects","x","Number","deprecate","deprecated","warned","throwDeprecation","traceDeprecation","trace","error","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","isBuffer","inherits","origin","add","annotationNotFound","code","revisionNotFound","rev","readonlyValue","invalidAnnotation","anno","errors","validationErrors","_classCallCheck","instance","Constructor","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","slugid","async","_require","Store","middlewares","loadingModule","BASE_URL","STORE_MIDDLEWARES","filename","impl","require","exit","store","middlewareModules","eachSeries","middlewareModule","next","middlewareImpl","use","_this","middleware","pass","options","_ref","_callMethod","_ref2","_ref3","annoId","_ref4","annos","_ref5","_ref6","_ref7","_ref8","_ref9","url","annoDoc","type","via","v4","setContentTypeIfUnset","headers","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","adapter","XMLHttpRequest","transformRequest","transformResponse","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","only_once","called","previous_async","_each","_map","_reduce","_keys","callback","completed","iterate","forEachSeries","eachLimit","limit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doParallelLimit","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","reversed","reverse","_filter","filterSeries","selectSeries","_reject","rejectSeries","_detect","main_callback","detectSeries","auto","tasks","listeners","unshift","taskComplete","task","taskCallback","safeResults","rkey","requires","abs","ready","listener","waterfall","wrapIterator","_parallel","parallel","parallelLimit","series","makeCallback","_concat","r","y","concatSeries","whilst","doWhilst","until","doUntil","worker","concurrency","_insert","q","pos","saturated","workers","empty","drain","shift","cargo","payload","working","ts","ds","_console_fn","queues","memoized","unmemoized","unmemoize","count","counter","timesSeries","fns","that","newargs","nextargs","_applyEach","go","applyEach","applyEachSeries","forever","mustacheJSON","mustache","ajv","allErrors","errorDataPath","CONTEXT_URL","OPENAPI_HOST","OPENAPI_BASEPATH","OPENAPI_PATH","dataModel","jsonldContext","openapi","definitions","contentType","annox","validate","thisSchema","compile","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","Promise","resolve","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","auth","username","password","Authorization","open","params","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","response","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","Cancel","__CANCEL__","enhanceError","BinarySearchTree","parent","compareKeys","customUtils","defaultCompareKeysFunction","checkValueEquality","defaultCheckValueEquality","append","toAppend","getMaxKeyDescendant","getMaxKey","getMinKeyDescendant","getMinKey","checkAllNodesFullfillCondition","checkNodeOrdering","self","checkInternalPointers","checkIsBST","getNumberOfKeys","createSimilar","createLeftChild","leftChild","createRightChild","rightChild","insert","errorType","search","getLowerBoundMatcher","getUpperBoundMatcher","betweenBounds","lbm","ubm","deleteIfLeaf","deleteIfOnlyOneChild","child","delete","replaceWith","newData","executeOnEveryNode","prettyPrint","printData","spacing","getRandomArray","randomBytes","bytes","byteArrayToBase64","uint8","temp","lookup","extraBytes","num","uid","projectForUnique","elt","Index","fieldName","sparse","treeOptions","model","reset","AVLTree","tree","doc","failingI","insertMultipleDocs","docs","remove","update","oldDoc","updateMultipleDocs","revertUpdate","revert","pair","getMatching","_res","getBetweenBounds","getAll","node","webpackPolyfill","paths","children","BASICAUTH_USERNAME","BASICAUTH_PASSWORD","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","done","HTTPHEADERS","httpHeaders","kv","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","axios","querystring","HttpStore","_Store","getPrototypeOf","baseURL","_httpClient","post","_configFromOptions","resp","catch","statusCode","annoUrl","col","total","items","put","nedb","MemoryStore","db","loadDatabase","init","@context","rdfs","sioc","AnnotationRevision","@id","rdfs:subClassOf","AnnotationReply","hasReply","@type","rdfs:domain","rdfs:range","replyTo","hasVersion","versionOf","deleted","xsd_dateTime","iri","iri_object","required","additionalProperties","properties","$ref","mediaType","pattern","language","textDirection","enum","Annotation","allOf","canonical","styledBy","oneOf","body","anyOf","Resource","processingLanguage","TargetResource","renderedVia","styleClass","default","scope","selector","AnnotationMetadata","created","modified","generated","creator","generator","ResourceClass","TextualBody","Choice","minItems","Motivation","Agent","nickname","email","email_sha1","homepage","Person","SpecificResource","purpose","accessibility","state","Selector","FragmentSelector","conformsTo","CssSelector","XPathSelector","TextQuoteSelector","exact","suffix","TextPositionSelector","DataPositionSelector","SvgSelector","RangeSelector","startSelector","endSelector","State","TimeState","sourceDate","sourceDateStart","sourceDateEnd","cached","HttpRequestState","CssStylesheet","Software","schema:softwareVersion","AnnotationCollection","label","AnnotationPage","partOf","t","h","1","transpile","_transpileFunc","u","runtime","dontInstallRequireHook","warn","promises","sourcemap","missingSchema","_refs","_schemas","addSchema","missingRef","_loadingSchemas","_opts","loadSchema","_addSchema","setup","*","co*","es7","nodent","regenerator","./compile/util","2","_cache","del","clear","3","dependencies","maximum","minimum","maxItems","maxLength","minLength","maxProperties","minProperties","multipleOf","not","uniqueItems","../dotjs/_limit","../dotjs/_limitItems","../dotjs/_limitLength","../dotjs/_limitProperties","../dotjs/allOf","../dotjs/anyOf","../dotjs/dependencies","../dotjs/enum","../dotjs/format","../dotjs/items","../dotjs/multipleOf","../dotjs/not","../dotjs/oneOf","../dotjs/pattern","../dotjs/properties","../dotjs/ref","../dotjs/required","../dotjs/uniqueItems","../dotjs/validate","4","5","compare","w","j","P","E","fast","date-time","uri","hostname","ipv4","ipv6","regex","uuid","json-pointer","relative-json-pointer","full","./util","6","js_beautify","N","S","schema","$async","isTop","isRoot","baseId","schemaPath","errSchemaPath","errorPath","RULES","H","resolveRef","$","usePattern","R","useDefault","I","useCustomRule","A","formats","F","D","Q","V","U","beautify","refs","L","refVal","T","sourceCode","patterns","O","inlineRef","inlineRefs","inline","C","toQuotedString","z","definition","validateSchema","errorsText","macro","keyword","M","_compilations","compiling","callValidate","_formats","J","G","ucs2length","../async","./equal","./resolve","./validation_error","co","json-stable-stringify","7","_compile","unescapeFragment","protocol","href","host","path","escapeFragment","normalizeId","fullPath","ids","toHash","./schema_obj","8","rules","keywords","types","custom","./_rules","9","10","charCodeAt","11","integer","decodeURIComponent","encodeURIComponent","checkDataType","checkDataTypes","coerceToTypes","getProperty","escapeQuotes","varOccurences","varReplace","cleanUpCode","cleanUpVarErrors","schemaHasRules","schemaHasRulesExcept","stableStringify","getPathExpr","getPath","getData","escapeJsonPointer","./ucs2length","12","validation","13","dataLevel","v5","$data","dataPathArr","createErrors","messages","verbose","compositeRule","14","15","16","unicode","17","18","19","20","21","statements","passContext","yieldAwait","modifying","valid","22","jsonPointers","_errorDataPathProperty","23","24","unknownFormats","25","additionalItems","26","multipleOfPrecision","27","28","29","30","ownProperties","31","patternProperties","removeAdditional","loopRequired","patternGroups","K","B","Z","Y","W","X","useDefaults","ee","te","ae","se","oe","ie","ne","le","ce","he","ue","fe","de","pe","me","ve","ye","ge","Pe","32","missingRefs","33","34","if","continue","35","36","rootId","coerceTypes","extendRefs","37","metaSchema","./dotjs/custom","38","$schema","description","schemaArray","positiveInteger","positiveIntegerDefault0","simpleTypes","stringArray","exclusiveMinimum","exclusiveMaximum","39","formatMaximum","formatMinimum","formatExclusiveMaximum","formatExclusiveMinimum","constant","switch","40","addKeyword","_formatLimit","patternRequired","meta","addMetaSchema","enable","META_SCHEMA_ID","./dotjs/_formatLimit","./dotjs/constant","./dotjs/patternRequired","./dotjs/switch","./refs/json-schema-v5.json","41","RangeError","overflow","not-basic","invalid-input","fromCharCode","ucs2","decode","encode","toASCII","toUnicode","punycode","42","maxKeys","43","44","./decode","./encode","45","slashes","port","pathname","resolveObject","Url","javascript","javascript:","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","exec","parseHost","charAt","46","47","throw","displayName","__generatorFunction__","48","cmp","space","cycles","replacer","toJSON","","jsonify","49","./lib/parse","./lib/stringify","50","at","51","lastIndex","\b","\f","defaultMeta","_fragments","fragment","jsonStr","addUsedSchema","localRefs","_metaOpts","separator","dataVar","dataPath","cache","getSchema","removeSchema","addFormat","indent_size","schemas","compileAsync","getKeyword","removeKeyword","ValidationError","./async","./cache","./compile","./compile/formats","./compile/resolve","./compile/rules","./compile/schema_obj","./compile/validation_error","./keyword","./refs/json-schema-draft-04.json","./v5","__WEBPACK_AMD_DEFINE_FACTORY__","nodeName","typeStr","escapeRegExp","hasProperty","propName","testRegExp","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","parseTemplate","tags","compileTags","tagsToCompile","spaceRe","openingTagRe","closingTagRe","closingCurlyRe","sections","tokens","spaces","hasTag","nonSpace","chr","token","openSection","scanner","Scanner","eos","scanUntil","valueLength","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","Context","view","parentContext",".","Writer","`","=","substring","lookupHit","clearCache","partials","renderTokens","originalTemplate","symbol","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","defaultWriter","to_html","swagger","basePath","info","consumes","produces","securityDefinitions","Bearer","in","/{{ config.OPENAPI_PATH }}","summary","parameters","responses","200","security","/{{ config.OPENAPI_PATH }}/{annoId}","404","/anno/{annoId}-rev-{revId}","/anno/{annoId}/reply","201","createInstance","defaultConfig","Axios","instanceConfig","CancelToken","isCancel","spread","executor","resolvePromise","reason","throwIfRequested","interceptors","InterceptorManager","dispatchRequest","isAbsoluteURL","combineURLs","fulfilled","rejected","handlers","eject","throwIfCancellationRequested","transformData","block","charCode","chars","serializedParams","parts","relativeURL","write","expires","domain","secure","cookie","toGMTString","resolveURL","msie","urlParsingNode","setAttribute","originURL","navigator","userAgent","location","requestURL","parsed","normalizedName","_AVLTree","checkHeightCorrect","leftH","rightH","height","balanceFactor","checkBalanceFactors","checkIsAVLT","super_","rightRotation","ah","bh","ch","leftRotation","rightTooSmall","leftTooSmall","rebalanceAlongPath","rotated","newRoot","insertPath","currentNode","newTree","deletePath","_dereq_","oldQueue","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","element","createTextNode","observe","characterData","MessageChannel","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","INTERNAL","resolver","PENDING","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","getThen","thenable","onError","onSuccess","tryToUnwrap","tryCatch","out","iterable","resolved","resolveFromAll","outValue","race","REJECTED","FULFILLED","createBlob","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","getBlob","executeCallback","executeTwoCallbacks","errorCallback","_binStringToArrayBuffer","bin","buf","Uint8Array","_checkBlobSupportWithoutCaching","idb","Promise$1","txn","transaction","DETECT_BLOB_SUPPORT_STORE","blob","objectStore","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","matchedEdge","_checkBlobSupport","supportsBlobs","_deferReadiness","dbInfo","dbContext","dbContexts","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_getConnection","upgradeNeeded","dbArgs","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_initStorage","ignoreErrors","forages","initPromises","forage","_defaultConfig","getItem","req","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","advanced","advance","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","BASE_CHARS","bufferToString","base64String","valueType","toString$1","SERIALIZED_MARKER","TYPE_ARRAYBUFFER","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_UINT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","fileReader","onload","BLOB_TYPE_PREFIX","TYPE_BLOB","readAsArrayBuffer","SERIALIZED_MARKER_LENGTH","blobType","TYPE_SERIALIZED_MARKER_LENGTH","BLOB_TYPE_PREFIX_REGEX","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","_initStorage$1","dbInfoPromise","openDatabase","executeSql","serializer","localforageSerializer","getItem$1","rows","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","_initStorage$2","keyPrefix","clear$2","localStorage","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","length$2","removeItem$2","setItem$2","callWhenReady","localForageInstance","libraryMethod","_args","isLibraryDriver","driverName","driver","DriverType","_typeof","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","asyncStorage","_driver","webSQLStorage","localStorageWrapper","CustomDrivers","INDEXEDDB","LOCALSTORAGE","WEBSQL","DefaultDriverOrder","LibraryMethods","DefaultConfig","driverSupport","isSafari","platform","hasFetch","fetch","IDBKeyRange","LocalForage","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","defineDriver","driverObject","complianceError","namingError","customDriverMethods","customDriverMethod","supportPromise","_support","supportResult","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","setDriverToConfig","extendSelfWithDriver","initDriver","supportedDrivers","driverPromiseLoop","currentDriverIndex","_getSupportedDrivers","oldDriverSetDone","supports","libraryMethodsAndProperties","localforage_js","localforage","rename","newFilename","writeFile","contents","readFile","unlink","mkdirp","ensureDatafileIntegrity","crashSafeWriteFile","Datastore","Cursor","execFn","_limit","skip","_skip","sortQuery","_sort","projection","_projection","project","candidates","keepId","action","candidate","toPush","_exec","_callback","added","skipped","getCandidates","direction","criterion","inMemoryOnly","autoload","timestampData","persistence","Persistence","nodeWebkitAppName","afterSerialization","beforeDeserialization","corruptAlertThreshold","Executor","indexes","ttlIndexes","EventEmitter","getAllData","resetIndexes","ensureIndex","missingFieldName","expireAfterSeconds","persistNewState","$$indexCreated","removeIndex","$$indexRemoved","addToIndexes","failingIndex","removeFromIndexes","updateIndexes","dontExpireStaleDocs","usableQueryKeys","indexNames","expiredDocsIds","validDocs","ttlIndexesFieldNames","_remove","preparedDoc","prepareDocumentForInsertion","_insertInCache","createNewId","tentativeId","createdAt","updatedAt","_insertMultipleDocsInCache","preparedDocs","findOne","_update","multi","upsert","numReplaced","toBeInserted","modifiedDoc","modifications","updatedDocs","returnUpdatedDocs","updatedDocsDC","numRemoved","removedDocs","$$deleted","newArguments","lastArg","forceQueuing","processBuffer","randomString","getNWAppFilename","storage","ensureDirectoryExists","appName","relativeFilename","home","LOCALAPPDATA","APPDATA","HOME","persistCachedDatabase","toPersist","compactDatafile","setAutocompactionInterval","interval","realInterval","stopAutocompaction","autocompactionIntervalId","newDocs","treatRawData","dataById","tdata","corruptItems","dirname","treatedData","overRest$1","transform","nativeMax","otherArgs","applyEach$1","initialParams","getRawTag","isOwn","symToStringTag$1","tag","nativeObjectToString","nativeObjectToString$1","baseGetTag","undefinedTag","nullTag","symToStringTag","funcTag","genTag","asyncTag","proxyTag","isLength","MAX_SAFE_INTEGER","isArrayLike","callFn","baseTimes","iteratee","isObjectLike","baseIsArguments","argsTag","stubFalse","isIndex","MAX_SAFE_INTEGER$1","reIsUint","baseIsTypedArray","typedArrayTags","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","isTypedArray","skipIndexes","hasOwnProperty$1","isPrototype","Ctor","objectProto$5","baseKeys","hasOwnProperty$3","createArrayIterator","coll","createES2015Iterator","createObjectIterator","okeys","getIterator","onlyOnce","_eachOfLimit","iterateeCallback","breakLoop","elem","nextElem","eachOfLimit","doLimit","eachOfArrayLike","iteratorCallback","eachOf","asyncify","arrayEach","baseForOwn","baseFor","baseFindIndex","predicate","fromIndex","fromRight","baseIsNaN","strictIndexOf","baseIndexOf","arrayMap","symbolTag","baseToString","symbolToString","INFINITY","baseSlice","castSlice","charsEndIndex","strSymbols","chrSymbols","charsStartIndex","asciiToArray","hasUnicode","reHasUnicode","unicodeToArray","reUnicode","stringToArray","reTrim","parseParams","STRIP_COMMENTS","FN_ARGS","FN_ARG_SPLIT","FN_ARG","autoInject","newTasks","taskFn","newTask","taskCb","newArgs","fallback","DLL","setInitial","dll","insertAtFront","idle","setImmediate$1","_tasks","_next","workersList","unsaturated","isProcessing","paused","kill","pause","resume","eachOfSeries","concat$1","_createTester","check","getResult","testResult","testPassed","_findGetResult","consoleFunc","doDuring","truth","during","_withoutIndex","eachLimit$1","ensureAsync","sync","innerArgs","notId","baseProperty","filterArray","truthValues","filterGeneric","errback","mapValuesLimit","newObj","parallelLimit$1","reflect","reflectCallback","cbArgs","reject$1","reflectAll","constant$1","retry","retryAttempt","attempt","errorFilter","intervalFunc","DEFAULT_TIMES","DEFAULT_INTERVAL","acc","comparator","asyncFn","milliseconds","injectedCallback","timedOut","originalCallback","timer","timeoutCallback","origCallback","baseRange","nativeMax$1","nativeCeil","timeLimit","accumulator","freeGlobal","freeSelf","Symbol$1","objectProto","toStringTag","objectProto$1","iteratorSymbol","objectProto$3","hasOwnProperty$2","propertyIsEnumerable","freeExports","freeModule","moduleExports","Buffer","nativeIsBuffer","_defer","freeExports$1","freeModule$1","moduleExports$1","freeProcess","nodeUtil","nodeIsTypedArray","objectProto$2","objectProto$4","eachOfGeneric","apply$2","callArgs","keysFunc","enqueueTask","readyTasks","runTask","processQueue","runningTasks","taskName","taskListeners","hasError","getDependents","keys$$1","numTasks","readyToCheck","uncheckedDependencies","remainingDependencies","dependencyName","currentTask","dependent","symbolProto","rsCombo","rsFitz","rsRegional","rsSurrPair","reOptMod","rsOptJoin","rsSeq","rsSymbol","hasSetImmediate","hasNextTick","removeLink","insertAfter","newNode","insertBefore","_defer$1","seq$1","ignoredArgs","detectLimit","everyLimit","everySeries","filterLimit","groupByLimit","mapResults","groupBySeries","mapValues","mapValuesSeries","queue$1","priorityQueue","priority","nextNode","rejectLimit","retryable","Boolean","someLimit","someSeries","nextTask","taskIndex","seq","timesLimit","forEachOf","forEachOfSeries","forEachOfLimit","selectLimit","wrapSync","allLimit","allSeries","anyLimit","anySeries","findLimit","findSeries","uuid_","slug","unparse","nice","rng","crypto","msCrypto","getRandomValues","_rnds8","_rnds","ii","oct","_hexToByte","bth","_byteToHex","v1","clockseq","_clockseq","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","rnds","_rng","_seedBytes","MongolikeStore","COLLECTION","_this2","_projectionFromOptions","_idFromURL","_annoId$split","_annoId$split2","_revid","_revisions","latest","_toJSONLD","_this3","wasArray","_deleteId","validFn","_normalizeTarget","_normalizeType","_genid","savedAnnos","insertedIds","savedAnno","_this4","_annoId$split3","_annoId$split4","existingAnno","_this5","$target","target.source","includeDeleted","skipContext","_this6","skipVersions","revId","revision","revisionLD","metadataOnly","Schema","Config","Errors","BasicAuthMiddleware","HttpHeadersMiddleware","placeHoldersCount","b64","byteLength","toByteArray","tmp","placeHolders","Arr","revLookup","tripletToBase64","encodeChunk","fromByteArray","len2","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","actual","fromArrayLike","byteOffset","isnan","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","foo","subarray","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","swap16","swap32","swap64","equals","thisStart","thisEnd","thisCopy","targetCopy","includes","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","_events","_maxListeners","defaultMaxListeners","setMaxListeners","er","handler","newListener","fired","position","listenerCount","evlistener","emitter","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","normalizeArray","allowAboveRoot","up","xs","splitPathRe","splitPath","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","relative","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","basename","extname","qs","kstr","vstr","stringifyPrimitive","objectKeys","ks","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","attachTo","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","onGlobalMessage","event","attachEvent","html","script","ctor","superCtor","TempCtor"],"mappings":"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GAAA,MAAA9B,GAAA,GAAAzlB,OAAA,6DACA,KAAAunB,EAAAnoB,OAAA,MAAAqmB,IACA,IAAAuiD,GAAA,CAoBAD,QA0BAx/D,IACAwiB,aACAC,mBACAnpB,MAAA0iE,GACAvI,WACA10C,QACA42C,cACAt0C,SACA1a,WACAnO,UACA8nB,gBACAimB,YACA7lC,UACA49D,eACAx/C,gBACAvkB,OACAm9D,YACAh3C,WACAF,YACAo3C,UACAl4D,KAAA4d,GACAA,UAAAw6C,GACAtE,UACAJ,cACA6D,gBACAn9C,cACAi+C,eACAj5D,SACAy/D,cACAC,eACApjE,UACAqjE,eACAjgD,gBACAkE,WACA7f,WACA67D,gBACAE,iBACArhE,OACAgB,OACA4f,YACAD,aACA2gD,aACArG,kBACAsG,mBACAn5D,WACAzM,YACA6mB,SAAAC,GACAA,cAAA04C,GACAsG,iBACAzmE,MAAAwmE,GACAllB,QACAp7C,UACAE,eACAg6D,WACAI,cACAl4D,UACAs+D,eACAxgD,gBACAs6C,SACAmG,aACAM,IAAAtB,GACAn+C,UACArO,aAAA2kD,GACAv3D,QACAsgE,aACAC,cACAj9D,UACA3J,WACAkO,SACA84D,WAAAtF,GACAp4C,eACAutC,aACA1tC,aACArB,SACAb,aACAW,UAGAzf,IAAAhC,GACA6B,IAAA3B,GACAtI,QAAA4mB,GACAD,cAAAvD,GACA2D,aAAAq6C,GACA8H,UAAApM,GACAqM,gBAAA5I,GACA6I,eAAA1M,EACAhzD,OAAA3B,GACA0B,MAAA1B,GACA+B,MAAA7B,GACAiC,OAAAxF,GACA2kE,YAAAtB,GACAhgD,aAAAD,GACAwhD,SAAAvM,EAGA5gE,GAAA,QAAAmN,GACAnN,EAAA2vB,aACA3vB,EAAA4vB,mBACA5vB,EAAAyG,MAAA0iE,GACAnpE,EAAA4gE,WACA5gE,EAAAksB,QACAlsB,EAAA8iE,cACA9iE,EAAAwuB,SACAxuB,EAAA8T,WACA9T,EAAA2F,UACA3F,EAAAytB,gBACAztB,EAAA0zC,YACA1zC,EAAA6N,UACA7N,EAAAyrE,eACAzrE,EAAAisB,gBACAjsB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","file":"anno.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Anno\"] = factory();\n\telse\n\t\troot[\"Anno\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Anno\"] = factory();\n\telse\n\t\troot[\"Anno\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 67);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bind = __webpack_require__(17);\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  typeof document.createElement -> undefined\n */\nfunction isStandardBrowserEnv() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined' &&\n    typeof document.createElement === 'function'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar require;\n\nvar ENV;\ntry {\n    ENV = window;\n} catch (e) {\n    ENV = process.env;\n}\nvar PREFIX = 'ANNO';\nvar PREFIX_RE = new RegExp('^' + PREFIX + '_');\nvar DEFAULTS = {\n    DEBUG: 'false',\n    // NEDB_DIR: __dirname + '/' + '../nedb',\n    STORE: '@kba/anno-store-file'\n};\n\nfunction loadConfig() {\n    var localDefaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\n    var CONFIG = JSON.parse(JSON.stringify(DEFAULTS));\n    Object.assign(CONFIG, JSON.parse(JSON.stringify(localDefaults)));\n\n    Object.keys(ENV).filter(function (k) {\n        return k.match(PREFIX_RE);\n    }).forEach(function (k) {\n        return CONFIG[k.replace(PREFIX_RE, '')] = ENV[k];\n    });\n\n    Object.keys(CONFIG).forEach(function (k) {\n        if (typeof CONFIG[k] === 'string' && CONFIG[k].match(/^true|false$/)) CONFIG[k] = CONFIG[k] !== 'false';\n        ENV[PREFIX + '_' + k] = CONFIG[k];\n    });\n\n    return CONFIG;\n}\n\nfunction getLogger(category) {\n    var isNode;try {\n        isNode = window !== undefined;\n    } catch (err) {\n        isNode = true;\n    }\n    var config = loadConfig({\n        LOGFILE: '',\n        LOGLEVEL: ''\n    });\n    var format = function format(level, message) {\n        // console.log(message)\n        if (typeof message !== 'string') message = JSON.stringify(message);\n        var timestamp = new Date().toISOString().substr(11).substr(0, 11);\n        return '# ' + level + ' [' + timestamp + '] ' + category + ' - ' + message;\n    };\n    var logEnabled = function logEnabled(level, cb) {\n        if (level.match(/debug/i) && config.LOGLEVEL.match(/(silly|debug)/i)) return cb();\n        if (level.match(/SILLY/i) && config.LOGLEVEL.match(/silly/i)) return cb();\n    };\n    if (isNode && config.LOGFILE !== '') {\n        // HACK XXX webpack\n        var fn = require;\n        var fs = __webpack_require__(22);\n        return {\n            silly: function silly() {\n                for (var _len = arguments.length, msgs = Array(_len), _key = 0; _key < _len; _key++) {\n                    msgs[_key] = arguments[_key];\n                }\n\n                return logEnabled('silly', function () {\n                    return msgs.forEach(function (msg) {\n                        return fs.appendFile(config.LOGFILE, format('SILLY', msg + '\\n'), function () {});\n                    });\n                });\n            },\n            debug: function debug() {\n                for (var _len2 = arguments.length, msgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    msgs[_key2] = arguments[_key2];\n                }\n\n                return logEnabled('debug', function () {\n                    return msgs.forEach(function (msg) {\n                        return fs.appendFile(config.LOGFILE, format('DEBUG', msg + '\\n'), function () {});\n                    });\n                });\n            }\n        };\n    }\n    return {\n        silly: function silly() {\n            for (var _len3 = arguments.length, msgs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                msgs[_key3] = arguments[_key3];\n            }\n\n            return logEnabled('SILLY', function () {\n                return msgs.forEach(function (msg) {\n                    return console[isNode ? 'log' : 'debug'](format('SILLY', msg));\n                });\n            });\n        },\n        debug: function debug() {\n            for (var _len4 = arguments.length, msgs = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                msgs[_key4] = arguments[_key4];\n            }\n\n            return logEnabled('DEBUG', function () {\n                return msgs.forEach(function (msg) {\n                    return console.log(format('DEBUG', msg));\n                });\n            });\n        }\n    };\n}\n\nmodule.exports = {\n    loadConfig: loadConfig,\n    getLogger: getLogger\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (true) {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = __webpack_require__(7)\n  , _ = __webpack_require__(4)\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') { \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(77);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(79);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(78);\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n    annotationNotFound: function annotationNotFound(id) {\n        var err = new Error(\"Annotation not found in store: \" + JSON.stringify(id));\n        err.code = 404;\n        return err;\n    },\n    revisionNotFound: function revisionNotFound(id, rev) {\n        var err = new Error(\"No revision '\" + rev + \"' for annotation '\" + id + \"'\");\n        err.code = 404;\n        return err;\n    },\n    readonlyValue: function readonlyValue(id, field) {\n        var err = new Error(\"Client must not change the '\" + field + \"' of annotation '\" + id + \"'\");\n        err.code = 409;\n        return err;\n    },\n    invalidAnnotation: function invalidAnnotation(anno, errors) {\n        var err = new Error(\"Annotation is invalid: \" + JSON.stringify({ anno: anno, errors: errors }, null, 2));\n        err.validationErrors = errors;\n        err.code = 415;\n        return err;\n    }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar slugid = __webpack_require__(62);\nvar async = __webpack_require__(61);\n\nvar _require = __webpack_require__(2),\n    loadConfig = _require.loadConfig,\n    getLogger = _require.getLogger;\n\nvar Store = function () {\n    _createClass(Store, null, [{\n        key: 'load',\n        value: function load(loadingModule) {\n            var config = loadConfig({\n                BASE_URL: 'http://ANNO_BASE_URL-NOT-SET',\n                STORE_MIDDLEWARES: ''\n            });\n            var log = __webpack_require__(2).getLogger('store');\n            if (!loadingModule) throw new Error(\"Must pass the loading module to Store.load\");\n            if (!config.STORE) throw new Error(\"No store configured. Set the ANNO_STORE env var or STORE config option.\");\n            if (config.DEBUG) console.log('Loading store ' + config.STORE + ' for ' + loadingModule.filename);\n\n            var impl;\n            try {\n                impl = loadingModule.require(config.STORE);\n            } catch (err) {\n                console.log(err);\n                console.error('Please install \\'' + config.STORE + '\\' configured as store');\n                process.exit(1);\n            }\n\n            var store = new impl();\n            var middlewareModules = config.STORE_MIDDLEWARES.split(',').map(function (s) {\n                return s.trim();\n            }).filter(function (s) {\n                return s !== '';\n            });\n            log.silly('middlewares', middlewareModules);\n            async.eachSeries(middlewareModules, function (middlewareModule, next) {\n                var middlewareImpl;\n                try {\n                    log.silly('Loading ' + middlewareModule);\n                    middlewareImpl = loadingModule.require(middlewareModule);\n                } catch (err) {\n                    console.log(err);\n                    console.error('Please install \\'' + middlewareModule + '\\' configured as middleware');\n                    process.exit(1);\n                }\n                store.use(middlewareImpl());\n                next();\n            });\n            return store;\n        }\n    }]);\n\n    function Store() {\n        _classCallCheck(this, Store);\n\n        this.config = loadConfig();\n        this.middlewares = [];\n        // console.log(this.config)\n        // console.error(\"Store.constructor called\")\n    }\n\n    _createClass(Store, [{\n        key: '_callMethod',\n        value: function _callMethod(ctx, cb) {\n            var _this = this;\n\n            var impl = '_' + ctx.method;\n            if (!(impl in this)) {\n                return cb(new Error(impl + ' not implemented'));\n            }\n            var log = getLogger('store');\n            log.silly('Calling method \\'' + ctx.method + '\\'', ctx);\n            async.eachSeries(this.middlewares, function (middleware, next) {\n                middleware(ctx, function process() {\n                    log.silly('ctx after ' + middleware.constructor.name, ctx);\n                    next.apply(undefined, arguments);\n                });\n            }, function (err, pass) {\n                if (err) return cb(err);\n                _this[impl](ctx, cb);\n            });\n        }\n\n        /**\n         * Use middleware for auth etc.\n         *\n         */\n\n    }, {\n        key: 'use',\n        value: function use(middleware) {\n            this.middlewares.push(middleware);\n        }\n\n        /**\n         * Initialize a connection to the store.\n         *\n         * @param {Options} options\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'init',\n        value: function init(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref = [options, {}];\n                cb = _ref[0];\n                options = _ref[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'init'\n            }), cb);\n        }\n\n        /**\n         * Wipe the store, revisions and all.\n         *\n         * @param {Options} options\n         * @param {String} options.user\n         * @param {function} callback\n         *\n         */\n\n    }, {\n        key: 'wipe',\n        value: function wipe(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref2 = [options, {}];\n                cb = _ref2[0];\n                options = _ref2[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'wipe'\n            }), cb);\n        }\n\n        /**\n         * Disconnect a store.\n         *\n         * A disconnected store cannot be used until `init` is called again.\n         *\n         * @param {Options} options\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'disconnect',\n        value: function disconnect(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref3 = [options, {}];\n                cb = _ref3[0];\n                options = _ref3[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'disconnect'\n            }), cb);\n        }\n\n        /**\n         * Retrieve an annotation.\n         *\n         * @param {String|Array<String>} annoIds\n         * @param {Options} options\n         * @param {Options} options.latest Return the latest revision\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'get',\n        value: function get(annoId, options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref4 = [options, {}];\n                cb = _ref4[0];\n                options = _ref4[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'get',\n                annoId: annoId\n            }), cb);\n        }\n\n        /**\n         * Create an annotation.\n         *\n         * @param {Object|Array<Object>} annosToCreate\n         * @param {Options} options\n         * @param String options.slug Proposal for the ID to create\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'create',\n        value: function create(annos, options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref5 = [options, {}];\n                cb = _ref5[0];\n                options = _ref5[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'create',\n                annos: annos\n            }), cb);\n        }\n\n        /**\n         * Revise an annotation.\n         *\n         * @param {String} annoId\n         * @param {Object} anno\n         * @param {Options} options\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'revise',\n        value: function revise(annoId, anno, options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref6 = [options, {}];\n                cb = _ref6[0];\n                options = _ref6[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'revise',\n                annoId: annoId,\n                anno: anno\n            }), cb);\n        }\n\n        /**\n         * Delete an annotation, i.e. set the deleted date.\n         *\n         * @param {String} annoId\n         * @param {Options} options\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete(annoId, options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref7 = [options, {}];\n                cb = _ref7[0];\n                options = _ref7[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'delete',\n                annoId: annoId\n            }), cb);\n        }\n\n        /**\n         * Search the store.\n         *\n         * @param {Object} query\n         * @param {Options} options\n         * @param {String} options.user\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'search',\n        value: function search(query, options, cb) {\n            if (typeof query === 'function') {\n                ;\n                var _ref8 = [query, {}, {}];\n                cb = _ref8[0];\n                query = _ref8[1];\n                options = _ref8[2];\n            }if (typeof options === 'function') {\n                ;\n                var _ref9 = [options, {}];\n                cb = _ref9[0];\n                options = _ref9[1];\n            }this._callMethod(Object.assign(options, {\n                method: 'search',\n                query: query\n            }), cb);\n        }\n\n        /*\n         * *********************************************************************\n         *\n         * Protected API\n         *\n         * *********************************************************************\n         */\n\n    }, {\n        key: '_idFromURL',\n        value: function _idFromURL(url) {\n            return url.replace(this.config.BASE_URL + '/anno/', '');\n        }\n\n        // TODO no idempotency of targets with normalization -> disabled for now\n\n    }, {\n        key: '_normalizeTarget',\n        value: function _normalizeTarget(annoDoc) {\n            if (!Array.isArray(annoDoc.target)) annoDoc.target = [annoDoc.target];\n            annoDoc.target = annoDoc.target.map(function (target) {\n                return typeof target === 'string' ? { source: target } : target;\n            });\n            if (annoDoc.target.length === 1) annoDoc.target = annoDoc.target[0];\n            return annoDoc;\n        }\n    }, {\n        key: '_normalizeType',\n        value: function _normalizeType(annoDoc) {\n            if (!('type' in annoDoc)) annoDoc.type = [];\n            if (!Array.isArray(annoDoc.type)) annoDoc.type = [annoDoc.type];\n            if (annoDoc.type.indexOf('Annotation') === -1) annoDoc.type.push('Annotation');\n            return annoDoc;\n        }\n    }, {\n        key: '_deleteId',\n        value: function _deleteId(anno) {\n            // delete anno._id\n            if (anno.id) {\n                anno.via = anno.id;\n                delete anno.id;\n            }\n            return anno;\n        }\n    }, {\n        key: '_genid',\n        value: function _genid() {\n            var slug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n            return slug + slugid.v4();\n        }\n    }]);\n\n    return Store;\n}();\n\nmodule.exports = Store;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar normalizeHeaderName = __webpack_require__(48);\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(13);\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(13);\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, setImmediate) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return async;\n        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(6).setImmediate))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar mustache = __webpack_require__(31);\nvar ajv = __webpack_require__(30)({\n    allErrors: true,\n    errorDataPath: true\n});\nvar config = __webpack_require__(2).loadConfig({\n    CONTEXT_URL: 'https://kba.github.io/anno/context.jsonld',\n\n    // Swagger / OpenAPI\n    OPENAPI_HOST: 'localhost:3000',\n    OPENAPI_BASEPATH: '/',\n    OPENAPI_PATH: 'anno'\n\n});\n\nfunction mustacheJSON(obj) {\n    return JSON.parse(mustache.render(JSON.stringify(obj), { config: config }));\n}\n\nvar dataModel = mustacheJSON(__webpack_require__(29));\nvar jsonldContext = mustacheJSON(__webpack_require__(28));\nvar openapi = mustacheJSON(__webpack_require__(32));\nopenapi.definitions = dataModel.definitions;\n\nmodule.exports = {\n    openapi: openapi,\n    definitions: dataModel.definitions,\n    jsonldContext: jsonldContext,\n    contentType: {\n        'anno': 'application/ld+json;profile=\"http://www.w3.org/ns/anno.jsonld\"',\n        'annox': 'application/ld+json;profile=\"http://www.w3.org/ns/anno.jsonld\"'\n    },\n    validate: {}\n};\n\nObject.keys(dataModel.definitions).forEach(function (k) {\n    var thisSchema = JSON.parse(JSON.stringify(dataModel.definitions[k]));\n    thisSchema.definitions = JSON.parse(JSON.stringify(dataModel.definitions));\n    module.exports.validate[k] = ajv.compile(thisSchema);\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar settle = __webpack_require__(40);\nvar buildURL = __webpack_require__(43);\nvar parseHeaders = __webpack_require__(49);\nvar isURLSameOrigin = __webpack_require__(47);\nvar createError = __webpack_require__(16);\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(42);\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (\"production\" !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(45);\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        if (request.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar enhanceError = __webpack_require__(39);\n\n/**\n * Create an Error with the specified message, config, error code, and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, response);\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Simple binary search tree\n */\nvar customUtils = __webpack_require__(19);\n\n\n/**\n * Constructor\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction BinarySearchTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n// ================================\n// Methods used to test the tree\n// ================================\n\n\n/**\n * Get the descendant with max key\n */\nBinarySearchTree.prototype.getMaxKeyDescendant = function () {\n  if (this.right) {\n    return this.right.getMaxKeyDescendant();\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the maximum key\n */\nBinarySearchTree.prototype.getMaxKey = function () {\n  return this.getMaxKeyDescendant().key;\n};\n\n\n/**\n * Get the descendant with min key\n */\nBinarySearchTree.prototype.getMinKeyDescendant = function () {\n  if (this.left) {\n    return this.left.getMinKeyDescendant()\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the minimum key\n */\nBinarySearchTree.prototype.getMinKey = function () {\n  return this.getMinKeyDescendant().key;\n};\n\n\n/**\n * Check that all nodes (incl. leaves) fullfil condition given by fn\n * test is a function passed every (key, data) and which throws if the condition is not met\n */\nBinarySearchTree.prototype.checkAllNodesFullfillCondition = function (test) {\n  if (!this.hasOwnProperty('key')) { return; }\n\n  test(this.key, this.data);\n  if (this.left) { this.left.checkAllNodesFullfillCondition(test); }\n  if (this.right) { this.right.checkAllNodesFullfillCondition(test); }\n};\n\n\n/**\n * Check that the core BST properties on node ordering are verified\n * Throw if they aren't\n */\nBinarySearchTree.prototype.checkNodeOrdering = function () {\n  var self = this;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) >= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.left.checkNodeOrdering();\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) <= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.right.checkNodeOrdering();\n  }\n};\n\n\n/**\n * Check that all pointers are coherent in this tree\n */\nBinarySearchTree.prototype.checkInternalPointers = function () {\n  if (this.left) {\n    if (this.left.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.left.checkInternalPointers();\n  }\n\n  if (this.right) {\n    if (this.right.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.right.checkInternalPointers();\n  }\n};\n\n\n/**\n * Check that a tree is a BST as defined here (node ordering and pointer references)\n */\nBinarySearchTree.prototype.checkIsBST = function () {\n  this.checkNodeOrdering();\n  this.checkInternalPointers();\n  if (this.parent) { throw new Error(\"The root shouldn't have a parent\"); }\n};\n\n\n/**\n * Get number of keys inserted\n */\nBinarySearchTree.prototype.getNumberOfKeys = function () {\n  var res;\n\n  if (!this.hasOwnProperty('key')) { return 0; }\n\n  res = 1;\n  if (this.left) { res += this.left.getNumberOfKeys(); }\n  if (this.right) { res += this.right.getNumberOfKeys(); }\n\n  return res;\n};\n\n\n\n// ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n/**\n * Create a BST similar (i.e. same options except for key and value) to the current one\n * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n * @param {Object} options see constructor\n */\nBinarySearchTree.prototype.createSimilar = function (options) {\n  options = options || {};\n  options.unique = this.unique;\n  options.compareKeys = this.compareKeys;\n  options.checkValueEquality = this.checkValueEquality;\n\n  return new this.constructor(options);\n};\n\n\n/**\n * Create the left child of this BST and return it\n */\nBinarySearchTree.prototype.createLeftChild = function (options) {\n  var leftChild = this.createSimilar(options);\n  leftChild.parent = this;\n  this.left = leftChild;\n\n  return leftChild;\n};\n\n\n/**\n * Create the right child of this BST and return it\n */\nBinarySearchTree.prototype.createRightChild = function (options) {\n  var rightChild = this.createSimilar(options);\n  rightChild.parent = this;\n  this.right = rightChild;\n\n  return rightChild;\n};\n\n\n/**\n * Insert a new element\n */\nBinarySearchTree.prototype.insert = function (key, value) {\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    return;\n  }\n\n  // Same key as root\n  if (this.compareKeys(this.key, key) === 0) {\n    if (this.unique) {\n      var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n      err.key = key;\n      err.errorType = 'uniqueViolated';\n      throw err;\n    } else {\n      this.data.push(value);\n    }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    // Insert in left subtree\n    if (this.left) {\n      this.left.insert(key, value);\n    } else {\n      this.createLeftChild({ key: key, value: value });\n    }\n  } else {\n    // Insert in right subtree\n    if (this.right) {\n      this.right.insert(key, value);\n    } else {\n      this.createRightChild({ key: key, value: value });\n    }\n  }\n};\n\n\n/**\n * Search for all data corresponding to a key\n */\nBinarySearchTree.prototype.search = function (key) {\n  if (!this.hasOwnProperty('key')) { return []; }\n\n  if (this.compareKeys(this.key, key) === 0) { return this.data; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      return this.left.search(key);\n    } else {\n      return [];\n    }\n  } else {\n    if (this.right) {\n      return this.right.search(key);\n    } else {\n      return [];\n    }\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches a lower bound\n */\nBinarySearchTree.prototype.getLowerBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$gt') && !query.hasOwnProperty('$gte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$gt') && query.hasOwnProperty('$gte')) {\n    if (self.compareKeys(query.$gte, query.$gt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n\n    if (self.compareKeys(query.$gte, query.$gt) > 0) {\n      return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$gt')) {\n    return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches an upper bound\n */\nBinarySearchTree.prototype.getUpperBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$lt') && !query.hasOwnProperty('$lte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$lt') && query.hasOwnProperty('$lte')) {\n    if (self.compareKeys(query.$lte, query.$lt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n\n    if (self.compareKeys(query.$lte, query.$lt) < 0) {\n      return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$lt')) {\n    return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n  }\n};\n\n\n// Append all elements in toAppend to array\nfunction append (array, toAppend) {\n  var i;\n\n  for (i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i]);\n  }\n}\n\n\n/**\n * Get all data for a key between bounds\n * Return it in key order\n * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n */\nBinarySearchTree.prototype.betweenBounds = function (query, lbm, ubm) {\n  var res = [];\n\n  if (!this.hasOwnProperty('key')) { return []; }   // Empty tree\n\n  lbm = lbm || this.getLowerBoundMatcher(query);\n  ubm = ubm || this.getUpperBoundMatcher(query);\n\n  if (lbm(this.key) && this.left) { append(res, this.left.betweenBounds(query, lbm, ubm)); }\n  if (lbm(this.key) && ubm(this.key)) { append(res, this.data); }\n  if (ubm(this.key) && this.right) { append(res, this.right.betweenBounds(query, lbm, ubm)); }\n\n  return res;\n};\n\n\n/**\n * Delete the current node if it is a leaf\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfLeaf = function () {\n  if (this.left || this.right) { return false; }\n\n  // The leaf is itself a root\n  if (!this.parent) {\n    delete this.key;\n    this.data = [];\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = null;\n  } else {\n    this.parent.right = null;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete the current node if it has only one child\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfOnlyOneChild = function () {\n  var child;\n\n  if (this.left && !this.right) { child = this.left; }\n  if (!this.left && this.right) { child = this.right; }\n  if (!child) { return false; }\n\n  // Root\n  if (!this.parent) {\n    this.key = child.key;\n    this.data = child.data;\n\n    this.left = null;\n    if (child.left) {\n      this.left = child.left;\n      child.left.parent = this;\n    }\n\n    this.right = null;\n    if (child.right) {\n      this.right = child.right;\n      child.right.parent = this;\n    }\n\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = child;\n    child.parent = this.parent;\n  } else {\n    this.parent.right = child;\n    child.parent = this.parent;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete a key or just a value\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\nBinarySearchTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    ;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) { this.left.delete(key, value); }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) > 0) {\n    if (this.right) { this.right.delete(key, value); }\n    return;\n  }\n\n  if (!this.compareKeys(key, this.key) === 0) { return; }\n\n  // Delete only a value\n  if (this.data.length > 1 && value !== undefined) {\n    this.data.forEach(function (d) {\n      if (!self.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    self.data = newData;\n    return;\n  }\n\n  // Delete the whole node\n  if (this.deleteIfLeaf()) {\n    return;\n  }\n  if (this.deleteIfOnlyOneChild()) {\n    return;\n  }\n\n  // We are in the case where the node to delete has two children\n  if (Math.random() >= 0.5) {   // Randomize replacement to avoid unbalancing the tree too much\n    // Use the in-order predecessor\n    replaceWith = this.left.getMaxKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.left = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.right = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    }\n  } else {\n    // Use the in-order successor\n    replaceWith = this.right.getMinKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.right = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.left = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    }\n  }\n};\n\n\n/**\n * Execute a function on every node of the tree, in key order\n * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n */\nBinarySearchTree.prototype.executeOnEveryNode = function (fn) {\n  if (this.left) { this.left.executeOnEveryNode(fn); }\n  fn(this);\n  if (this.right) { this.right.executeOnEveryNode(fn); }\n};\n\n\n/**\n * Pretty print a tree\n * @param {Boolean} printData To print the nodes' data along with the key\n */\nBinarySearchTree.prototype.prettyPrint = function (printData, spacing) {\n  spacing = spacing || \"\";\n\n  console.log(spacing + \"* \" + this.key);\n  if (printData) { console.log(spacing + \"* \" + this.data); }\n\n  if (!this.left && !this.right) { return; }\n\n  if (this.left) {\n    this.left.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n  if (this.right) {\n    this.right.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n};\n\n\n\n\n// Interface\nmodule.exports = BinarySearchTree;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/**\n * Specific customUtils for the browser, where we don't have access to the Crypto and Buffer modules\n */\n\n/**\n * Taken from the crypto-browserify module\n * https://github.com/dominictarr/crypto-browserify\n * NOTE: Math.random() does not guarantee \"cryptographic quality\" but we actually don't need it\n */\nfunction randomBytes (size) {\n  var bytes = new Array(size);\n  var r;\n\n  for (var i = 0, r; i < size; i++) {\n    if ((i & 0x03) == 0) r = Math.random() * 0x100000000;\n    bytes[i] = r >>> ((i & 0x03) << 3) & 0xff;\n  }\n\n  return bytes;\n}\n\n\n/**\n * Taken from the base64-js module\n * https://github.com/beatgammit/base64-js/\n */\nfunction byteArrayToBase64 (uint8) {\n  var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    , extraBytes = uint8.length % 3   // if we have 1 byte left, pad 2 bytes\n    , output = \"\"\n    , temp, length, i;\n\n  function tripletToBase64 (num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  };\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output += tripletToBase64(temp);\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  switch (extraBytes) {\n    case 1:\n      temp = uint8[uint8.length - 1];\n      output += lookup[temp >> 2];\n      output += lookup[(temp << 4) & 0x3F];\n      output += '==';\n      break;\n    case 2:\n      temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n      output += lookup[temp >> 10];\n      output += lookup[(temp >> 4) & 0x3F];\n      output += lookup[(temp << 2) & 0x3F];\n      output += '=';\n      break;\n  }\n\n  return output;\n}\n\n\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n */\nfunction uid (len) {\n  return byteArrayToBase64(randomBytes(Math.ceil(Math.max(8, len * 2)))).replace(/[+\\/]/g, '').slice(0, len);\n}\n\n\n\nmodule.exports.uid = uid;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BinarySearchTree = __webpack_require__(51).AVLTree\n  , model = __webpack_require__(5)\n  , _ = __webpack_require__(4)\n  , util = __webpack_require__(7)\n  ;\n\n/**\n * Two indexed pointers are equal iif they point to the same place\n */\nfunction checkValueEquality (a, b) {\n  return a === b;\n}\n\n/**\n * Type-aware projection\n */\nfunction projectForUnique (elt) {\n  if (elt === null) { return '$null'; }\n  if (typeof elt === 'string') { return '$string' + elt; }\n  if (typeof elt === 'boolean') { return '$boolean' + elt; }\n  if (typeof elt === 'number') { return '$number' + elt; }\n  if (util.isArray(elt)) { return '$date' + elt.getTime(); }\n\n  return elt;   // Arrays and objects, will check for pointer equality\n}\n\n\n/**\n * Create a new index\n * All methods on an index guarantee that either the whole operation was successful and the index changed\n * or the operation was unsuccessful and an error is thrown while the index is unchanged\n * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)\n * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)\n */\nfunction Index (options) {\n  this.fieldName = options.fieldName;\n  this.unique = options.unique || false;\n  this.sparse = options.sparse || false;\n\n  this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality };\n\n  this.reset();   // No data in the beginning\n}\n\n\n/**\n * Reset an index\n * @param {Document or Array of documents} newData Optional, data to initialize the index with\n *                                                 If an error is thrown during insertion, the index is not modified\n */\nIndex.prototype.reset = function (newData) {\n  this.tree = new BinarySearchTree(this.treeOptions);\n\n  if (newData) { this.insert(newData); }\n};\n\n\n/**\n * Insert a new document in the index\n * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n * O(log(n))\n */\nIndex.prototype.insert = function (doc) {\n  var key, self = this\n    , keys, i, failingI, error\n    ;\n\n  if (util.isArray(doc)) { this.insertMultipleDocs(doc); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  // We don't index documents that don't contain the field if the index is sparse\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.insert(key, doc);\n  } else {\n    // If an insert fails due to a unique constraint, roll back all inserts before it\n    keys = _.uniq(key, projectForUnique);\n\n    for (i = 0; i < keys.length; i += 1) {\n      try {\n        this.tree.insert(keys[i], doc);\n      } catch (e) {\n        error = e;\n        failingI = i;\n        break;\n      }\n    }\n\n    if (error) {\n      for (i = 0; i < failingI; i += 1) {\n        this.tree.delete(keys[i], doc);\n      }\n\n      throw error;\n    }\n  }\n};\n\n\n/**\n * Insert an array of documents in the index\n * If a constraint is violated, the changes should be rolled back and an error thrown\n *\n * @API private\n */\nIndex.prototype.insertMultipleDocs = function (docs) {\n  var i, error, failingI;\n\n  for (i = 0; i < docs.length; i += 1) {\n    try {\n      this.insert(docs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(docs[i]);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove a document from the index\n * If an array is passed, we remove all its elements\n * The remove operation is safe with regards to the 'unique' constraint\n * O(log(n))\n */\nIndex.prototype.remove = function (doc) {\n  var key, self = this;\n\n  if (util.isArray(doc)) { doc.forEach(function (d) { self.remove(d); }); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.delete(key, doc);\n  } else {\n    _.uniq(key, projectForUnique).forEach(function (_key) {\n      self.tree.delete(_key, doc);\n    });\n  }\n};\n\n\n/**\n * Update a document in the index\n * If a constraint is violated, changes are rolled back and an error thrown\n * Naive implementation, still in O(log(n))\n */\nIndex.prototype.update = function (oldDoc, newDoc) {\n  if (util.isArray(oldDoc)) { this.updateMultipleDocs(oldDoc); return; }\n\n  this.remove(oldDoc);\n\n  try {\n    this.insert(newDoc);\n  } catch (e) {\n    this.insert(oldDoc);\n    throw e;\n  }\n};\n\n\n/**\n * Update multiple documents in the index\n * If a constraint is violated, the changes need to be rolled back\n * and an error thrown\n * @param {Array of oldDoc, newDoc pairs} pairs\n *\n * @API private\n */\nIndex.prototype.updateMultipleDocs = function (pairs) {\n  var i, failingI, error;\n\n  for (i = 0; i < pairs.length; i += 1) {\n    this.remove(pairs[i].oldDoc);\n  }\n\n  for (i = 0; i < pairs.length; i += 1) {\n    try {\n      this.insert(pairs[i].newDoc);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  // If an error was raised, roll back changes in the inverse order\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(pairs[i].newDoc);\n    }\n\n    for (i = 0; i < pairs.length; i += 1) {\n      this.insert(pairs[i].oldDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Revert an update\n */\nIndex.prototype.revertUpdate = function (oldDoc, newDoc) {\n  var revert = [];\n\n  if (!util.isArray(oldDoc)) {\n    this.update(newDoc, oldDoc);\n  } else {\n    oldDoc.forEach(function (pair) {\n      revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc });\n    });\n    this.update(revert);\n  }\n};\n\n\n/**\n * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n * @param {Thing} value Value to match the key against\n * @return {Array of documents}\n */\nIndex.prototype.getMatching = function (value) {\n  var self = this;\n\n  if (!util.isArray(value)) {\n    return self.tree.search(value);\n  } else {\n    var _res = {}, res = [];\n\n    value.forEach(function (v) {\n      self.getMatching(v).forEach(function (doc) {\n        _res[doc._id] = doc;\n      });\n    });\n\n    Object.keys(_res).forEach(function (_id) {\n      res.push(_res[_id]);\n    });\n\n    return res;\n  }\n};\n\n\n/**\n * Get all documents in index whose key is between bounds are they are defined by query\n * Documents are sorted by key\n * @param {Query} query\n * @return {Array of documents}\n */\nIndex.prototype.getBetweenBounds = function (query) {\n  return this.tree.betweenBounds(query);\n};\n\n\n/**\n * Get all elements in the index\n * @return {Array of documents}\n */\nIndex.prototype.getAll = function () {\n  var res = [];\n\n  this.tree.executeOnEveryNode(function (node) {\n    var i;\n\n    for (i = 0; i < node.data.length; i += 1) {\n      res.push(node.data[i]);\n    }\n  });\n\n  return res;\n};\n\n\n\n\n// Interface\nmodule.exports = Index;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _require = __webpack_require__(2),\n    loadConfig = _require.loadConfig;\n\nmodule.exports = function () {\n    var config = __webpack_require__(2).loadConfig({\n        BASICAUTH_USERNAME: '',\n        BASICAUTH_PASSWORD: ''\n    });\n    return function BasicAuthMiddleware(ctx, cb) {\n        if (!config.BASICAUTH_USERNAME) return cb(new Error(\"ANNO_BASICAUTH_USERNAME not set\"));\n        ctx.auth = ctx.auth || {};['username', 'password'].forEach(function (k) {\n            ctx.auth[k] = config[('BASICAUTH_' + k).toUpperCase()];\n        });\n        cb();\n    };\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _require = __webpack_require__(2),\n    loadConfig = _require.loadConfig;\n\nmodule.exports = function () {\n    var config = loadConfig({ HTTPHEADERS: '' });\n    return function HttpHeaderMiddleware(ctx, cb) {\n        if (!config.HTTPHEADERS) return cb();\n        ctx.httpHeaders = ctx.httpHeaders || {};\n        config.HTTPHEADERS.trim().split(/\\s*[|\\n]+\\s*/g).map(function (kv) {\n            return kv.trim();\n        }).map(function (kv) {\n            return kv.split(/\\s*:\\s*/);\n        }).map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                k = _ref2[0],\n                v = _ref2[1];\n\n            return ctx.httpHeaders[k.trim()] = v.trim();\n        });\n        cb();\n    };\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar axios = __webpack_require__(33);\nvar Store = __webpack_require__(9);\nvar errors = __webpack_require__(8);\nvar querystring = __webpack_require__(76);\n\nvar _require = __webpack_require__(2),\n    loadConfig = _require.loadConfig,\n    getLogger = _require.getLogger;\n\nvar HttpStore = function (_Store) {\n    _inherits(HttpStore, _Store);\n\n    function HttpStore() {\n        _classCallCheck(this, HttpStore);\n\n        var _this = _possibleConstructorReturn(this, (HttpStore.__proto__ || Object.getPrototypeOf(HttpStore)).call(this));\n\n        _this.config = loadConfig({\n            BASE_URL: 'http://localhost:3000/anno'\n        });\n        var options = {\n            baseURL: _this.config.BASE_URL\n        };\n        _this._httpClient = axios.create(options);\n        return _this;\n    }\n\n    /* @override */\n\n\n    _createClass(HttpStore, [{\n        key: '_init',\n        value: function _init(options, cb) {\n            return cb();\n        }\n\n        /* @override */\n\n    }, {\n        key: '_create',\n        value: function _create(options, cb) {\n            var annos = options.annos;\n\n            this._httpClient.post('/', annos, this._configFromOptions(options)).then(function (resp) {\n                return cb(null, resp.data);\n            }).catch(function (err) {\n                return cb(err.statusCode);\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_get',\n        value: function _get(options, cb) {\n            var annoId = options.annoId;\n\n            var annoUrl = annoId.match('//') ? annoId : '/' + annoId;\n            this._httpClient.get(annoUrl, this._configFromOptions(options)).then(function (resp) {\n                return cb(null, resp.data);\n            }).catch(function (err) {\n                if (err.response.status === 404) {\n                    return cb(errors.annotationNotFound(annoUrl));\n                }\n                return cb(err.response.data);\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_search',\n        value: function _search(options, cb) {\n            var query = options.query;\n\n            this._httpClient.get('/' + '?' + querystring.stringify(query), this._configFromOptions(options)).then(function (resp) {\n                var col = resp.data;\n                if (col.total === 0) {\n                    return [];\n                } else {\n                    cb(null, col.first.items);\n                }\n            }).catch(function (err) {\n                return cb(err.statusCode);\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_revise',\n        value: function _revise(options, cb) {\n            var annoId = options.annoId,\n                anno = options.anno;\n\n            var annoUrl = annoId.match('//') ? annoId : '/' + annoId;\n            this._httpClient.put(annoUrl, anno, this._configFromOptions(options)).then(function (resp) {\n                return cb(null, resp.data);\n            }).catch(function (err) {\n                if (err.response.status === 404) {\n                    return cb(errors.annotationNotFound(annoUrl));\n                }\n                return cb(err.response.data);\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_delete',\n        value: function _delete(options, cb) {\n            var annoId = options.annoId;\n\n            var annoUrl = annoId.match('//') ? annoId : '/' + annoId;\n            this._httpClient.delete(annoUrl, this._configFromOptions(options)).then(function () {\n                return cb();\n            }).catch(function (err) {\n                if (err.response.status === 404) {\n                    return cb(errors.annotationNotFound(annoUrl));\n                }\n                return cb(err.response.data);\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_wipe',\n        value: function _wipe(options, cb) {\n            return this._httpClient.delete('/', this._configFromOptions(options)).then(function () {\n                return cb();\n            }).catch(function (err) {\n                return cb(err.statusCode);\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_disconnect',\n        value: function _disconnect(options, cb) {\n            return cb();\n        }\n\n        // ----------------------------------------\n        // PRIVATE\n        // ----------------------------------------\n\n    }, {\n        key: '_configFromOptions',\n        value: function _configFromOptions(options) {\n            var ret = {};\n            // BasicAuth\n            if (options.auth && options.auth.username) {\n                ret.auth = ret.auth || {};\n                ret.auth.username = options.auth.username;\n                ret.auth.password = options.auth.password;\n            }\n            // Custom Headers\n            if (options.httpHeaders) {\n                ret.headers = ret.headers || {};\n                Object.assign(ret.headers, options.httpHeaders);\n            }\n            var log = getLogger('store-http');\n            log.silly(\"axios config from options\", ret);\n            return ret;\n        }\n    }]);\n\n    return HttpStore;\n}(Store);\n\nmodule.exports = HttpStore;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar nedb = __webpack_require__(55);\nvar fs = __webpack_require__(22);\nvar Store = __webpack_require__(66);\n\nvar MemoryStore = function (_Store) {\n    _inherits(MemoryStore, _Store);\n\n    function MemoryStore() {\n        _classCallCheck(this, MemoryStore);\n\n        var _this = _possibleConstructorReturn(this, (MemoryStore.__proto__ || Object.getPrototypeOf(MemoryStore)).call(this));\n\n        _this.db = new nedb({});\n        return _this;\n    }\n\n    _createClass(MemoryStore, [{\n        key: '_init',\n        value: function _init(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref = [options, {}];\n                cb = _ref[0];\n                options = _ref[1];\n            }this.db.loadDatabase(function (err) {\n                if (err) return cb(err);\n                return cb();\n            });\n        }\n    }, {\n        key: '_wipe',\n        value: function _wipe(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref2 = [options, {}];\n                cb = _ref2[0];\n                options = _ref2[1];\n            }this.db = new nedb({});\n            return this.init(options, cb);\n        }\n    }]);\n\n    return MemoryStore;\n}(Store);\n\nmodule.exports = MemoryStore;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"@context\": [\n\t\t\"http://www.w3.org/ns/anno.jsonld\",\n\t\t{\n\t\t\t\"annox\": \"https://github.com/kba/anno/context.jsonld\",\n\t\t\t\"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n\t\t\t\"sioc\": \"http://rdfs.org/sioc/ns#\",\n\t\t\t\"AnnotationRevision\": {\n\t\t\t\t\"@id\": \"annox:AnnotationRevision\",\n\t\t\t\t\"rdfs:subClassOf\": \"oa:Annotation\"\n\t\t\t},\n\t\t\t\"AnnotationReply\": {\n\t\t\t\t\"@id\": \"annox:AnnotationReply\",\n\t\t\t\t\"rdfs:subClassOf\": \"oa:Annotation\"\n\t\t\t},\n\t\t\t\"hasReply\": {\n\t\t\t\t\"@id\": \"annox:hasReply\",\n\t\t\t\t\"@type\": \"@id\",\n\t\t\t\t\"rdfs:subClassOf\": \"sioc:has_reply\",\n\t\t\t\t\"rdfs:domain\": \"oa:Annotation\",\n\t\t\t\t\"rdfs:range\": \"annox:AnnotationComment\"\n\t\t\t},\n\t\t\t\"replyTo\": {\n\t\t\t\t\"@id\": \"annox:replyTo\",\n\t\t\t\t\"@type\": \"@id\",\n\t\t\t\t\"rdfs:subClassOf\": \"sioc:reply_to\",\n\t\t\t\t\"rdfs:domain\": \"annox:AnnotationComment\",\n\t\t\t\t\"rdfs:range\": \"oa:Annotation\"\n\t\t\t},\n\t\t\t\"hasVersion\": {\n\t\t\t\t\"@id\": \"http://purl.org/pav/hasVersion\",\n\t\t\t\t\"@type\": \"@id\"\n\t\t\t},\n\t\t\t\"versionOf\": {\n\t\t\t\t\"@id\": \"annox:versionOf\",\n\t\t\t\t\"@type\": \"@id\"\n\t\t\t},\n\t\t\t\"deleted\": \"schema:dateDeleted\"\n\t\t}\n\t]\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"definitions\": {\n\t\t\"xsd_dateTime\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"format\": \"date-time\"\n\t\t},\n\t\t\"iri\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"format\": \"uri\"\n\t\t},\n\t\t\"iri_object\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"id\"\n\t\t\t],\n\t\t\t\"additionalProperties\": false,\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"mediaType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \".*/.*\"\n\t\t},\n\t\t\"language\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \"[a-z]{2,3}\"\n\t\t},\n\t\t\"textDirection\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [\n\t\t\t\t\"\",\n\t\t\t\t\"ltr\",\n\t\t\t\t\"rtl\",\n\t\t\t\t\"auto\"\n\t\t\t]\n\t\t},\n\t\t\"Annotation\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationMetadata\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"target\"\n\t\t\t\t\t],\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"canonical\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"via\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"styledBy\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/CssStylesheet\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"body\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/TextualBody\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Choice\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/TextualBody\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Choice\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"target\": {\n\t\t\t\t\t\t\t\"anyOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"anyOf\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"Resource\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"anyOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"id\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"format\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/mediaType\"\n\t\t\t\t},\n\t\t\t\t\"language\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/language\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/language\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"processingLanguage\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/language\"\n\t\t\t\t},\n\t\t\t\t\"textDirection\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/textDirection\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/ResourceClass\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/ResourceClass\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"TargetResource\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"renderedVia\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Software\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"styleClass\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"source\": {\n\t\t\t\t\t\t\t\"allOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"default\": \"http://foo\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"scope\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"selector\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"AnnotationMetadata\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"created\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"modified\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"generated\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"creator\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Person\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"generator\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Software\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"ResourceClass\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [\n\t\t\t\t\"Dataset\",\n\t\t\t\t\"Image\",\n\t\t\t\t\"Video\",\n\t\t\t\t\"Sound\",\n\t\t\t\t\"Text\"\n\t\t\t]\n\t\t},\n\t\t\"TextualBody\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TextualBody\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"format\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/mediaType\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Choice\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"Choice\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"items\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"minItems\": 1,\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"anyOf\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/TextualBody\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Motivation\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [\n\t\t\t\t\"bookmarking\",\n\t\t\t\t\"classifying\",\n\t\t\t\t\"commenting\",\n\t\t\t\t\"describing\",\n\t\t\t\t\"editing\",\n\t\t\t\t\"highlighting\",\n\t\t\t\t\"identifying\",\n\t\t\t\t\"linking\",\n\t\t\t\t\"moderating\",\n\t\t\t\t\"questioning\",\n\t\t\t\t\"replying\",\n\t\t\t\t\"tagging\"\n\t\t\t]\n\t\t},\n\t\t\"Agent\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"id\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"Person\",\n\t\t\t\t\t\t\"Organization\",\n\t\t\t\t\t\t\"Software\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"nickname\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"email\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"format\": \"email\"\n\t\t\t\t},\n\t\t\t\t\"email_sha1\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"homepage\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Person\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/Agent\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"Person\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"name\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"SpecificResource\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"anyOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"purpose\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"selector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"styleClass\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"state\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"scope\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"SpecificResource\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"styleClass\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"source\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"purpose\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Motivation\"\n\t\t\t\t},\n\t\t\t\t\"scope\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"accessibility\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"state\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri_object\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/State\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri_object\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/State\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"selector\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Selector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"oneOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/FragmentSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/CssSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/XPathSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/TextQuoteSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/TextPositionSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/DataPositionSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/SvgSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/RangeSelector\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"FragmentSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"FragmentSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"conformsTo\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3236\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3778\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc5147\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3023\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3870\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc7111\",\n\t\t\t\t\t\t\"http://www.w3.org/TR/media-frags/\",\n\t\t\t\t\t\t\"http://www.w3.org/TR/SVG/\",\n\t\t\t\t\t\t\"http://www.idpf.org/epub/linking/cfi/epub-cfi.html\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"CssSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"CssSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"XPathSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"XPathSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"TextQuoteSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"exact\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TextQuoteSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"exact\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"suffix\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"TextPositionSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"start\",\n\t\t\t\t\"end\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TextPositionSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"start\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"end\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"DataPositionSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"start\",\n\t\t\t\t\"end\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"DataPositionSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"start\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"end\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"SvgSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"oneOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"id\",\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"value\",\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"SvgSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"RangeSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"startSelector\",\n\t\t\t\t\"endSelector\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"RangeSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"startSelector\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t},\n\t\t\t\t\"endSelector\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"State\": {\n\t\t\t\"oneOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/TimeState\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/HttpRequestState\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TimeState\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TimeState\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"sourceDate\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"sourceDateStart\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"sourceDateEnd\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"cached\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"HttpRequestState\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"HttpRequestState\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"CssStylesheet\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"CssStylesheet\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Software\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/Agent\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"id\",\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t],\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"Software\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"schema:softwareVersion\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"AnnotationCollection\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"id\",\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"@context\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"AnnotationCollection\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"AnnotationCollection\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"total\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"first\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationPage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"last\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationPage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"AnnotationPage\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"@context\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"AnnotationPage\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"AnnotationPage\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"partOf\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationPage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"items\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/* ajv 4.11.5: Another JSON Schema Validator */\n!function(e){if(true)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r;r=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,r.Ajv=e()}}(function(){var e;return function e(r,t,a){function s(i,n){if(!t[i]){if(!r[i]){var l=\"function\"==typeof require&&require;if(!n&&l)return require(i,!0);if(o)return o(i,!0);var c=new Error(\"Cannot find module '\"+i+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var h=t[i]={exports:{}};r[i][0].call(h.exports,function(e){var t=r[i][1][e];return s(t?t:e)},h,h.exports,e,r,t,a)}return t[i].exports}for(var o=\"function\"==typeof require&&require,i=0;i<a.length;i++)s(a[i]);return s}({1:[function(e,r,t){\"use strict\";function a(e,r){r!==!1&&(r=!0);var t,s=e.async,o=e.transpile;switch(typeof o){case\"string\":var i=m[o];if(!i)throw new Error(\"bad transpiler: \"+o);return e._transpileFunc=i(e,r);case\"undefined\":case\"boolean\":if(\"string\"==typeof s){if(t=p[s],!t)throw new Error(\"bad async mode: \"+s);return e.transpile=t(e,r)}for(var n=0;n<v.length;n++){var l=v[n];if(a(l,!1))return d.copy(l,e),e.transpile}throw new Error(\"generators, nodent and regenerator are not available\");case\"function\":return e._transpileFunc=e.transpile;default:throw new Error(\"bad transpiler: \"+o)}}function s(e,r){try{return new Function(\"(function*(){})()\")(),!0}catch(e){if(r)throw new Error(\"generators not supported\")}}function o(e,r){try{return new Function(\"(async function(){})()\")(),!0}catch(e){if(r)throw new Error(\"es7 async functions not supported\")}}function i(r,t){try{if(!u){u=e(\"regenerator\"),u.runtime()}return r.async&&r.async!==!0||(r.async=\"es7\"),n}catch(e){if(t)throw new Error(\"regenerator not available\")}}function n(e){return u.compile(e).code}function l(r,t){try{if(!f){f=e(\"nodent\")({log:!1,dontInstallRequireHook:!0})}return\"es7\"!=r.async&&(r.async&&r.async!==!0&&console.warn(\"nodent transpiles only es7 async functions\"),r.async=\"es7\"),c}catch(e){if(t)throw new Error(\"nodent not available\")}}function c(e){return f.compile(e,\"\",{promises:!0,sourcemap:!1}).code}function h(e,r){function t(e,r,a){function o(a){function o(a,o){if(a)return r(a);if(!s._refs[i]&&!s._schemas[i])try{s.addSchema(o,i)}catch(e){return void r(e)}t(e,r)}var i=a.missingSchema;if(s._refs[i]||s._schemas[i])return r(new Error(\"Schema \"+i+\" is loaded but \"+a.missingRef+\" cannot be resolved\"));var n=s._loadingSchemas[i];n?\"function\"==typeof n?s._loadingSchemas[i]=[n,o]:n[n.length]=o:(s._loadingSchemas[i]=o,s._opts.loadSchema(i,function(e,r){var t=s._loadingSchemas[i];if(delete s._loadingSchemas[i],\"function\"==typeof t)t(e,r);else for(var a=0;a<t.length;a++)t[a](e,r)}))}function i(e,t){if(!a)return r(e,t);setTimeout(function(){r(e,t)})}var n;try{n=s.compile(e)}catch(e){return void(e.missingSchema?o(e):i(e))}i(null,n)}var a,s=this;try{a=this._addSchema(e)}catch(e){return void setTimeout(function(){r(e)})}if(a.validate)setTimeout(function(){r(null,a.validate)});else{if(\"function\"!=typeof this._opts.loadSchema)throw new Error(\"options.loadSchema should be a function\");t(e,r,!0)}}r.exports={setup:a,compile:h};var u,f,d=e(\"./compile/util\"),p={\"*\":s,\"co*\":s,es7:o},m={nodent:l,regenerator:i},v=[{async:\"co*\"},{async:\"es7\",transpile:\"nodent\"},{async:\"co*\",transpile:\"regenerator\"}]},{\"./compile/util\":11}],2:[function(e,r,t){\"use strict\";var a=r.exports=function(){this._cache={}};a.prototype.put=function(e,r){this._cache[e]=r},a.prototype.get=function(e){return this._cache[e]},a.prototype.del=function(e){delete this._cache[e]},a.prototype.clear=function(){this._cache={}}},{}],3:[function(e,r,t){\"use strict\";r.exports={$ref:e(\"../dotjs/ref\"),allOf:e(\"../dotjs/allOf\"),anyOf:e(\"../dotjs/anyOf\"),dependencies:e(\"../dotjs/dependencies\"),enum:e(\"../dotjs/enum\"),format:e(\"../dotjs/format\"),items:e(\"../dotjs/items\"),maximum:e(\"../dotjs/_limit\"),minimum:e(\"../dotjs/_limit\"),maxItems:e(\"../dotjs/_limitItems\"),minItems:e(\"../dotjs/_limitItems\"),maxLength:e(\"../dotjs/_limitLength\"),minLength:e(\"../dotjs/_limitLength\"),maxProperties:e(\"../dotjs/_limitProperties\"),minProperties:e(\"../dotjs/_limitProperties\"),multipleOf:e(\"../dotjs/multipleOf\"),not:e(\"../dotjs/not\"),oneOf:e(\"../dotjs/oneOf\"),pattern:e(\"../dotjs/pattern\"),properties:e(\"../dotjs/properties\"),required:e(\"../dotjs/required\"),uniqueItems:e(\"../dotjs/uniqueItems\"),validate:e(\"../dotjs/validate\")}},{\"../dotjs/_limit\":14,\"../dotjs/_limitItems\":15,\"../dotjs/_limitLength\":16,\"../dotjs/_limitProperties\":17,\"../dotjs/allOf\":18,\"../dotjs/anyOf\":19,\"../dotjs/dependencies\":22,\"../dotjs/enum\":23,\"../dotjs/format\":24,\"../dotjs/items\":25,\"../dotjs/multipleOf\":26,\"../dotjs/not\":27,\"../dotjs/oneOf\":28,\"../dotjs/pattern\":29,\"../dotjs/properties\":31,\"../dotjs/ref\":32,\"../dotjs/required\":33,\"../dotjs/uniqueItems\":35,\"../dotjs/validate\":36}],4:[function(e,r,t){\"use strict\";r.exports=function e(r,t){if(r===t)return!0;var a,s=Array.isArray(r),o=Array.isArray(t);if(s&&o){if(r.length!=t.length)return!1;for(a=0;a<r.length;a++)if(!e(r[a],t[a]))return!1;return!0}if(s!=o)return!1;if(r&&t&&\"object\"==typeof r&&\"object\"==typeof t){var i=Object.keys(r);if(i.length!==Object.keys(t).length)return!1;var n=r instanceof Date,l=t instanceof Date;if(n&&l)return r.getTime()==t.getTime();if(n!=l)return!1;var c=r instanceof RegExp,h=t instanceof RegExp;if(c&&h)return r.toString()==t.toString();if(c!=h)return!1;for(a=0;a<i.length;a++)if(!Object.prototype.hasOwnProperty.call(t,i[a]))return!1;for(a=0;a<i.length;a++)if(!e(r[i[a]],t[i[a]]))return!1;return!0}return!1}},{}],5:[function(e,r,t){\"use strict\";function a(e){e=\"full\"==e?\"full\":\"fast\";var r=d.copy(a[e]);for(var t in a.compare)r[t]={validate:r[t],compare:a.compare[t]};return r}function s(e){var r=e.match(p);if(!r)return!1;var t=+r[1],a=+r[2];return t>=1&&t<=12&&a>=1&&a<=m[t]}function o(e,r){var t=e.match(v);if(!t)return!1;var a=t[1],s=t[2],o=t[3],i=t[5];return a<=23&&s<=59&&o<=59&&(!r||i)}function i(e){var r=e.split(w);return 2==r.length&&s(r[0])&&o(r[1],!0)}function n(e){return e.length<=255&&y.test(e)}function l(e){return j.test(e)&&g.test(e)}function c(e){try{return new RegExp(e),!0}catch(e){return!1}}function h(e,r){if(e&&r)return e>r?1:e<r?-1:e===r?0:void 0}function u(e,r){if(e&&r&&(e=e.match(v),r=r.match(v),e&&r))return e=e[1]+e[2]+e[3]+(e[4]||\"\"),r=r[1]+r[2]+r[3]+(r[4]||\"\"),e>r?1:e<r?-1:e===r?0:void 0}function f(e,r){if(e&&r){e=e.split(w),r=r.split(w);var t=h(e[0],r[0]);if(void 0!==t)return t||u(e[1],r[1])}}var d=e(\"./util\"),p=/^\\d\\d\\d\\d-(\\d\\d)-(\\d\\d)$/,m=[0,31,29,31,30,31,30,31,31,30,31,30,31],v=/^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i,y=/^[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i,g=/^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?(?:\\#(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?$/i,P=/^(?:urn\\:uuid\\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,E=/^(?:\\/(?:[^~\\/]|~0|~1)*)*$|^\\#(?:\\/(?:[a-z0-9_\\-\\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,b=/^(?:0|[1-9][0-9]*)(?:\\#|(?:\\/(?:[^~\\/]|~0|~1)*)*)$/;r.exports=a,a.fast={date:/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,time:/^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\"date-time\":/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,uri:/^(?:[a-z][a-z0-9+-.]*)?(?:\\:|\\/)\\/?[^\\s]*$/i,email:/^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:y,ipv4:/^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,ipv6:/^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,regex:c,uuid:P,\"json-pointer\":E,\"relative-json-pointer\":b},a.full={date:s,time:o,\"date-time\":i,uri:l,email:/^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&''*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:n,ipv4:/^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,ipv6:/^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,regex:c,uuid:P,\"json-pointer\":E,\"relative-json-pointer\":b},a.compare={date:h,time:u,\"date-time\":f};var w=/t|\\s/i,j=/\\/|\\:/},{\"./util\":11}],6:[function(e,r,t){\"use strict\";function a(){if(void 0===d){try{d=e(\"js-beautify\").js_beautify}catch(e){d=!1}}}function s(e,r,t,n){function j(){var e=N.validate,r=e.apply(null,arguments);return j.errors=e.errors,r}function S(e,t,o,i){var n=!t||t&&t.schema==e;if(t.schema!=r.schema)return s.call(k,e,t,o,i);var v=e.$async===!0;v&&!q.transpile&&y.setup(q);var j=g({isTop:!0,schema:e,isRoot:n,baseId:i,root:t,schemaPath:\"\",errSchemaPath:\"#\",errorPath:'\"\"',RULES:H,validate:g,util:m,resolve:p,resolveRef:$,usePattern:R,useDefault:I,useCustomRule:A,opts:q,formats:F,self:k});j=f(D,h)+f(Q,l)+f(V,c)+f(U,u)+j,q.beautify&&(a(),d?j=d(j,q.beautify):console.error('\"npm install js-beautify\" to use beautify option'));var S,x,_=q._transpileFunc;try{x=v&&_?_(j):j;S=new Function(\"self\",\"RULES\",\"formats\",\"root\",\"refVal\",\"defaults\",\"customRules\",\"co\",\"equal\",\"ucs2length\",\"ValidationError\",x)(k,H,F,r,D,V,U,P,b,E,w),D[0]=S}catch(e){throw console.error(\"Error compiling schema, function code:\",x),e}return S.schema=e,S.errors=null,S.refs=L,S.refVal=D,S.root=n?S:t,v&&(S.$async=!0),T&&(S.sourceCode=j),q.sourceCode===!0&&(S.source={patterns:Q,defaults:V}),S}function $(e,a,o){a=p.url(e,a);var i,n,l=L[a];if(void 0!==l)return i=D[l],n=\"refVal[\"+l+\"]\",O(i,n);if(!o&&r.refs){var c=r.refs[a];if(void 0!==c)return i=r.refVal[c],n=x(a,i),O(i,n)}n=x(a);var h=p.call(k,S,r,a);if(!h){var u=t&&t[a];u&&(h=p.inlineRef(u,q.inlineRefs)?u:s.call(k,u,r,t,e))}return h?(_(a,h),O(h,n)):void 0}function x(e,r){var t=D.length;return D[t]=r,L[e]=t,\"refVal\"+t}function _(e,r){D[L[e]]=r}function O(e,r){return\"object\"==typeof e?{code:r,schema:e,inline:!0}:{code:r,$async:e&&e.$async}}function R(e){var r=C[e];return void 0===r&&(r=C[e]=Q.length,Q[r]=e),\"pattern\"+r}function I(e){switch(typeof e){case\"boolean\":case\"number\":return\"\"+e;case\"string\":return m.toQuotedString(e);case\"object\":if(null===e)return\"null\";var r=v(e),t=z[r];return void 0===t&&(t=z[r]=V.length,V[t]=e),\"default\"+t}}function A(e,r,t,a){var s=e.definition.validateSchema;if(s&&k._opts.validateSchema!==!1){if(!s(r)){var o=\"keyword schema is invalid: \"+k.errorsText(s.errors);if(\"log\"!=k._opts.validateSchema)throw new Error(o);console.error(o)}}var i,n=e.definition.compile,l=e.definition.inline,c=e.definition.macro;n?i=n.call(k,r,t,a):c?(i=c.call(k,r,t,a),q.validateSchema!==!1&&k.validateSchema(i,!0)):i=l?l.call(k,a,e.keyword,r,t):e.definition.validate;var h=U.length;return U[h]=i,{code:\"customRule\"+h,validate:i}}var k=this,q=this._opts,D=[void 0],L={},Q=[],C={},V=[],z={},U=[],T=q.sourceCode!==!1;r=r||{schema:e,refVal:D,refs:L};var M=o.call(this,e,r,n),N=this._compilations[M.index];if(M.compiling)return N.callValidate=j;var F=this._formats,H=this.RULES;try{var J=S(e,r,t,n);N.validate=J;var G=N.callValidate;return G&&(G.schema=J.schema,G.errors=null,G.refs=J.refs,G.refVal=J.refVal,G.root=J.root,G.$async=J.$async,T&&(G.sourceCode=J.sourceCode)),J}finally{i.call(this,e,r,n)}}function o(e,r,t){var a=n.call(this,e,r,t);return a>=0?{index:a,compiling:!0}:(a=this._compilations.length,this._compilations[a]={schema:e,root:r,baseId:t},{index:a,compiling:!1})}function i(e,r,t){var a=n.call(this,e,r,t);a>=0&&this._compilations.splice(a,1)}function n(e,r,t){for(var a=0;a<this._compilations.length;a++){var s=this._compilations[a];if(s.schema==e&&s.root==r&&s.baseId==t)return a}return-1}function l(e,r){return\"var pattern\"+e+\" = new RegExp(\"+m.toQuotedString(r[e])+\");\"}function c(e){return\"var default\"+e+\" = defaults[\"+e+\"];\"}function h(e,r){return r[e]?\"var refVal\"+e+\" = refVal[\"+e+\"];\":\"\"}function u(e){return\"var customRule\"+e+\" = customRules[\"+e+\"];\"}function f(e,r){if(!e.length)return\"\";for(var t=\"\",a=0;a<e.length;a++)t+=r(a,e);return t}var d,p=e(\"./resolve\"),m=e(\"./util\"),v=e(\"json-stable-stringify\"),y=e(\"../async\"),g=e(\"../dotjs/validate\"),P=e(\"co\"),E=m.ucs2length,b=e(\"./equal\"),w=e(\"./validation_error\");r.exports=s},{\"../async\":1,\"../dotjs/validate\":36,\"./equal\":4,\"./resolve\":7,\"./util\":11,\"./validation_error\":12,co:47,\"json-stable-stringify\":48}],7:[function(e,r,t){\"use strict\";function a(e,r,t){var o=this._refs[t];if(\"string\"==typeof o){if(!this._refs[o])return a.call(this,e,r,o);o=this._refs[o]}if(o=o||this._schemas[t],o instanceof g)return n(o.schema,this._opts.inlineRefs)?o.schema:o.validate||this._compile(o);var i,l,c,h=s.call(this,r,t);return h&&(i=h.schema,r=h.root,c=h.baseId),i instanceof g?l=i.validate||e.call(this,i.schema,r,void 0,c):i&&(l=n(i,this._opts.inlineRefs)?i:e.call(this,i,r,void 0,c)),l}function s(e,r){var t=m.parse(r,!1,!0),a=u(t),s=h(e.schema.id);if(a!==s){var n=f(a),l=this._refs[n];if(\"string\"==typeof l)return o.call(this,e,l,t);if(l instanceof g)l.validate||this._compile(l),e=l;else{if(l=this._schemas[n],!(l instanceof g))return;if(l.validate||this._compile(l),n==f(r))return{schema:l,root:e,baseId:s};e=l}if(!e.schema)return;s=h(e.schema.id)}return i.call(this,t,s,e.schema,e)}function o(e,r,t){var a=s.call(this,e,r);if(a){var o=a.schema,n=a.baseId;return e=a.root,o.id&&(n=d(n,o.id)),i.call(this,t,n,o,e)}}function i(e,r,t,a){if(e.hash=e.hash||\"\",\"#/\"==e.hash.slice(0,2)){for(var o=e.hash.split(\"/\"),i=1;i<o.length;i++){var n=o[i];if(n){if(n=y.unescapeFragment(n),t=t[n],!t)break;if(t.id&&!P[n]&&(r=d(r,t.id)),t.$ref){var l=d(r,t.$ref),c=s.call(this,a,l);c&&(t=c.schema,a=c.root,r=c.baseId)}}}return t&&t!=a.schema?{schema:t,root:a,baseId:r}:void 0}}function n(e,r){return r!==!1&&(void 0===r||r===!0?l(e):r?c(e)<=r:void 0)}function l(e){var r;if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(r=e[t],\"object\"==typeof r&&!l(r))return!1}else for(var a in e){if(\"$ref\"==a)return!1;if(r=e[a],\"object\"==typeof r&&!l(r))return!1}return!0}function c(e){var r,t=0;if(Array.isArray(e)){for(var a=0;a<e.length;a++)if(r=e[a],\"object\"==typeof r&&(t+=c(r)),t==1/0)return 1/0}else for(var s in e){if(\"$ref\"==s)return 1/0;if(E[s])t++;else if(r=e[s],\"object\"==typeof r&&(t+=c(r)+1),t==1/0)return 1/0}return t}function h(e,r){return r!==!1&&(e=f(e)),u(m.parse(e,!1,!0))}function u(e){var r=e.protocol||\"//\"==e.href.slice(0,2)?\"//\":\"\";return(e.protocol||\"\")+r+(e.host||\"\")+(e.path||\"\")+\"#\"}function f(e){return e?e.replace(b,\"\"):\"\"}function d(e,r){return r=f(r),m.resolve(e,r)}function p(e){function r(e,t,s){if(Array.isArray(e))for(var o=0;o<e.length;o++)r.call(this,e[o],t+\"/\"+o,s);else if(e&&\"object\"==typeof e){if(\"string\"==typeof e.id){var i=s=s?m.resolve(s,e.id):e.id;i=f(i);var n=this._refs[i];if(\"string\"==typeof n&&(n=this._refs[n]),n&&n.schema){if(!v(e,n.schema))throw new Error('id \"'+i+'\" resolves to more than one schema')}else if(i!=f(t))if(\"#\"==i[0]){if(a[i]&&!v(e,a[i]))throw new Error('id \"'+i+'\" resolves to more than one schema');a[i]=e}else this._refs[i]=t}for(var l in e)r.call(this,e[l],t+\"/\"+y.escapeFragment(l),s)}}var t=f(e.id),a={};return r.call(this,e,h(t,!1),t),a}var m=e(\"url\"),v=e(\"./equal\"),y=e(\"./util\"),g=e(\"./schema_obj\");r.exports=a,a.normalizeId=f,a.fullPath=h,a.url=d,a.ids=p,a.inlineRef=n,a.schema=s;var P=y.toHash([\"properties\",\"patternProperties\",\"enum\",\"dependencies\",\"definitions\"]),E=y.toHash([\"type\",\"format\",\"pattern\",\"maxLength\",\"minLength\",\"maxProperties\",\"minProperties\",\"maxItems\",\"minItems\",\"maximum\",\"minimum\",\"uniqueItems\",\"multipleOf\",\"required\",\"enum\"]),b=/#\\/?$/},{\"./equal\":4,\"./schema_obj\":9,\"./util\":11,url:45}],8:[function(e,r,t){\"use strict\";var a=e(\"./_rules\"),s=e(\"./util\").toHash;r.exports=function(){var e=[{type:\"number\",rules:[\"maximum\",\"minimum\",\"multipleOf\"]},{type:\"string\",rules:[\"maxLength\",\"minLength\",\"pattern\",\"format\"]},{type:\"array\",rules:[\"maxItems\",\"minItems\",\"uniqueItems\",\"items\"]},{type:\"object\",rules:[\"maxProperties\",\"minProperties\",\"required\",\"dependencies\",\"properties\"]},{rules:[\"$ref\",\"enum\",\"not\",\"anyOf\",\"oneOf\",\"allOf\"]}],r=[\"type\",\"additionalProperties\",\"patternProperties\"],t=[\"additionalItems\",\"$schema\",\"id\",\"title\",\"description\",\"default\"],o=[\"number\",\"integer\",\"string\",\"array\",\"object\",\"boolean\",\"null\"];return e.all=s(r),e.forEach(function(t){t.rules=t.rules.map(function(t){return r.push(t),e.all[t]={keyword:t,code:a[t]}})}),e.keywords=s(r.concat(t)),e.types=s(o),e.custom={},e}},{\"./_rules\":3,\"./util\":11}],9:[function(e,r,t){\"use strict\";function a(e){s.copy(e,this)}var s=e(\"./util\");r.exports=a},{\"./util\":11}],10:[function(e,r,t){\"use strict\";r.exports=function(e){for(var r,t=0,a=e.length,s=0;s<a;)t++,r=e.charCodeAt(s++),r>=55296&&r<=56319&&s<a&&(r=e.charCodeAt(s),56320==(64512&r)&&s++);return t}},{}],11:[function(e,r,t){\"use strict\";function a(e,r){r=r||{};for(var t in e)r[t]=e[t];return r}function s(e,r,t){var a=t?\" !== \":\" === \",s=t?\" || \":\" && \",o=t?\"!\":\"\",i=t?\"\":\"!\";switch(e){case\"null\":return r+a+\"null\";case\"array\":return o+\"Array.isArray(\"+r+\")\";case\"object\":return\"(\"+o+r+s+\"typeof \"+r+a+'\"object\"'+s+i+\"Array.isArray(\"+r+\"))\";case\"integer\":return\"(typeof \"+r+a+'\"number\"'+s+i+\"(\"+r+\" % 1)\"+s+r+a+r+\")\";default:return\"typeof \"+r+a+'\"'+e+'\"'}}function o(e,r){switch(e.length){case 1:return s(e[0],r,!0);default:var t=\"\",a=n(e);a.array&&a.object&&(t=a.null?\"(\":\"(!\"+r+\" || \",t+=\"typeof \"+r+' !== \"object\")',delete a.null,delete a.array,delete a.object),a.number&&delete a.integer;for(var o in a)t+=(t?\" && \":\"\")+s(o,r,!0);return t}}function i(e,r){if(Array.isArray(r)){for(var t=[],a=0;a<r.length;a++){var s=r[a];$[s]?t[t.length]=s:\"array\"===e&&\"array\"===s&&(t[t.length]=s)}if(t.length)return t}else{if($[r])return[r];if(\"array\"===e&&\"array\"===r)return[\"array\"]}}function n(e){for(var r={},t=0;t<e.length;t++)r[e[t]]=!0;return r}function l(e){return\"number\"==typeof e?\"[\"+e+\"]\":x.test(e)?\".\"+e:\"['\"+c(e)+\"']\"}function c(e){return e.replace(_,\"\\\\$&\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\f/g,\"\\\\f\").replace(/\\t/g,\"\\\\t\")}function h(e,r){r+=\"[^0-9]\";var t=e.match(new RegExp(r,\"g\"));return t?t.length:0}function u(e,r,t){return r+=\"([^0-9])\",t=t.replace(/\\$/g,\"$$$$\"),e.replace(new RegExp(r,\"g\"),t+\"$1\")}function f(e){return e.replace(O,\"\").replace(R,\"\").replace(I,\"if (!($1))\")}function d(e,r){var t=e.match(A);return t&&2===t.length?r?e.replace(q,\"\").replace(Q,C):e.replace(k,\"\").replace(D,L):e}function p(e,r){for(var t in e)if(r[t])return!0}function m(e,r,t){for(var a in e)if(a!=t&&r[a])return!0}function v(e){return\"'\"+c(e)+\"'\"}function y(e,r,t,a){return E(e,t?\"'/' + \"+r+(a?\"\":\".replace(/~/g, '~0').replace(/\\\\//g, '~1')\"):a?\"'[' + \"+r+\" + ']'\":\"'[\\\\'' + \"+r+\" + '\\\\']'\")}function g(e,r,t){return E(e,v(t?\"/\"+j(r):l(r)))}function P(e,r,t){var a,s,o,i;if(\"\"===e)return\"rootData\";if(\"/\"==e[0]){if(!V.test(e))throw new Error(\"Invalid JSON-pointer: \"+e);s=e,o=\"rootData\"}else{if(i=e.match(z),!i)throw new Error(\"Invalid JSON-pointer: \"+e);if(a=+i[1],s=i[2],\"#\"==s){if(a>=r)throw new Error(\"Cannot access property/index \"+a+\" levels up, current level is \"+r);return t[r-a]}if(a>r)throw new Error(\"Cannot access data \"+a+\" levels up, current level is \"+r);if(o=\"data\"+(r-a||\"\"),!s)return o}for(var n=o,c=s.split(\"/\"),h=0;h<c.length;h++){var u=c[h];u&&(o+=l(S(u)),n+=\" && \"+o)}return n}function E(e,r){return'\"\"'==e?r:(e+\" + \"+r).replace(/' \\+ '/g,\"\")}function b(e){return S(decodeURIComponent(e))}function w(e){return encodeURIComponent(j(e))}function j(e){return e.replace(/~/g,\"~0\").replace(/\\//g,\"~1\")}function S(e){return e.replace(/~1/g,\"/\").replace(/~0/g,\"~\")}r.exports={copy:a,checkDataType:s,checkDataTypes:o,coerceToTypes:i,toHash:n,getProperty:l,escapeQuotes:c,ucs2length:e(\"./ucs2length\"),varOccurences:h,varReplace:u,cleanUpCode:f,cleanUpVarErrors:d,schemaHasRules:p,schemaHasRulesExcept:m,stableStringify:e(\"json-stable-stringify\"),toQuotedString:v,getPathExpr:y,getPath:g,getData:P,unescapeFragment:b,escapeFragment:w,escapeJsonPointer:j};var $=n([\"string\",\"number\",\"integer\",\"boolean\",\"null\"]),x=/^[a-z$_][a-z$_0-9]*$/i,_=/'|\\\\/g,O=/else\\s*{\\s*}/g,R=/if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g,I=/if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g,A=/[^v\\.]errors/g,k=/var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,q=/var errors = 0;|var vErrors = null;/g,D=\"return errors === 0;\",L=\"validate.errors = null; return true;\",Q=/if \\(errors === 0\\) return true;\\s*else throw new ValidationError\\(vErrors\\);/,C=\"return true;\",V=/^\\/(?:[^~]|~0|~1)*$/,z=/^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/},{\"./ucs2length\":10,\"json-stable-stringify\":48}],12:[function(e,r,t){\"use strict\";function a(e){this.message=\"validation failed\",this.errors=e,this.ajv=this.validation=!0}r.exports=a,a.prototype=Object.create(Error.prototype),a.prototype.constructor=a},{}],13:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s;if(a+=\"var \"+u+\" = undefined;\",e.opts.format===!1)return a+=\" \"+u+\" = true; \";var f=e.schema.format,d=e.opts.v5&&f.$data,p=\"\";if(d){var m=e.util.getData(f.$data,o,e.dataPathArr),v=\"format\"+s,y=\"compare\"+s;a+=\" var \"+v+\" = formats[\"+m+\"] , \"+y+\" = \"+v+\" && \"+v+\".compare;\"}else{var v=e.formats[f];if(!v||!v.compare)return a+=\"  \"+u+\" = true; \";var y=\"formats\"+e.util.getProperty(f)+\".compare\"}var g,P=\"formatMaximum\"==r,E=\"formatExclusive\"+(P?\"Maximum\":\"Minimum\"),b=e.schema[E],w=e.opts.v5&&b&&b.$data,j=P?\"<\":\">\",S=\"result\"+s,$=e.opts.v5&&i&&i.$data;if($?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",g=\"schema\"+s):g=i,w){var x=e.util.getData(b.$data,o,e.dataPathArr),_=\"exclusive\"+s,O=\"op\"+s,R=\"' + \"+O+\" + '\";a+=\" var schemaExcl\"+s+\" = \"+x+\"; \",x=\"schemaExcl\"+s,a+=\" if (typeof \"+x+\" != 'boolean' && \"+x+\" !== undefined) { \"+u+\" = false; \";var t=E,I=I||[];I.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"_formatExclusiveLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: '\"+E+\" should be boolean' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var A=a;a=I.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+A+\"]); \":\" validate.errors = [\"+A+\"]; return false; \":\" var err = \"+A+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }  \",c&&(p+=\"}\",a+=\" else { \"),$&&(a+=\" if (\"+g+\" === undefined) \"+u+\" = true; else if (typeof \"+g+\" != 'string') \"+u+\" = false; else { \",p+=\"}\"),d&&(a+=\" if (!\"+y+\") \"+u+\" = true; else { \",p+=\"}\"),a+=\" var \"+S+\" = \"+y+\"(\"+h+\",  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" ); if (\"+S+\" === undefined) \"+u+\" = false; var \"+_+\" = \"+x+\" === true; if (\"+u+\" === undefined) { \"+u+\" = \"+_+\" ? \"+S+\" \"+j+\" 0 : \"+S+\" \"+j+\"= 0; } if (!\"+u+\") var op\"+s+\" = \"+_+\" ? '\"+j+\"' : '\"+j+\"=';\"}else{var _=b===!0,R=j;_||(R+=\"=\");var O=\"'\"+R+\"'\";$&&(a+=\" if (\"+g+\" === undefined) \"+u+\" = true; else if (typeof \"+g+\" != 'string') \"+u+\" = false; else { \",p+=\"}\"),d&&(a+=\" if (!\"+y+\") \"+u+\" = true; else { \",p+=\"}\"),a+=\" var \"+S+\" = \"+y+\"(\"+h+\",  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" ); if (\"+S+\" === undefined) \"+u+\" = false; if (\"+u+\" === undefined) \"+u+\" = \"+S+\" \"+j,_||(a+=\"=\"),a+=\" 0;\"}a+=\"\"+p+\"if (!\"+u+\") { \";var t=r,I=I||[];I.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"_formatLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { comparison: \"+O+\", limit:  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" , exclusive: \"+_+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should be \"+R+' \"',a+=$?\"' + \"+g+\" + '\":\"\"+e.util.escapeQuotes(i),a+=\"\\\"' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=$?\"validate.schema\"+n:\"\"+e.util.toQuotedString(i),a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var A=a;return a=I.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+A+\"]); \":\" validate.errors = [\"+A+\"]; return false; \":\" var err = \"+A+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"}\"}},{}],14:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maximum\"==r,p=d?\"exclusiveMaximum\":\"exclusiveMinimum\",m=e.schema[p],v=e.opts.v5&&m&&m.$data,y=d?\"<\":\">\",g=d?\">\":\"<\";if(v){var P=e.util.getData(m.$data,i,e.dataPathArr),E=\"exclusive\"+o,b=\"op\"+o,w=\"' + \"+b+\" + '\";s+=\" var schemaExcl\"+o+\" = \"+P+\"; \",P=\"schemaExcl\"+o,s+=\" var exclusive\"+o+\"; if (typeof \"+P+\" != 'boolean' && typeof \"+P+\" != 'undefined') { \";var t=p,j=j||[];j.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_exclusiveLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: {} \",e.opts.messages!==!1&&(s+=\" , message: '\"+p+\" should be boolean' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var S=s;s=j.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } else if( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" ((exclusive\"+o+\" = \"+P+\" === true) ? \"+u+\" \"+g+\"= \"+a+\" : \"+u+\" \"+g+\" \"+a+\") || \"+u+\" !== \"+u+\") { var op\"+o+\" = exclusive\"+o+\" ? '\"+y+\"' : '\"+y+\"=';\"}else{var E=m===!0,w=y;E||(w+=\"=\");var b=\"'\"+w+\"'\";s+=\" if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" \"+u+\" \"+g,E&&(s+=\"=\"),s+=\" \"+a+\" || \"+u+\" !== \"+u+\") {\"}var t=r,j=j||[];j.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { comparison: \"+b+\", limit: \"+a+\", exclusive: \"+E+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \"+w+\" \",s+=f?\"' + \"+a:\"\"+n+\"'\"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var S=s;return s=j.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \",h&&(s+=\" else { \"),s}},{}],15:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxItems\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" \"+u+\".length \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limitItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT have \",s+=\"maxItems\"==r?\"more\":\"less\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" items' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],16:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxLength\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=e.opts.unicode===!1?\" \"+u+\".length \":\" ucs2length(\"+u+\") \",s+=\" \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limitLength\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT be \",s+=\"maxLength\"==r?\"longer\":\"shorter\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" characters' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,\ns+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],17:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxProperties\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" Object.keys(\"+u+\").length \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limitProperties\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT have \",s+=\"maxProperties\"==r?\"more\":\"less\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" properties' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],18:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.schema[r],s=e.schemaPath+e.util.getProperty(r),o=e.errSchemaPath+\"/\"+r,i=!e.opts.allErrors,n=e.util.copy(e),l=\"\";n.level++;var c=\"valid\"+n.level,h=n.baseId,u=!0,f=a;if(f)for(var d,p=-1,m=f.length-1;p<m;)d=f[p+=1],e.util.schemaHasRules(d,e.RULES.all)&&(u=!1,n.schema=d,n.schemaPath=s+\"[\"+p+\"]\",n.errSchemaPath=o+\"/\"+p,t+=\"  \"+e.validate(n)+\" \",n.baseId=h,i&&(t+=\" if (\"+c+\") { \",l+=\"}\"));return i&&(t+=u?\" if (true) { \":\" \"+l.slice(0,-1)+\" \"),t=e.util.cleanUpCode(t)}},{}],19:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level;if(i.every(function(r){return e.util.schemaHasRules(r,e.RULES.all)})){var v=d.baseId;a+=\" var \"+f+\" = errors; var \"+u+\" = false;  \";var y=e.compositeRule;e.compositeRule=d.compositeRule=!0;var g=i;if(g)for(var P,E=-1,b=g.length-1;E<b;)P=g[E+=1],d.schema=P,d.schemaPath=n+\"[\"+E+\"]\",d.errSchemaPath=l+\"/\"+E,a+=\"  \"+e.validate(d)+\" \",d.baseId=v,a+=\" \"+u+\" = \"+u+\" || \"+m+\"; if (!\"+u+\") { \",p+=\"}\";e.compositeRule=d.compositeRule=y,a+=\" \"+p+\" if (!\"+u+\") {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"anyOf\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should match some schema in anyOf' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = \"+f+\"; if (vErrors !== null) { if (\"+f+\") vErrors.length = \"+f+\"; else vErrors = null; } \",e.opts.allErrors&&(a+=\" } \"),a=e.util.cleanUpCode(a)}else c&&(a+=\" if (true) { \");return a}},{}],20:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;f&&(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \"),f||(a+=\" var schema\"+s+\" = validate.schema\"+n+\";\"),a+=\"var \"+u+\" = equal(\"+h+\", schema\"+s+\"); if (!\"+u+\") {   \";var d=d||[];d.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"constant\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should be equal to constant' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var p=a;return a=d.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+p+\"]); \":\" validate.errors = [\"+p+\"]; return false; \":\" var err = \"+p+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }\"}},{}],21:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=\"valid\"+o,d=\"errs__\"+o,p=e.opts.v5&&n&&n.$data;p?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var m,v,y,g,P,E=this,b=\"definition\"+o,w=E.definition;if(p&&w.$data){P=\"keywordValidate\"+o;var j=w.validateSchema;s+=\" var \"+b+\" = RULES.custom['\"+r+\"'].definition; var \"+P+\" = \"+b+\".validate;\"}else g=e.useCustomRule(E,n,e.schema,e),a=\"validate.schema\"+l,P=g.code,m=w.compile,v=w.inline,y=w.macro;var S=P+\".errors\",$=\"i\"+o,x=\"ruleErr\"+o,_=w.async;if(_&&!e.async)throw new Error(\"async keyword in sync schema\");if(v||y||(s+=\"\"+S+\" = null;\"),s+=\"var \"+d+\" = errors;var \"+f+\";\",j&&(s+=\" \"+f+\" = \"+b+\".validateSchema(\"+a+\"); if (\"+f+\") {\"),v)s+=w.statements?\" \"+g.validate+\" \":\" \"+f+\" = \"+g.validate+\"; \";else if(y){var O=e.util.copy(e);O.level++;var R=\"valid\"+O.level;O.schema=g.validate,O.schemaPath=\"\";var I=e.compositeRule;e.compositeRule=O.compositeRule=!0;var A=e.validate(O).replace(/validate\\.schema/g,P);e.compositeRule=O.compositeRule=I,s+=\" \"+A}else{var k=k||[];k.push(s),s=\"\",s+=\"  \"+P+\".call( \",s+=e.opts.passContext?\"this\":\"self\",s+=m||w.schema===!1?\" , \"+u+\" \":\" , \"+a+\" , \"+u+\" , validate.schema\"+e.schemaPath+\" \",s+=\" , (dataPath || '')\",'\"\"'!=e.errorPath&&(s+=\" + \"+e.errorPath);var q=i?\"data\"+(i-1||\"\"):\"parentData\",D=i?e.dataPathArr[i]:\"parentDataProperty\";s+=\" , \"+q+\" , \"+D+\" , rootData )  \";var L=s;s=k.pop(),w.errors===!1?(s+=\" \"+f+\" = \",_&&(s+=\"\"+e.yieldAwait),s+=\"\"+L+\"; \"):_?(S=\"customErrors\"+o,s+=\" var \"+S+\" = null; try { \"+f+\" = \"+e.yieldAwait+L+\"; } catch (e) { \"+f+\" = false; if (e instanceof ValidationError) \"+S+\" = e.errors; else throw e; } \"):s+=\" \"+S+\" = null; \"+f+\" = \"+L+\"; \"}if(w.modifying&&(s+=\" \"+u+\" = \"+q+\"[\"+D+\"];\"),j&&(s+=\" }\"),w.valid)h&&(s+=\" if (true) { \");else{s+=\" if ( \",void 0===w.valid?(s+=\" !\",s+=y?\"\"+R:\"\"+f):s+=\" \"+!w.valid+\" \",s+=\") { \",t=E.keyword;var k=k||[];k.push(s),s=\"\";var k=k||[];k.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"custom\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { keyword: '\"+E.keyword+\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should pass \\\"\"+E.keyword+\"\\\" keyword validation' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var Q=s;s=k.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+Q+\"]); \":\" validate.errors = [\"+Q+\"]; return false; \":\" var err = \"+Q+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \";var C=s;s=k.pop(),v?w.errors?\"full\"!=w.errors&&(s+=\"  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\"; if (\"+x+\".schemaPath === undefined) { \"+x+'.schemaPath = \"'+c+'\"; } ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } \"):w.errors===!1?s+=\" \"+C+\" \":(s+=\" if (\"+d+\" == errors) { \"+C+\" } else {  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\"; if (\"+x+\".schemaPath === undefined) { \"+x+'.schemaPath = \"'+c+'\"; } ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } } \"):y?(s+=\"   var err =   \",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"custom\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { keyword: '\"+E.keyword+\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should pass \\\"\"+E.keyword+\"\\\" keyword validation' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \",s+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",!e.compositeRule&&h&&(s+=e.async?\" throw new ValidationError(vErrors); \":\" validate.errors = vErrors; return false; \")):w.errors===!1?s+=\" \"+C+\" \":(s+=\" if (Array.isArray(\"+S+\")) { if (vErrors === null) vErrors = \"+S+\"; else vErrors = vErrors.concat(\"+S+\"); errors = vErrors.length;  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\";  \"+x+'.schemaPath = \"'+c+'\";  ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } } else { \"+C+\" } \"),s+=\" } \",h&&(s+=\" else { \")}return s}},{}],22:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"errs__\"+s,f=e.util.copy(e),d=\"\";f.level++;var p=\"valid\"+f.level,m={},v={};for(E in i){var y=i[E],g=Array.isArray(y)?v:m;g[E]=y}a+=\"var \"+u+\" = errors;\";var P=e.errorPath;a+=\"var missing\"+s+\";\";for(var E in v){if(g=v[E],a+=\" if (\"+h+e.util.getProperty(E)+\" !== undefined \",c){a+=\" && ( \";var b=g;if(b)for(var w,j=-1,S=b.length-1;j<S;){w=b[j+=1],j&&(a+=\" || \");var $=e.util.getProperty(w);a+=\" ( \"+h+$+\" === undefined && (missing\"+s+\" = \"+e.util.toQuotedString(e.opts.jsonPointers?w:$)+\") ) \"}a+=\")) {  \";var x=\"missing\"+s,_=\"' + \"+x+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(P,x,!0):P+\" + \"+x);var O=O||[];O.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"dependencies\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { property: '\"+e.util.escapeQuotes(E)+\"', missingProperty: '\"+_+\"', depsCount: \"+g.length+\", deps: '\"+e.util.escapeQuotes(1==g.length?g[0]:g.join(\", \"))+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should have \",a+=1==g.length?\"property \"+e.util.escapeQuotes(g[0]):\"properties \"+e.util.escapeQuotes(g.join(\", \")),a+=\" when property \"+e.util.escapeQuotes(E)+\" is present' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var R=a;a=O.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+R+\"]); \":\" validate.errors = [\"+R+\"]; return false; \":\" var err = \"+R+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}else{a+=\" ) { \";var I=g;if(I)for(var A,k=-1,q=I.length-1;k<q;){A=I[k+=1];var $=e.util.getProperty(A),_=e.util.escapeQuotes(A);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(P,A,e.opts.jsonPointers)),a+=\" if (\"+h+$+\" === undefined) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"dependencies\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { property: '\"+e.util.escapeQuotes(E)+\"', missingProperty: '\"+_+\"', depsCount: \"+g.length+\", deps: '\"+e.util.escapeQuotes(1==g.length?g[0]:g.join(\", \"))+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should have \",a+=1==g.length?\"property \"+e.util.escapeQuotes(g[0]):\"properties \"+e.util.escapeQuotes(g.join(\", \")),a+=\" when property \"+e.util.escapeQuotes(E)+\" is present' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } \"}}a+=\" }   \",c&&(d+=\"}\",a+=\" else { \")}e.errorPath=P;var D=f.baseId;for(var E in m){var y=m[E];e.util.schemaHasRules(y,e.RULES.all)&&(a+=\" \"+p+\" = true; if (\"+h+e.util.getProperty(E)+\" !== undefined) { \",f.schema=y,f.schemaPath=n+e.util.getProperty(E),f.errSchemaPath=l+\"/\"+e.util.escapeFragment(E),a+=\"  \"+e.validate(f)+\" \",f.baseId=D,a+=\" }  \",c&&(a+=\" if (\"+p+\") { \",d+=\"}\"))}return c&&(a+=\"   \"+d+\" if (\"+u+\" == errors) {\"),a=e.util.cleanUpCode(a)}},{}],23:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;f&&(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \");var d=\"i\"+s,p=\"schema\"+s;f||(a+=\" var \"+p+\" = validate.schema\"+n+\";\"),a+=\"var \"+u+\";\",f&&(a+=\" if (schema\"+s+\" === undefined) \"+u+\" = true; else if (!Array.isArray(schema\"+s+\")) \"+u+\" = false; else {\"),a+=\"\"+u+\" = false;for (var \"+d+\"=0; \"+d+\"<\"+p+\".length; \"+d+\"++) if (equal(\"+h+\", \"+p+\"[\"+d+\"])) { \"+u+\" = true; break; }\",f&&(a+=\"  }  \"),a+=\" if (!\"+u+\") {   \";var m=m||[];m.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"enum\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { allowedValues: schema\"+s+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should be equal to one of the allowed values' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var v=a;return a=m.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+v+\"]); \":\" validate.errors = [\"+v+\"]; return false; \":\" var err = \"+v+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }\",c&&(a+=\" else { \"),a}},{}],24:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\");if(e.opts.format===!1)return c&&(a+=\" if (true) { \"),a;var u,f=e.opts.v5&&i&&i.$data;f?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",u=\"schema\"+s):u=i;var d=e.opts.unknownFormats,p=Array.isArray(d);if(f){var m=\"format\"+s;a+=\" var \"+m+\" = formats[\"+u+\"]; var isObject\"+s+\" = typeof \"+m+\" == 'object' && !(\"+m+\" instanceof RegExp) && \"+m+\".validate; if (isObject\"+s+\") { \",e.async&&(a+=\" var async\"+s+\" = \"+m+\".async; \"),a+=\" \"+m+\" = \"+m+\".validate; } if (  \",f&&(a+=\" (\"+u+\" !== undefined && typeof \"+u+\" != 'string') || \"),a+=\" (\",(d===!0||p)&&(a+=\" (\"+u+\" && !\"+m+\" \",p&&(a+=\" && self._opts.unknownFormats.indexOf(\"+u+\") == -1 \"),a+=\") || \"),a+=\" (\"+m+\" && !(typeof \"+m+\" == 'function' ? \",a+=e.async?\" (async\"+s+\" ? \"+e.yieldAwait+\" \"+m+\"(\"+h+\") : \"+m+\"(\"+h+\")) \":\" \"+m+\"(\"+h+\") \",a+=\" : \"+m+\".test(\"+h+\"))))) {\"}else{var m=e.formats[i];if(!m){if(d===!0||p&&d.indexOf(i)==-1)throw new Error('unknown format \"'+i+'\" is used in schema at path \"'+e.errSchemaPath+'\"');return p||(console.warn('unknown format \"'+i+'\" ignored in schema at path \"'+e.errSchemaPath+'\"'),\"ignore\"!==d&&console.warn(\"In the next major version it will throw exception. See option unknownFormats for more information\")),c&&(a+=\" if (true) { \"),a}var v=\"object\"==typeof m&&!(m instanceof RegExp)&&m.validate;if(v){var y=m.async===!0;m=m.validate}if(y){if(!e.async)throw new Error(\"async format in sync schema\");var g=\"formats\"+e.util.getProperty(i)+\".validate\";a+=\" if (!(\"+e.yieldAwait+\" \"+g+\"(\"+h+\"))) { \"}else{a+=\" if (! \";var g=\"formats\"+e.util.getProperty(i);v&&(g+=\".validate\"),a+=\"function\"==typeof m?\" \"+g+\"(\"+h+\") \":\" \"+g+\".test(\"+h+\") \",a+=\") { \"}}var P=P||[];P.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"format\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { format:  \",a+=f?\"\"+u:\"\"+e.util.toQuotedString(i),a+=\"  } \",e.opts.messages!==!1&&(a+=\" , message: 'should match format \\\"\",a+=f?\"' + \"+u+\" + '\":\"\"+e.util.escapeQuotes(i),a+=\"\\\"' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=f?\"validate.schema\"+n:\"\"+e.util.toQuotedString(i),a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var E=a;return a=P.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+E+\"]); \":\" validate.errors = [\"+E+\"]; return false; \":\" var err = \"+E+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",c&&(a+=\" else { \"),a}},{}],25:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level,v=\"i\"+s,y=d.dataLevel=e.dataLevel+1,g=\"data\"+y,P=e.baseId;if(a+=\"var \"+f+\" = errors;var \"+u+\";\",Array.isArray(i)){var E=e.schema.additionalItems;if(E===!1){a+=\" \"+u+\" = \"+h+\".length <= \"+i.length+\"; \";var b=l;l=e.errSchemaPath+\"/additionalItems\",a+=\"  if (!\"+u+\") {   \";var w=w||[];w.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"additionalItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { limit: \"+i.length+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have more than \"+i.length+\" items' \"),e.opts.verbose&&(a+=\" , schema: false , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var j=a;a=w.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+j+\"]); \":\" validate.errors = [\"+j+\"]; return false; \":\" var err = \"+j+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",l=b,c&&(p+=\"}\",a+=\" else { \")}var S=i;if(S)for(var $,x=-1,_=S.length-1;x<_;)if($=S[x+=1],e.util.schemaHasRules($,e.RULES.all)){a+=\" \"+m+\" = true; if (\"+h+\".length > \"+x+\") { \";var O=h+\"[\"+x+\"]\";d.schema=$,d.schemaPath=n+\"[\"+x+\"]\",d.errSchemaPath=l+\"/\"+x,d.errorPath=e.util.getPathExpr(e.errorPath,x,e.opts.jsonPointers,!0),d.dataPathArr[y]=x;var R=e.validate(d);d.baseId=P,a+=e.util.varOccurences(R,g)<2?\" \"+e.util.varReplace(R,g,O)+\" \":\" var \"+g+\" = \"+O+\"; \"+R+\" \",a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}if(\"object\"==typeof E&&e.util.schemaHasRules(E,e.RULES.all)){d.schema=E,d.schemaPath=e.schemaPath+\".additionalItems\",d.errSchemaPath=e.errSchemaPath+\"/additionalItems\",a+=\" \"+m+\" = true; if (\"+h+\".length > \"+i.length+\") {  for (var \"+v+\" = \"+i.length+\"; \"+v+\" < \"+h+\".length; \"+v+\"++) { \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers,!0);var O=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var R=e.validate(d);d.baseId=P,a+=e.util.varOccurences(R,g)<2?\" \"+e.util.varReplace(R,g,O)+\" \":\" var \"+g+\" = \"+O+\"; \"+R+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" } }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}}else if(e.util.schemaHasRules(i,e.RULES.all)){d.schema=i,d.schemaPath=n,d.errSchemaPath=l,a+=\"  for (var \"+v+\" = 0; \"+v+\" < \"+h+\".length; \"+v+\"++) { \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers,!0);var O=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var R=e.validate(d);d.baseId=P,a+=e.util.varOccurences(R,g)<2?\" \"+e.util.varReplace(R,g,O)+\" \":\" var \"+g+\" = \"+O+\"; \"+R+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}return c&&(a+=\" \"+p+\" if (\"+f+\" == errors) {\"),a=e.util.cleanUpCode(a)}},{}],26:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n,s+=\"var division\"+o+\";if (\",f&&(s+=\" \"+a+\" !== undefined && ( typeof \"+a+\" != 'number' || \"),s+=\" (division\"+o+\" = \"+u+\" / \"+a+\", \",s+=e.opts.multipleOfPrecision?\" Math.abs(Math.round(division\"+o+\") - division\"+o+\") > 1e-\"+e.opts.multipleOfPrecision+\" \":\" division\"+o+\" !== parseInt(division\"+o+\") \",s+=\" ) \",f&&(s+=\"  )  \"),s+=\" ) {   \";var d=d||[];d.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"multipleOf\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { multipleOf: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should be multiple of \",s+=f?\"' + \"+a:\"\"+n+\"'\"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var p=s;return s=d.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+p+\"]); \":\" validate.errors = [\"+p+\"]; return false; \":\" var err = \"+p+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],27:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"errs__\"+s,f=e.util.copy(e);f.level++;var d=\"valid\"+f.level;if(e.util.schemaHasRules(i,e.RULES.all)){f.schema=i,f.schemaPath=n,f.errSchemaPath=l,a+=\" var \"+u+\" = errors;  \";var p=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.createErrors=!1;var m;f.opts.allErrors&&(m=f.opts.allErrors,f.opts.allErrors=!1),a+=\" \"+e.validate(f)+\" \",f.createErrors=!0,m&&(f.opts.allErrors=m),e.compositeRule=f.compositeRule=p,a+=\" if (\"+d+\") {   \";var v=v||[];v.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"not\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT be valid' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var y=a;a=v.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+y+\"]); \":\" validate.errors = [\"+y+\"]; return false; \":\" var err = \"+y+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else {  errors = \"+u+\"; if (vErrors !== null) { if (\"+u+\") vErrors.length = \"+u+\"; else vErrors = null; } \",e.opts.allErrors&&(a+=\" } \")}else a+=\"  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"not\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT be valid' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",c&&(a+=\" if (false) { \");return a}},{}],28:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level;a+=\"var \"+f+\" = errors;var prevValid\"+s+\" = false;var \"+u+\" = false;\";var v=d.baseId,y=e.compositeRule;e.compositeRule=d.compositeRule=!0;var g=i;if(g)for(var P,E=-1,b=g.length-1;E<b;)P=g[E+=1],e.util.schemaHasRules(P,e.RULES.all)?(d.schema=P,d.schemaPath=n+\"[\"+E+\"]\",d.errSchemaPath=l+\"/\"+E,a+=\"  \"+e.validate(d)+\" \",d.baseId=v):a+=\" var \"+m+\" = true; \",E&&(a+=\" if (\"+m+\" && prevValid\"+s+\") \"+u+\" = false; else { \",p+=\"}\"),a+=\" if (\"+m+\") \"+u+\" = prevValid\"+s+\" = true;\";e.compositeRule=d.compositeRule=y,a+=\"\"+p+\"if (!\"+u+\") {   \";var w=w||[];w.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"oneOf\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should match exactly one schema in oneOf' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var j=a;return a=w.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+j+\"]); \":\" validate.errors = [\"+j+\"]; return false; \":\" var err = \"+j+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"} else {  errors = \"+f+\"; if (vErrors !== null) { if (\"+f+\") vErrors.length = \"+f+\"; else vErrors = null; }\",e.opts.allErrors&&(a+=\" } \"),a}},{}],29:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=f?\"(new RegExp(\"+a+\"))\":e.usePattern(n);s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'string') || \"),s+=\" !\"+d+\".test(\"+u+\") ) {   \";var p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"pattern\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { pattern:  \",s+=f?\"\"+a:\"\"+e.util.toQuotedString(n),s+=\"  } \",e.opts.messages!==!1&&(s+=\" , message: 'should match pattern \\\"\",s+=f?\"' + \"+a+\" + '\":\"\"+e.util.escapeQuotes(n),s+=\"\\\"' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+e.util.toQuotedString(n),s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],30:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"key\"+s,d=\"patternMatched\"+s,p=\"\",m=e.opts.ownProperties;a+=\"var \"+u+\" = true;\";var v=i;if(v)for(var y,g=-1,P=v.length-1;g<P;){y=v[g+=1],a+=\" var \"+d+\" = false; for (var \"+f+\" in \"+h+\") {  \",m&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+f+\")) continue; \"),a+=\" \"+d+\" = \"+e.usePattern(y)+\".test(\"+f+\"); if (\"+d+\") break; } \";var E=e.util.escapeQuotes(y);a+=\" if (!\"+d+\") { \"+u+\" = false;  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"patternRequired\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingPattern: '\"+E+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should have property matching pattern \\\\'\"+E+\"\\\\'' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   \",c&&(p+=\"}\",a+=\" else { \")}return a+=\"\"+p}},{}],31:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level,v=\"key\"+s,y=d.dataLevel=e.dataLevel+1,g=\"data\"+y,P=Object.keys(i||{}),E=e.schema.patternProperties||{},b=Object.keys(E),w=e.schema.additionalProperties,j=P.length||b.length,S=w===!1,$=\"object\"==typeof w&&Object.keys(w).length,x=e.opts.removeAdditional,_=S||$||x,O=e.opts.ownProperties,R=e.baseId,I=e.schema.required;if(I&&(!e.opts.v5||!I.$data)&&I.length<e.opts.loopRequired)var A=e.util.toHash(I);if(e.opts.v5)var k=e.schema.patternGroups||{},q=Object.keys(k);if(a+=\"var \"+f+\" = errors;var \"+m+\" = true;\",_){if(a+=\" for (var \"+v+\" in \"+h+\") {  \",O&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+v+\")) continue; \"),j){if(a+=\" var isAdditional\"+s+\" = !(false \",P.length)if(P.length>5)a+=\" || validate.schema\"+n+\"[\"+v+\"] \";else{var D=P;if(D)for(var L,Q=-1,C=D.length-1;Q<C;)L=D[Q+=1],a+=\" || \"+v+\" == \"+e.util.toQuotedString(L)+\" \"}if(b.length){var V=b;if(V)for(var z,U=-1,T=V.length-1;U<T;)z=V[U+=1],a+=\" || \"+e.usePattern(z)+\".test(\"+v+\") \"}if(e.opts.v5&&q&&q.length){var M=q;if(M)for(var N,U=-1,F=M.length-1;U<F;)N=M[U+=1],a+=\" || \"+e.usePattern(N)+\".test(\"+v+\") \"}a+=\" ); if (isAdditional\"+s+\") { \"}if(\"all\"==x)a+=\" delete \"+h+\"[\"+v+\"]; \";else{var H=e.errorPath,J=\"' + \"+v+\" + '\";if(e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers)),S)if(x)a+=\" delete \"+h+\"[\"+v+\"]; \";else{a+=\" \"+m+\" = false; \";var G=l;l=e.errSchemaPath+\"/additionalProperties\";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"additionalProperties\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { additionalProperty: '\"+J+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have additional properties' \"),e.opts.verbose&&(a+=\" , schema: false , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",l=G,c&&(a+=\" break; \")}else if($)if(\"failing\"==x){a+=\" var \"+f+\" = errors;  \";var Z=e.compositeRule;e.compositeRule=d.compositeRule=!0,d.schema=w,d.schemaPath=e.schemaPath+\".additionalProperties\",d.errSchemaPath=e.errSchemaPath+\"/additionalProperties\",d.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",a+=\" if (!\"+m+\") { errors = \"+f+\"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete \"+h+\"[\"+v+\"]; }  \",e.compositeRule=d.compositeRule=Z}else{d.schema=w,d.schemaPath=e.schemaPath+\".additionalProperties\",d.errSchemaPath=e.errSchemaPath+\"/additionalProperties\",d.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",c&&(a+=\" if (!\"+m+\") break; \")}e.errorPath=H}j&&(a+=\" } \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}var X=e.opts.useDefaults&&!e.compositeRule;if(P.length){var ee=P;if(ee)for(var L,re=-1,te=ee.length-1;re<te;){L=ee[re+=1];var ae=i[L];if(e.util.schemaHasRules(ae,e.RULES.all)){var se=e.util.getProperty(L),Y=h+se,oe=X&&void 0!==ae.default;d.schema=ae,d.schemaPath=n+se,d.errSchemaPath=l+\"/\"+e.util.escapeFragment(L),d.errorPath=e.util.getPath(e.errorPath,L,e.opts.jsonPointers),d.dataPathArr[y]=e.util.toQuotedString(L);var W=e.validate(d);if(d.baseId=R,e.util.varOccurences(W,g)<2){W=e.util.varReplace(W,g,Y);var ie=Y}else{var ie=g;a+=\" var \"+g+\" = \"+Y+\"; \"}if(oe)a+=\" \"+W+\" \";else{if(A&&A[L]){a+=\" if (\"+ie+\" === undefined) { \"+m+\" = false; \";var H=e.errorPath,G=l,ne=e.util.escapeQuotes(L);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(H,L,e.opts.jsonPointers)),l=e.errSchemaPath+\"/required\";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+ne+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+ne+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),\na+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",l=G,e.errorPath=H,a+=\" } else { \"}else a+=c?\" if (\"+ie+\" === undefined) { \"+m+\" = true; } else { \":\" if (\"+ie+\" !== undefined) { \";a+=\" \"+W+\" } \"}}c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}}var le=b;if(le)for(var z,ce=-1,he=le.length-1;ce<he;){z=le[ce+=1];var ae=E[z];if(e.util.schemaHasRules(ae,e.RULES.all)){d.schema=ae,d.schemaPath=e.schemaPath+\".patternProperties\"+e.util.getProperty(z),d.errSchemaPath=e.errSchemaPath+\"/patternProperties/\"+e.util.escapeFragment(z),a+=\" for (var \"+v+\" in \"+h+\") {  \",O&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+v+\")) continue; \"),a+=\" if (\"+e.usePattern(z)+\".test(\"+v+\")) { \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" } \",c&&(a+=\" else \"+m+\" = true; \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}}if(e.opts.v5){var ue=q;if(ue)for(var N,fe=-1,de=ue.length-1;fe<de;){N=ue[fe+=1];var pe=k[N],ae=pe.schema;if(e.util.schemaHasRules(ae,e.RULES.all)){d.schema=ae,d.schemaPath=e.schemaPath+\".patternGroups\"+e.util.getProperty(N)+\".schema\",d.errSchemaPath=e.errSchemaPath+\"/patternGroups/\"+e.util.escapeFragment(N)+\"/schema\",a+=\" var pgPropCount\"+s+\" = 0; for (var \"+v+\" in \"+h+\") {  \",O&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+v+\")) continue; \"),a+=\" if (\"+e.usePattern(N)+\".test(\"+v+\")) { pgPropCount\"+s+\"++; \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" } \",c&&(a+=\" else \"+m+\" = true; \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\");var me=pe.minimum,ve=pe.maximum;if(void 0!==me||void 0!==ve){a+=\" var \"+u+\" = true; \";var G=l;if(void 0!==me){var ye=me,ge=\"minimum\",Pe=\"less\";a+=\" \"+u+\" = pgPropCount\"+s+\" >= \"+me+\"; \",l=e.errSchemaPath+\"/patternGroups/minimum\",a+=\"  if (!\"+u+\") {   \";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"patternGroups\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { reason: '\"+ge+\"', limit: \"+ye+\", pattern: '\"+e.util.escapeQuotes(N)+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have \"+Pe+\" than \"+ye+' properties matching pattern \"'+e.util.escapeQuotes(N)+\"\\\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",void 0!==ve&&(a+=\" else \")}if(void 0!==ve){var ye=ve,ge=\"maximum\",Pe=\"more\";a+=\" \"+u+\" = pgPropCount\"+s+\" <= \"+ve+\"; \",l=e.errSchemaPath+\"/patternGroups/maximum\",a+=\"  if (!\"+u+\") {   \";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"patternGroups\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { reason: '\"+ge+\"', limit: \"+ye+\", pattern: '\"+e.util.escapeQuotes(N)+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have \"+Pe+\" than \"+ye+' properties matching pattern \"'+e.util.escapeQuotes(N)+\"\\\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \"}l=G,c&&(a+=\" if (\"+u+\") { \",p+=\"}\")}}}}return c&&(a+=\" \"+p+\" if (\"+f+\" == errors) {\"),a=e.util.cleanUpCode(a)}},{}],32:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s,o=\" \",i=e.level,n=e.dataLevel,l=e.schema[r],c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(n||\"\"),f=\"valid\"+i;if(\"#\"==l||\"#/\"==l)e.isRoot?(a=e.async,s=\"validate\"):(a=e.root.schema.$async===!0,s=\"root.refVal[0]\");else{var d=e.resolveRef(e.baseId,l,e.isRoot);if(void 0===d){var p=\"can't resolve reference \"+l+\" from id \"+e.baseId;if(\"fail\"==e.opts.missingRefs){console.log(p);var m=m||[];m.push(o),o=\"\",e.createErrors!==!1?(o+=\" { keyword: '\"+(t||\"$ref\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { ref: '\"+e.util.escapeQuotes(l)+\"' } \",e.opts.messages!==!1&&(o+=\" , message: 'can\\\\'t resolve reference \"+e.util.escapeQuotes(l)+\"' \"),e.opts.verbose&&(o+=\" , schema: \"+e.util.toQuotedString(l)+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),o+=\" } \"):o+=\" {} \";var v=o;o=m.pop(),o+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+v+\"]); \":\" validate.errors = [\"+v+\"]; return false; \":\" var err = \"+v+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",h&&(o+=\" if (false) { \")}else{if(\"ignore\"!=e.opts.missingRefs){var y=new Error(p);throw y.missingRef=e.resolve.url(e.baseId,l),y.missingSchema=e.resolve.normalizeId(e.resolve.fullPath(y.missingRef)),y}console.log(p),h&&(o+=\" if (true) { \")}}else if(d.inline){var g=e.util.copy(e);g.level++;var P=\"valid\"+g.level;g.schema=d.schema,g.schemaPath=\"\",g.errSchemaPath=l;var E=e.validate(g).replace(/validate\\.schema/g,d.code);o+=\" \"+E+\" \",h&&(o+=\" if (\"+P+\") { \")}else a=d.$async===!0,s=d.code}if(s){var m=m||[];m.push(o),o=\"\",o+=e.opts.passContext?\" \"+s+\".call(this, \":\" \"+s+\"( \",o+=\" \"+u+\", (dataPath || '')\",'\"\"'!=e.errorPath&&(o+=\" + \"+e.errorPath);o+=\" , \"+(n?\"data\"+(n-1||\"\"):\"parentData\")+\" , \"+(n?e.dataPathArr[n]:\"parentDataProperty\")+\", rootData)  \";var b=o;if(o=m.pop(),a){if(!e.async)throw new Error(\"async schema referenced by sync schema\");o+=\" try { \",h&&(o+=\"var \"+f+\" =\"),o+=\" \"+e.yieldAwait+\" \"+b+\"; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } \",h&&(o+=\" if (\"+f+\") { \")}else o+=\" if (!\"+b+\") { if (vErrors === null) vErrors = \"+s+\".errors; else vErrors = vErrors.concat(\"+s+\".errors); errors = vErrors.length; } \",h&&(o+=\" else { \")}return o}},{}],33:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;f&&(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \");var d=\"schema\"+s;if(!f)if(i.length<e.opts.loopRequired&&e.schema.properties&&Object.keys(e.schema.properties).length){var p=[],m=i;if(m)for(var v,y=-1,g=m.length-1;y<g;){v=m[y+=1];var P=e.schema.properties[v];P&&e.util.schemaHasRules(P,e.RULES.all)||(p[p.length]=v)}}else var p=i;if(f||p.length){var E=e.errorPath,b=f||p.length>=e.opts.loopRequired;if(c)if(a+=\" var missing\"+s+\"; \",b){f||(a+=\" var \"+d+\" = validate.schema\"+n+\"; \");var w=\"i\"+s,j=\"schema\"+s+\"[\"+w+\"]\",S=\"' + \"+j+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(E,j,e.opts.jsonPointers)),a+=\" var \"+u+\" = true; \",f&&(a+=\" if (schema\"+s+\" === undefined) \"+u+\" = true; else if (!Array.isArray(schema\"+s+\")) \"+u+\" = false; else {\"),a+=\" for (var \"+w+\" = 0; \"+w+\" < \"+d+\".length; \"+w+\"++) { \"+u+\" = \"+h+\"[\"+d+\"[\"+w+\"]] !== undefined; if (!\"+u+\") break; } \",f&&(a+=\"  }  \"),a+=\"  if (!\"+u+\") {   \";var $=$||[];$.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var x=a;a=$.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+x+\"]); \":\" validate.errors = [\"+x+\"]; return false; \":\" var err = \"+x+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else { \"}else{a+=\" if ( \";var _=p;if(_)for(var O,w=-1,R=_.length-1;w<R;){O=_[w+=1],w&&(a+=\" || \");var I=e.util.getProperty(O);a+=\" ( \"+h+I+\" === undefined && (missing\"+s+\" = \"+e.util.toQuotedString(e.opts.jsonPointers?O:I)+\") ) \"}a+=\") {  \";var j=\"missing\"+s,S=\"' + \"+j+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(E,j,!0):E+\" + \"+j);var $=$||[];$.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var x=a;a=$.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+x+\"]); \":\" validate.errors = [\"+x+\"]; return false; \":\" var err = \"+x+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else { \"}else if(b){f||(a+=\" var \"+d+\" = validate.schema\"+n+\"; \");var w=\"i\"+s,j=\"schema\"+s+\"[\"+w+\"]\",S=\"' + \"+j+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(E,j,e.opts.jsonPointers)),f&&(a+=\" if (\"+d+\" && !Array.isArray(\"+d+\")) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (\"+d+\" !== undefined) { \"),a+=\" for (var \"+w+\" = 0; \"+w+\" < \"+d+\".length; \"+w+\"++) { if (\"+h+\"[\"+d+\"[\"+w+\"]] === undefined) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } \",f&&(a+=\"  }  \")}else{var A=p;if(A)for(var k,q=-1,D=A.length-1;q<D;){k=A[q+=1];var I=e.util.getProperty(k),S=e.util.escapeQuotes(k);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(E,k,e.opts.jsonPointers)),a+=\" if (\"+h+I+\" === undefined) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } \"}}e.errorPath=E}else c&&(a+=\" if (true) {\");return a}},{}],34:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m,v=\"valid\"+d.level,y=\"ifPassed\"+e.level,g=d.baseId;a+=\"var \"+y+\";\";var P=i;if(P)for(var E,b=-1,w=P.length-1;b<w;){if(E=P[b+=1],b&&!m&&(a+=\" if (!\"+y+\") { \",p+=\"}\"),E.if&&e.util.schemaHasRules(E.if,e.RULES.all)){a+=\" var \"+f+\" = errors;   \";var j=e.compositeRule;if(e.compositeRule=d.compositeRule=!0,d.createErrors=!1,d.schema=E.if,d.schemaPath=n+\"[\"+b+\"].if\",d.errSchemaPath=l+\"/\"+b+\"/if\",a+=\"  \"+e.validate(d)+\" \",d.baseId=g,d.createErrors=!0,e.compositeRule=d.compositeRule=j,a+=\" \"+y+\" = \"+v+\"; if (\"+y+\") {  \",\"boolean\"==typeof E.then){if(E.then===!1){var S=S||[];S.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"switch\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { caseIndex: \"+b+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should pass \\\"switch\\\" keyword validation' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var $=a;a=S.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+$+\"]); \":\" validate.errors = [\"+$+\"]; return false; \":\" var err = \"+$+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}a+=\" var \"+v+\" = \"+E.then+\"; \"}else d.schema=E.then,d.schemaPath=n+\"[\"+b+\"].then\",d.errSchemaPath=l+\"/\"+b+\"/then\",a+=\"  \"+e.validate(d)+\" \",d.baseId=g;a+=\"  } else {  errors = \"+f+\"; if (vErrors !== null) { if (\"+f+\") vErrors.length = \"+f+\"; else vErrors = null; } } \"}else if(a+=\" \"+y+\" = true;  \",\"boolean\"==typeof E.then){if(E.then===!1){var S=S||[];S.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"switch\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { caseIndex: \"+b+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should pass \\\"switch\\\" keyword validation' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var $=a;a=S.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+$+\"]); \":\" validate.errors = [\"+$+\"]; return false; \":\" var err = \"+$+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}a+=\" var \"+v+\" = \"+E.then+\"; \"}else d.schema=E.then,d.schemaPath=n+\"[\"+b+\"].then\",d.errSchemaPath=l+\"/\"+b+\"/then\",a+=\"  \"+e.validate(d)+\" \",d.baseId=g;m=E.continue}return a+=\"\"+p+\"var \"+u+\" = \"+v+\"; \",a=e.util.cleanUpCode(a)}},{}],35:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=\"valid\"+o,d=e.opts.v5&&n&&n.$data;if(d?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n,(n||d)&&e.opts.uniqueItems!==!1){d&&(s+=\" var \"+f+\"; if (\"+a+\" === false || \"+a+\" === undefined) \"+f+\" = true; else if (typeof \"+a+\" != 'boolean') \"+f+\" = false; else { \"),s+=\" var \"+f+\" = true; if (\"+u+\".length > 1) { var i = \"+u+\".length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(\"+u+\"[i], \"+u+\"[j])) { \"+f+\" = false; break outer; } } } } \",d&&(s+=\"  }  \"),s+=\" if (!\"+f+\") {   \";var p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"uniqueItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { i: i, j: j } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=d?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \",h&&(s+=\" else { \")}else h&&(s+=\" if (true) { \");return s}},{}],36:[function(e,r,t){\"use strict\";r.exports=function(e,r){function t(e){for(var r=0;r<e.rules.length;r++)if(a(e.rules[r]))return!0}function a(r){return void 0!==e.schema[r.keyword]||\"properties\"==r.keyword&&(e.schema.additionalProperties===!1||\"object\"==typeof e.schema.additionalProperties||e.schema.patternProperties&&Object.keys(e.schema.patternProperties).length||e.opts.v5&&e.schema.patternGroups&&Object.keys(e.schema.patternGroups).length)}var s=\"\",o=e.schema.$async===!0;if(e.isTop){var i=e.isTop,n=e.level=0,l=e.dataLevel=0,c=\"data\";if(e.rootId=e.resolve.fullPath(e.root.schema.id),e.baseId=e.baseId||e.rootId,o){e.async=!0;var h=\"es7\"==e.opts.async;e.yieldAwait=h?\"await\":\"yield\"}delete e.isTop,e.dataPathArr=[void 0],s+=\" var validate = \",o?h?s+=\" (async function \":(\"co*\"==e.opts.async&&(s+=\"co.wrap\"),s+=\"(function* \"):s+=\" (function \",s+=\" (data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; var vErrors = null; \",s+=\" var errors = 0;     \",s+=\" if (rootData === undefined) rootData = data;\"}else{var n=e.level,l=e.dataLevel,c=\"data\"+(l||\"\");if(e.schema.id&&(e.baseId=e.resolve.url(e.baseId,e.schema.id)),o&&!e.async)throw new Error(\"async schema in sync schema\");s+=\" var errs_\"+n+\" = errors;\"}var u,f=\"valid\"+n,d=!e.opts.allErrors,p=\"\",m=\"\",v=e.schema.type,y=Array.isArray(v);if(v&&e.opts.coerceTypes){var g=e.util.coerceToTypes(e.opts.coerceTypes,v);if(g){var P=e.schemaPath+\".type\",E=e.errSchemaPath+\"/type\",b=y?\"checkDataTypes\":\"checkDataType\";s+=\" if (\"+e.util[b](v,c,!0)+\") {  \";var w=\"dataType\"+n,j=\"coerced\"+n;s+=\" var \"+w+\" = typeof \"+c+\"; \",\"array\"==e.opts.coerceTypes&&(s+=\" if (\"+w+\" == 'object' && Array.isArray(\"+c+\")) \"+w+\" = 'array'; \"),s+=\" var \"+j+\" = undefined; \";var S=\"\",$=g;if($)for(var x,_=-1,O=$.length-1;_<O;)x=$[_+=1],_&&(s+=\" if (\"+j+\" === undefined) { \",S+=\"}\"),\"array\"==e.opts.coerceTypes&&\"array\"!=x&&(s+=\" if (\"+w+\" == 'array' && \"+c+\".length == 1) { \"+j+\" = \"+c+\" = \"+c+\"[0]; \"+w+\" = typeof \"+c+\";  } \"),\"string\"==x?s+=\" if (\"+w+\" == 'number' || \"+w+\" == 'boolean') \"+j+\" = '' + \"+c+\"; else if (\"+c+\" === null) \"+j+\" = ''; \":\"number\"==x||\"integer\"==x?(s+=\" if (\"+w+\" == 'boolean' || \"+c+\" === null || (\"+w+\" == 'string' && \"+c+\" && \"+c+\" == +\"+c+\" \",\"integer\"==x&&(s+=\" && !(\"+c+\" % 1)\"),s+=\")) \"+j+\" = +\"+c+\"; \"):\"boolean\"==x?s+=\" if (\"+c+\" === 'false' || \"+c+\" === 0 || \"+c+\" === null) \"+j+\" = false; else if (\"+c+\" === 'true' || \"+c+\" === 1) \"+j+\" = true; \":\"null\"==x?s+=\" if (\"+c+\" === '' || \"+c+\" === 0 || \"+c+\" === false) \"+j+\" = null; \":\"array\"==e.opts.coerceTypes&&\"array\"==x&&(s+=\" if (\"+w+\" == 'string' || \"+w+\" == 'number' || \"+w+\" == 'boolean' || \"+c+\" == null) \"+j+\" = [\"+c+\"]; \");s+=\" \"+S+\" if (\"+j+\" === undefined) {   \";var R=R||[];R.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(u||\"type\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(E)+\" , params: { type: '\",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+P+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),s+=\" } \"):s+=\" {} \";var I=s;s=R.pop(),s+=!e.compositeRule&&d?e.async?\" throw new ValidationError([\"+I+\"]); \":\" validate.errors = [\"+I+\"]; return false; \":\" var err = \"+I+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } else {  \";var A=l?\"data\"+(l-1||\"\"):\"parentData\",k=l?e.dataPathArr[l]:\"parentDataProperty\";s+=\" \"+c+\" = \"+j+\"; \",l||(s+=\"if (\"+A+\" !== undefined)\"),s+=\" \"+A+\"[\"+k+\"] = \"+j+\"; } } \"}}var q;if(e.schema.$ref&&(q=e.util.schemaHasRulesExcept(e.schema,e.RULES.all,\"$ref\"))){if(\"fail\"==e.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path \"'+e.errSchemaPath+'\"');\"ignore\"==e.opts.extendRefs?(q=!1,console.log('$ref: keywords ignored in schema at path \"'+e.errSchemaPath+'\"')):e.opts.extendRefs!==!0&&console.log('$ref: all keywords used in schema at path \"'+e.errSchemaPath+'\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour')}if(e.schema.$ref&&!q)s+=\" \"+e.RULES.all.$ref.code(e,\"$ref\")+\" \",d&&(s+=\" } if (errors === \",s+=i?\"0\":\"errs_\"+n,s+=\") { \",m+=\"}\");else{var D=e.RULES;if(D)for(var L,Q=-1,C=D.length-1;Q<C;)if(L=D[Q+=1],t(L)){if(L.type&&(s+=\" if (\"+e.util.checkDataType(L.type,c)+\") { \"),e.opts.useDefaults&&!e.compositeRule)if(\"object\"==L.type&&e.schema.properties){var V=e.schema.properties,z=Object.keys(V),U=z;if(U)for(var T,M=-1,N=U.length-1;M<N;){T=U[M+=1];var F=V[T];if(void 0!==F.default){var H=c+e.util.getProperty(T);s+=\"  if (\"+H+\" === undefined) \"+H+\" = \",s+=\"shared\"==e.opts.useDefaults?\" \"+e.useDefault(F.default)+\" \":\" \"+JSON.stringify(F.default)+\" \",s+=\"; \"}}}else if(\"array\"==L.type&&Array.isArray(e.schema.items)){var J=e.schema.items;if(J)for(var F,_=-1,G=J.length-1;_<G;)if(F=J[_+=1],void 0!==F.default){var H=c+\"[\"+_+\"]\";s+=\"  if (\"+H+\" === undefined) \"+H+\" = \",s+=\"shared\"==e.opts.useDefaults?\" \"+e.useDefault(F.default)+\" \":\" \"+JSON.stringify(F.default)+\" \",s+=\"; \"}}var K=L.rules;if(K)for(var B,Z=-1,Y=K.length-1;Z<Y;)B=K[Z+=1],a(B)&&(s+=\" \"+B.code(e,B.keyword)+\" \",d&&(p+=\"}\"));if(d&&(s+=\" \"+p+\" \",p=\"\"),L.type&&(s+=\" } \",v&&v===L.type)){var W=!0;s+=\" else { \";var P=e.schemaPath+\".type\",E=e.errSchemaPath+\"/type\",R=R||[];R.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(u||\"type\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(E)+\" , params: { type: '\",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+P+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),s+=\" } \"):s+=\" {} \";var I=s;s=R.pop(),s+=!e.compositeRule&&d?e.async?\" throw new ValidationError([\"+I+\"]); \":\" validate.errors = [\"+I+\"]; return false; \":\" var err = \"+I+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \"}d&&(s+=\" if (errors === \",s+=i?\"0\":\"errs_\"+n,s+=\") { \",m+=\"}\")}}if(v&&!W&&(!e.opts.coerceTypes||!g)){var P=e.schemaPath+\".type\",E=e.errSchemaPath+\"/type\",b=y?\"checkDataTypes\":\"checkDataType\";s+=\" if (\"+e.util[b](v,c,!0)+\") {   \";var R=R||[];R.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(u||\"type\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(E)+\" , params: { type: '\",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+P+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),s+=\" } \"):s+=\" {} \";var I=s;s=R.pop(),s+=!e.compositeRule&&d?e.async?\" throw new ValidationError([\"+I+\"]); \":\" validate.errors = [\"+I+\"]; return false; \":\" var err = \"+I+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" }\"}return d&&(s+=\" \"+m+\" \"),i?(o?(s+=\" if (errors === 0) return true;           \",s+=\" else throw new ValidationError(vErrors); \"):(s+=\" validate.errors = vErrors; \",s+=\" return errors === 0;       \"),s+=\" }); return validate;\"):s+=\" var \"+f+\" = errors === errs_\"+n+\";\",s=e.util.cleanUpCode(s),i&&d&&(s=e.util.cleanUpVarErrors(s,o)),s}},{}],37:[function(e,r,t){\"use strict\";function a(e,r){function t(e,r,t){for(var a,o=0;o<s.length;o++){var i=s[o];if(i.type==r){a=i;break}}a||(a={type:r,rules:[]},s.push(a));var l={keyword:e,definition:t,custom:!0,code:n};a.rules.push(l),s.custom[e]=l}function a(e){if(!s.types[e])throw new Error(\"Unknown type \"+e)}var s=this.RULES;if(s.keywords[e])throw new Error(\"Keyword \"+e+\" is already defined\");if(!i.test(e))throw new Error(\"Keyword \"+e+\" is not a valid identifier\");if(r){if(r.macro&&void 0!==r.valid)throw new Error('\"valid\" option cannot be used with macro keywords');var o=r.type;if(Array.isArray(o)){var l,c=o.length;for(l=0;l<c;l++)a(o[l]);for(l=0;l<c;l++)t(e,o[l],r)}else o&&a(o),t(e,o,r);var h=r.$data===!0&&this._opts.v5;if(h&&!r.validate)throw new Error('$data support: \"validate\" function is not defined');var u=r.metaSchema;u&&(h&&(u={anyOf:[u,{$ref:\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#/definitions/$data\"}]}),r.validateSchema=this.compile(u,!0))}s.keywords[e]=s.all[e]=!0}function s(e){var r=this.RULES.custom[e];return r?r.definition:this.RULES.keywords[e]||!1}function o(e){var r=this.RULES;delete r.keywords[e],delete r.all[e],delete r.custom[e];for(var t=0;t<r.length;t++)for(var a=r[t].rules,s=0;s<a.length;s++)if(a[s].keyword==e){a.splice(s,1);break}}var i=/^[a-z_$][a-z0-9_$\\-]*$/i,n=e(\"./dotjs/custom\");r.exports={add:a,get:s,remove:o}},{\"./dotjs/custom\":21}],38:[function(e,r,t){r.exports={id:\"http://json-schema.org/draft-04/schema#\",$schema:\"http://json-schema.org/draft-04/schema#\",description:\"Core schema meta-schema\",definitions:{schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},positiveInteger:{type:\"integer\",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:\"#/definitions/positiveInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},minItems:1,uniqueItems:!0}},type:\"object\",properties:{id:{type:\"string\",format:\"uri\"},$schema:{type:\"string\",format:\"uri\"},title:{type:\"string\"},description:{type:\"string\"},default:{},multipleOf:{type:\"number\",minimum:0,exclusiveMinimum:!0},maximum:{type:\"number\"},exclusiveMaximum:{type:\"boolean\",default:!1},minimum:{type:\"number\"},exclusiveMinimum:{type:\"boolean\",default:!1},maxLength:{$ref:\"#/definitions/positiveInteger\"},minLength:{$ref:\"#/definitions/positiveIntegerDefault0\"},pattern:{type:\"string\",format:\"regex\"},additionalItems:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}],default:{}},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:{}},maxItems:{$ref:\"#/definitions/positiveInteger\"},minItems:{$ref:\"#/definitions/positiveIntegerDefault0\"},uniqueItems:{type:\"boolean\",default:!1},maxProperties:{$ref:\"#/definitions/positiveInteger\"},minProperties:{$ref:\"#/definitions/positiveIntegerDefault0\"},required:{$ref:\"#/definitions/stringArray\"},additionalProperties:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}],default:{}},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},enum:{type:\"array\",minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"}},dependencies:{exclusiveMaximum:[\"maximum\"],exclusiveMinimum:[\"minimum\"]},default:{}}},{}],39:[function(e,r,t){r.exports={id:\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#\",$schema:\"http://json-schema.org/draft-04/schema#\",description:\"Core schema meta-schema (v5 proposals)\",definitions:{schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},positiveInteger:{type:\"integer\",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:\"#/definitions/positiveInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},minItems:1,uniqueItems:!0},$data:{type:\"object\",required:[\"$data\"],properties:{$data:{type:\"string\",anyOf:[{format:\"relative-json-pointer\"},{format:\"json-pointer\"}]}},additionalProperties:!1}},type:\"object\",properties:{id:{type:\"string\",format:\"uri\"},$schema:{type:\"string\",format:\"uri\"},title:{type:\"string\"},description:{type:\"string\"},default:{},multipleOf:{anyOf:[{type:\"number\",minimum:0,exclusiveMinimum:!0},{$ref:\"#/definitions/$data\"}]},maximum:{anyOf:[{type:\"number\"},{$ref:\"#/definitions/$data\"}]},exclusiveMaximum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},minimum:{anyOf:[{type:\"number\"},{$ref:\"#/definitions/$data\"}]},exclusiveMinimum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},maxLength:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minLength:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},pattern:{anyOf:[{type:\"string\",format:\"regex\"},{$ref:\"#/definitions/$data\"}]},additionalItems:{anyOf:[{type:\"boolean\"},{$ref:\"#\"},{$ref:\"#/definitions/$data\"}],default:{}},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:{}},maxItems:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minItems:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},uniqueItems:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},maxProperties:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minProperties:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},required:{anyOf:[{$ref:\"#/definitions/stringArray\"},{$ref:\"#/definitions/$data\"}]},additionalProperties:{anyOf:[{type:\"boolean\"},{$ref:\"#\"},{$ref:\"#/definitions/$data\"}],default:{}},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},enum:{anyOf:[{type:\"array\",minItems:1,uniqueItems:!0},{$ref:\"#/definitions/$data\"}]},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"},format:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatMaximum:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatMinimum:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatExclusiveMaximum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},formatExclusiveMinimum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},constant:{anyOf:[{},{$ref:\"#/definitions/$data\"}]},contains:{$ref:\"#\"},patternGroups:{type:\"object\",additionalProperties:{type:\"object\",required:[\"schema\"],properties:{maximum:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minimum:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},schema:{$ref:\"#\"}},additionalProperties:!1},default:{}},switch:{type:\"array\",items:{required:[\"then\"],properties:{if:{$ref:\"#\"},then:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}]},continue:{type:\"boolean\"}},additionalProperties:!1,dependencies:{continue:[\"if\"]}}}},dependencies:{exclusiveMaximum:[\"maximum\"],exclusiveMinimum:[\"minimum\"],formatMaximum:[\"format\"],formatMinimum:[\"format\"],formatExclusiveMaximum:[\"formatMaximum\"],formatExclusiveMinimum:[\"formatMinimum\"]},default:{}}},{}],40:[function(e,r,t){\"use strict\";function a(r){function t(e,t,s){var o={inline:s||a[e],statements:!0,errors:\"full\"};t&&(o.type=t),r.addKeyword(e,o)}var a={switch:e(\"./dotjs/switch\"),constant:e(\"./dotjs/constant\"),_formatLimit:e(\"./dotjs/_formatLimit\"),patternRequired:e(\"./dotjs/patternRequired\")};if(r._opts.meta!==!1){r.addMetaSchema(e(\"./refs/json-schema-v5.json\"),o)}t(\"constant\"),r.addKeyword(\"contains\",{type:\"array\",macro:s}),\nt(\"formatMaximum\",\"string\",a._formatLimit),t(\"formatMinimum\",\"string\",a._formatLimit),r.addKeyword(\"formatExclusiveMaximum\"),r.addKeyword(\"formatExclusiveMinimum\"),r.addKeyword(\"patternGroups\"),t(\"patternRequired\",\"object\"),t(\"switch\")}function s(e){return{not:{items:{not:e}}}}var o=\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json\";r.exports={enable:a,META_SCHEMA_ID:o}},{\"./dotjs/_formatLimit\":13,\"./dotjs/constant\":20,\"./dotjs/patternRequired\":30,\"./dotjs/switch\":34,\"./refs/json-schema-v5.json\":39}],41:[function(r,t,a){(function(r){!function(s){function o(e){throw new RangeError(D[e])}function i(e,r){for(var t=e.length,a=[];t--;)a[t]=r(e[t]);return a}function n(e,r){var t=e.split(\"@\"),a=\"\";return t.length>1&&(a=t[0]+\"@\",e=t[1]),e=e.replace(q,\".\"),a+i(e.split(\".\"),r).join(\".\")}function l(e){for(var r,t,a=[],s=0,o=e.length;s<o;)r=e.charCodeAt(s++),r>=55296&&r<=56319&&s<o?(t=e.charCodeAt(s++),56320==(64512&t)?a.push(((1023&r)<<10)+(1023&t)+65536):(a.push(r),s--)):a.push(r);return a}function c(e){return i(e,function(e){var r=\"\";return e>65535&&(e-=65536,r+=C(e>>>10&1023|55296),e=56320|1023&e),r+=C(e)}).join(\"\")}function h(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:j}function u(e,r){return e+22+75*(e<26)-((0!=r)<<5)}function f(e,r,t){var a=0;for(e=t?Q(e/_):e>>1,e+=Q(e/r);e>L*$>>1;a+=j)e=Q(e/L);return Q(a+(L+1)*e/(e+x))}function d(e){var r,t,a,s,i,n,l,u,d,p,m=[],v=e.length,y=0,g=R,P=O;for(t=e.lastIndexOf(I),t<0&&(t=0),a=0;a<t;++a)e.charCodeAt(a)>=128&&o(\"not-basic\"),m.push(e.charCodeAt(a));for(s=t>0?t+1:0;s<v;){for(i=y,n=1,l=j;s>=v&&o(\"invalid-input\"),u=h(e.charCodeAt(s++)),(u>=j||u>Q((w-y)/n))&&o(\"overflow\"),y+=u*n,d=l<=P?S:l>=P+$?$:l-P,!(u<d);l+=j)p=j-d,n>Q(w/p)&&o(\"overflow\"),n*=p;r=m.length+1,P=f(y-i,r,0==i),Q(y/r)>w-g&&o(\"overflow\"),g+=Q(y/r),y%=r,m.splice(y++,0,g)}return c(m)}function p(e){var r,t,a,s,i,n,c,h,d,p,m,v,y,g,P,E=[];for(e=l(e),v=e.length,r=R,t=0,i=O,n=0;n<v;++n)m=e[n],m<128&&E.push(C(m));for(a=s=E.length,s&&E.push(I);a<v;){for(c=w,n=0;n<v;++n)m=e[n],m>=r&&m<c&&(c=m);for(y=a+1,c-r>Q((w-t)/y)&&o(\"overflow\"),t+=(c-r)*y,r=c,n=0;n<v;++n)if(m=e[n],m<r&&++t>w&&o(\"overflow\"),m==r){for(h=t,d=j;p=d<=i?S:d>=i+$?$:d-i,!(h<p);d+=j)P=h-p,g=j-p,E.push(C(u(p+P%g,0))),h=Q(P/g);E.push(C(u(h,0))),i=f(t,y,a==s),t=0,++a}++t,++r}return E.join(\"\")}function m(e){return n(e,function(e){return A.test(e)?d(e.slice(4).toLowerCase()):e})}function v(e){return n(e,function(e){return k.test(e)?\"xn--\"+p(e):e})}var y=\"object\"==typeof a&&a&&!a.nodeType&&a,g=\"object\"==typeof t&&t&&!t.nodeType&&t,P=\"object\"==typeof r&&r;P.global!==P&&P.window!==P&&P.self!==P||(s=P);var E,b,w=2147483647,j=36,S=1,$=26,x=38,_=700,O=72,R=128,I=\"-\",A=/^xn--/,k=/[^\\x20-\\x7E]/,q=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,D={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},L=j-S,Q=Math.floor,C=String.fromCharCode;if(E={version:\"1.4.1\",ucs2:{decode:l,encode:c},decode:d,encode:p,toASCII:v,toUnicode:m},\"function\"==typeof e&&\"object\"==typeof e.amd&&e.amd)e(\"punycode\",function(){return E});else if(y&&g)if(t.exports==y)g.exports=E;else for(b in E)E.hasOwnProperty(b)&&(y[b]=E[b]);else s.punycode=E}(this)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],42:[function(e,r,t){\"use strict\";function a(e,r){return Object.prototype.hasOwnProperty.call(e,r)}r.exports=function(e,r,t,o){r=r||\"&\",t=t||\"=\";var i={};if(\"string\"!=typeof e||0===e.length)return i;var n=/\\+/g;e=e.split(r);var l=1e3;o&&\"number\"==typeof o.maxKeys&&(l=o.maxKeys);var c=e.length;l>0&&c>l&&(c=l);for(var h=0;h<c;++h){var u,f,d,p,m=e[h].replace(n,\"%20\"),v=m.indexOf(t);v>=0?(u=m.substr(0,v),f=m.substr(v+1)):(u=m,f=\"\"),d=decodeURIComponent(u),p=decodeURIComponent(f),a(i,d)?s(i[d])?i[d].push(p):i[d]=[i[d],p]:i[d]=p}return i};var s=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}},{}],43:[function(e,r,t){\"use strict\";function a(e,r){if(e.map)return e.map(r);for(var t=[],a=0;a<e.length;a++)t.push(r(e[a],a));return t}var s=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};r.exports=function(e,r,t,n){return r=r||\"&\",t=t||\"=\",null===e&&(e=void 0),\"object\"==typeof e?a(i(e),function(i){var n=encodeURIComponent(s(i))+t;return o(e[i])?a(e[i],function(e){return n+encodeURIComponent(s(e))}).join(r):n+encodeURIComponent(s(e[i]))}).join(r):n?encodeURIComponent(s(n))+t+encodeURIComponent(s(e)):\"\"};var o=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},i=Object.keys||function(e){var r=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(t);return r}},{}],44:[function(e,r,t){\"use strict\";t.decode=t.parse=e(\"./decode\"),t.encode=t.stringify=e(\"./encode\")},{\"./decode\":42,\"./encode\":43}],45:[function(e,r,t){\"use strict\";function a(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}function s(e,r,t){if(e&&c.isObject(e)&&e instanceof a)return e;var s=new a;return s.parse(e,r,t),s}function o(e){return c.isString(e)&&(e=s(e)),e instanceof a?e.format():a.prototype.format.call(e)}function i(e,r){return s(e,!1,!0).resolve(r)}function n(e,r){return e?s(e,!1,!0).resolveObject(r):r}var l=e(\"punycode\"),c=e(\"./util\");t.parse=s,t.resolve=i,t.resolveObject=n,t.format=o,t.Url=a;var h=/^([a-z0-9.+-]+:)/i,u=/:[0-9]*$/,f=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,d=[\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"],p=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat(d),m=[\"'\"].concat(p),v=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(m),y=[\"/\",\"?\",\"#\"],g=/^[+a-z0-9A-Z_-]{0,63}$/,P=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,E={javascript:!0,\"javascript:\":!0},b={javascript:!0,\"javascript:\":!0},w={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},j=e(\"querystring\");a.prototype.parse=function(e,r,t){if(!c.isString(e))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof e);var a=e.indexOf(\"?\"),s=a!==-1&&a<e.indexOf(\"#\")?\"?\":\"#\",o=e.split(s);o[0]=o[0].replace(/\\\\/g,\"/\"),e=o.join(s);var i=e;if(i=i.trim(),!t&&1===e.split(\"#\").length){var n=f.exec(i);if(n)return this.path=i,this.href=i,this.pathname=n[1],n[2]?(this.search=n[2],this.query=r?j.parse(this.search.substr(1)):this.search.substr(1)):r&&(this.search=\"\",this.query={}),this}var u=h.exec(i);if(u){u=u[0];var d=u.toLowerCase();this.protocol=d,i=i.substr(u.length)}if(t||u||i.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var p=\"//\"===i.substr(0,2);!p||u&&b[u]||(i=i.substr(2),this.slashes=!0)}if(!b[u]&&(p||u&&!w[u])){for(var S=-1,$=0;$<y.length;$++){var x=i.indexOf(y[$]);x!==-1&&(S===-1||x<S)&&(S=x)}var _,O;O=S===-1?i.lastIndexOf(\"@\"):i.lastIndexOf(\"@\",S),O!==-1&&(_=i.slice(0,O),i=i.slice(O+1),this.auth=decodeURIComponent(_)),S=-1;for(var $=0;$<v.length;$++){var x=i.indexOf(v[$]);x!==-1&&(S===-1||x<S)&&(S=x)}S===-1&&(S=i.length),this.host=i.slice(0,S),i=i.slice(S),this.parseHost(),this.hostname=this.hostname||\"\";var R=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!R)for(var I=this.hostname.split(/\\./),$=0,A=I.length;$<A;$++){var k=I[$];if(k&&!k.match(g)){for(var q=\"\",D=0,L=k.length;D<L;D++)q+=k.charCodeAt(D)>127?\"x\":k[D];if(!q.match(g)){var Q=I.slice(0,$),C=I.slice($+1),V=k.match(P);V&&(Q.push(V[1]),C.unshift(V[2])),C.length&&(i=\"/\"+C.join(\".\")+i),this.hostname=Q.join(\".\");break}}}this.hostname=this.hostname.length>255?\"\":this.hostname.toLowerCase(),R||(this.hostname=l.toASCII(this.hostname));var z=this.port?\":\"+this.port:\"\";this.host=(this.hostname||\"\")+z,this.href+=this.host,R&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),\"/\"!==i[0]&&(i=\"/\"+i))}if(!E[d])for(var $=0,A=m.length;$<A;$++){var U=m[$];if(i.indexOf(U)!==-1){var T=encodeURIComponent(U);T===U&&(T=escape(U)),i=i.split(U).join(T)}}var M=i.indexOf(\"#\");M!==-1&&(this.hash=i.substr(M),i=i.slice(0,M));var N=i.indexOf(\"?\");if(N!==-1?(this.search=i.substr(N),this.query=i.substr(N+1),r&&(this.query=j.parse(this.query)),i=i.slice(0,N)):r&&(this.search=\"\",this.query={}),i&&(this.pathname=i),w[d]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){var z=this.pathname||\"\";this.path=z+(this.search||\"\")}return this.href=this.format(),this},a.prototype.format=function(){var e=this.auth||\"\";e&&(e=encodeURIComponent(e),e=e.replace(/%3A/i,\":\"),e+=\"@\");var r=this.protocol||\"\",t=this.pathname||\"\",a=this.hash||\"\",s=!1,o=\"\";this.host?s=e+this.host:this.hostname&&(s=e+(this.hostname.indexOf(\":\")===-1?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(s+=\":\"+this.port)),this.query&&c.isObject(this.query)&&Object.keys(this.query).length&&(o=j.stringify(this.query));var i=this.search||o&&\"?\"+o||\"\";return r&&\":\"!==r.substr(-1)&&(r+=\":\"),this.slashes||(!r||w[r])&&s!==!1?(s=\"//\"+(s||\"\"),t&&\"/\"!==t.charAt(0)&&(t=\"/\"+t)):s||(s=\"\"),a&&\"#\"!==a.charAt(0)&&(a=\"#\"+a),i&&\"?\"!==i.charAt(0)&&(i=\"?\"+i),t=t.replace(/[?#]/g,function(e){return encodeURIComponent(e)}),i=i.replace(\"#\",\"%23\"),r+s+t+i+a},a.prototype.resolve=function(e){return this.resolveObject(s(e,!1,!0)).format()},a.prototype.resolveObject=function(e){if(c.isString(e)){var r=new a;r.parse(e,!1,!0),e=r}for(var t=new a,s=Object.keys(this),o=0;o<s.length;o++){var i=s[o];t[i]=this[i]}if(t.hash=e.hash,\"\"===e.href)return t.href=t.format(),t;if(e.slashes&&!e.protocol){for(var n=Object.keys(e),l=0;l<n.length;l++){var h=n[l];\"protocol\"!==h&&(t[h]=e[h])}return w[t.protocol]&&t.hostname&&!t.pathname&&(t.path=t.pathname=\"/\"),t.href=t.format(),t}if(e.protocol&&e.protocol!==t.protocol){if(!w[e.protocol]){for(var u=Object.keys(e),f=0;f<u.length;f++){var d=u[f];t[d]=e[d]}return t.href=t.format(),t}if(t.protocol=e.protocol,e.host||b[e.protocol])t.pathname=e.pathname;else{for(var p=(e.pathname||\"\").split(\"/\");p.length&&!(e.host=p.shift()););e.host||(e.host=\"\"),e.hostname||(e.hostname=\"\"),\"\"!==p[0]&&p.unshift(\"\"),p.length<2&&p.unshift(\"\"),t.pathname=p.join(\"/\")}return t.search=e.search,t.query=e.query,t.host=e.host||\"\",t.auth=e.auth,t.hostname=e.hostname||e.host,t.port=e.port,(t.pathname||t.search)&&(t.path=(t.pathname||\"\")+(t.search||\"\")),t.slashes=t.slashes||e.slashes,t.href=t.format(),t}var m=t.pathname&&\"/\"===t.pathname.charAt(0),v=e.host||e.pathname&&\"/\"===e.pathname.charAt(0),y=v||m||t.host&&e.pathname,g=y,P=t.pathname&&t.pathname.split(\"/\")||[],p=e.pathname&&e.pathname.split(\"/\")||[],E=t.protocol&&!w[t.protocol];if(E&&(t.hostname=\"\",t.port=null,t.host&&(\"\"===P[0]?P[0]=t.host:P.unshift(t.host)),t.host=\"\",e.protocol&&(e.hostname=null,e.port=null,e.host&&(\"\"===p[0]?p[0]=e.host:p.unshift(e.host)),e.host=null),y=y&&(\"\"===p[0]||\"\"===P[0])),v)t.host=e.host||\"\"===e.host?e.host:t.host,t.hostname=e.hostname||\"\"===e.hostname?e.hostname:t.hostname,t.search=e.search,t.query=e.query,P=p;else if(p.length)P||(P=[]),P.pop(),P=P.concat(p),t.search=e.search,t.query=e.query;else if(!c.isNullOrUndefined(e.search)){if(E){t.hostname=t.host=P.shift();var j=!!(t.host&&t.host.indexOf(\"@\")>0)&&t.host.split(\"@\");j&&(t.auth=j.shift(),t.host=t.hostname=j.shift())}return t.search=e.search,t.query=e.query,c.isNull(t.pathname)&&c.isNull(t.search)||(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.href=t.format(),t}if(!P.length)return t.pathname=null,t.path=t.search?\"/\"+t.search:null,t.href=t.format(),t;for(var S=P.slice(-1)[0],$=(t.host||e.host||P.length>1)&&(\".\"===S||\"..\"===S)||\"\"===S,x=0,_=P.length;_>=0;_--)S=P[_],\".\"===S?P.splice(_,1):\"..\"===S?(P.splice(_,1),x++):x&&(P.splice(_,1),x--);if(!y&&!g)for(;x--;x)P.unshift(\"..\");!y||\"\"===P[0]||P[0]&&\"/\"===P[0].charAt(0)||P.unshift(\"\"),$&&\"/\"!==P.join(\"/\").substr(-1)&&P.push(\"\");var O=\"\"===P[0]||P[0]&&\"/\"===P[0].charAt(0);if(E){t.hostname=t.host=O?\"\":P.length?P.shift():\"\";var j=!!(t.host&&t.host.indexOf(\"@\")>0)&&t.host.split(\"@\");j&&(t.auth=j.shift(),t.host=t.hostname=j.shift())}return y=y||t.host&&P.length,y&&!O&&P.unshift(\"\"),P.length?t.pathname=P.join(\"/\"):(t.pathname=null,t.path=null),c.isNull(t.pathname)&&c.isNull(t.search)||(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.auth=e.auth||t.auth,t.slashes=t.slashes||e.slashes,t.href=t.format(),t},a.prototype.parseHost=function(){var e=this.host,r=u.exec(e);r&&(r=r[0],\":\"!==r&&(this.port=r.substr(1)),e=e.substr(0,e.length-r.length)),e&&(this.hostname=e)}},{\"./util\":46,punycode:41,querystring:44}],46:[function(e,r,t){\"use strict\";r.exports={isString:function(e){return\"string\"==typeof e},isObject:function(e){return\"object\"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},{}],47:[function(e,r,t){function a(e){var r=this,t=f.call(arguments,1);return new Promise(function(a,o){function i(r){var t;try{t=e.next(r)}catch(e){return o(e)}c(t)}function n(r){var t;try{t=e.throw(r)}catch(e){return o(e)}c(t)}function c(e){if(e.done)return a(e.value);var t=s.call(r,e.value);return t&&l(t)?t.then(i,n):n(new TypeError('You may only yield a function, promise, generator, array, or object, but the following object was passed: \"'+String(e.value)+'\"'))}if(\"function\"==typeof e&&(e=e.apply(r,t)),!e||\"function\"!=typeof e.next)return a(e);i()})}function s(e){return e?l(e)?e:h(e)||c(e)?a.call(this,e):\"function\"==typeof e?o.call(this,e):Array.isArray(e)?i.call(this,e):u(e)?n.call(this,e):e:e}function o(e){var r=this;return new Promise(function(t,a){e.call(r,function(e,r){if(e)return a(e);arguments.length>2&&(r=f.call(arguments,1)),t(r)})})}function i(e){return Promise.all(e.map(s,this))}function n(e){function r(e,r){t[r]=void 0,o.push(e.then(function(e){t[r]=e}))}for(var t=new e.constructor,a=Object.keys(e),o=[],i=0;i<a.length;i++){var n=a[i],c=s.call(this,e[n]);c&&l(c)?r(c,n):t[n]=e[n]}return Promise.all(o).then(function(){return t})}function l(e){return\"function\"==typeof e.then}function c(e){return\"function\"==typeof e.next&&\"function\"==typeof e.throw}function h(e){var r=e.constructor;return!!r&&(\"GeneratorFunction\"===r.name||\"GeneratorFunction\"===r.displayName||c(r.prototype))}function u(e){return Object==e.constructor}var f=Array.prototype.slice;r.exports=a.default=a.co=a,a.wrap=function(e){function r(){return a.call(this,e.apply(this,arguments))}return r.__generatorFunction__=e,r}},{}],48:[function(e,r,t){var a=\"undefined\"!=typeof JSON?JSON:e(\"jsonify\");r.exports=function(e,r){r||(r={}),\"function\"==typeof r&&(r={cmp:r});var t=r.space||\"\";\"number\"==typeof t&&(t=Array(t+1).join(\" \"));var i=\"boolean\"==typeof r.cycles&&r.cycles,n=r.replacer||function(e,r){return r},l=r.cmp&&function(e){return function(r){return function(t,a){return e({key:t,value:r[t]},{key:a,value:r[a]})}}}(r.cmp),c=[];return function e(r,h,u,f){var d=t?\"\\n\"+new Array(f+1).join(t):\"\",p=t?\": \":\":\";if(u&&u.toJSON&&\"function\"==typeof u.toJSON&&(u=u.toJSON()),u=n.call(r,h,u),void 0!==u){if(\"object\"!=typeof u||null===u)return a.stringify(u);if(s(u)){for(var m=[],v=0;v<u.length;v++){m.push(d+t+(e(u,v,u[v],f+1)||a.stringify(null)))}return\"[\"+m.join(\",\")+d+\"]\"}if(c.indexOf(u)!==-1){if(i)return a.stringify(\"__cycle__\");throw new TypeError(\"Converting circular structure to JSON\")}c.push(u);for(var y=o(u).sort(l&&l(u)),m=[],v=0;v<y.length;v++){var h=y[v],g=e(u,h,u[h],f+1);if(g){m.push(d+t+(a.stringify(h)+p+g))}}return c.splice(c.indexOf(u),1),\"{\"+m.join(\",\")+d+\"}\"}}({\"\":e},\"\",e,0)};var s=Array.isArray||function(e){return\"[object Array]\"==={}.toString.call(e)},o=Object.keys||function(e){var r=Object.prototype.hasOwnProperty||function(){return!0},t=[];for(var a in e)r.call(e,a)&&t.push(a);return t}},{jsonify:49}],49:[function(e,r,t){t.parse=e(\"./lib/parse\"),t.stringify=e(\"./lib/stringify\")},{\"./lib/parse\":50,\"./lib/stringify\":51}],50:[function(e,r,t){var a,s,o,i,n={'\"':'\"',\"\\\\\":\"\\\\\",\"/\":\"/\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"},l=function(e){throw{name:\"SyntaxError\",message:e,at:a,text:o}},c=function(e){return e&&e!==s&&l(\"Expected '\"+e+\"' instead of '\"+s+\"'\"),s=o.charAt(a),a+=1,s},h=function(){var e,r=\"\";for(\"-\"===s&&(r=\"-\",c(\"-\"));s>=\"0\"&&s<=\"9\";)r+=s,c();if(\".\"===s)for(r+=\".\";c()&&s>=\"0\"&&s<=\"9\";)r+=s;if(\"e\"===s||\"E\"===s)for(r+=s,c(),\"-\"!==s&&\"+\"!==s||(r+=s,c());s>=\"0\"&&s<=\"9\";)r+=s,c();if(e=+r,isFinite(e))return e;l(\"Bad number\")},u=function(){var e,r,t,a=\"\";if('\"'===s)for(;c();){if('\"'===s)return c(),a;if(\"\\\\\"===s)if(c(),\"u\"===s){for(t=0,r=0;r<4&&(e=parseInt(c(),16),isFinite(e));r+=1)t=16*t+e;a+=String.fromCharCode(t)}else{if(\"string\"!=typeof n[s])break;a+=n[s]}else a+=s}l(\"Bad string\")},f=function(){for(;s&&s<=\" \";)c()},d=function(){switch(s){case\"t\":return c(\"t\"),c(\"r\"),c(\"u\"),c(\"e\"),!0;case\"f\":return c(\"f\"),c(\"a\"),c(\"l\"),c(\"s\"),c(\"e\"),!1;case\"n\":return c(\"n\"),c(\"u\"),c(\"l\"),c(\"l\"),null}l(\"Unexpected '\"+s+\"'\")},p=function(){var e=[];if(\"[\"===s){if(c(\"[\"),f(),\"]\"===s)return c(\"]\"),e;for(;s;){if(e.push(i()),f(),\"]\"===s)return c(\"]\"),e;c(\",\"),f()}}l(\"Bad array\")},m=function(){var e,r={};if(\"{\"===s){if(c(\"{\"),f(),\"}\"===s)return c(\"}\"),r;for(;s;){if(e=u(),f(),c(\":\"),Object.hasOwnProperty.call(r,e)&&l('Duplicate key \"'+e+'\"'),r[e]=i(),f(),\"}\"===s)return c(\"}\"),r;c(\",\"),f()}}l(\"Bad object\")};i=function(){switch(f(),s){case\"{\":return m();case\"[\":return p();case'\"':return u();case\"-\":return h();default:return s>=\"0\"&&s<=\"9\"?h():d()}},r.exports=function(e,r){var t;return o=e,a=0,s=\" \",t=i(),f(),s&&l(\"Syntax error\"),\"function\"==typeof r?function e(t,a){var s,o,i=t[a];if(i&&\"object\"==typeof i)for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&(o=e(i,s),void 0!==o?i[s]=o:delete i[s]);return r.call(t,a,i)}({\"\":t},\"\"):t}},{}],51:[function(e,r,t){function a(e){return l.lastIndex=0,l.test(e)?'\"'+e.replace(l,function(e){var r=c[e];return\"string\"==typeof r?r:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+e+'\"'}function s(e,r){var t,l,c,h,u,f=o,d=r[e];switch(d&&\"object\"==typeof d&&\"function\"==typeof d.toJSON&&(d=d.toJSON(e)),\"function\"==typeof n&&(d=n.call(r,e,d)),typeof d){case\"string\":return a(d);case\"number\":return isFinite(d)?String(d):\"null\";case\"boolean\":case\"null\":return String(d);case\"object\":if(!d)return\"null\";if(o+=i,u=[],\"[object Array]\"===Object.prototype.toString.apply(d)){for(h=d.length,t=0;t<h;t+=1)u[t]=s(t,d)||\"null\";return c=0===u.length?\"[]\":o?\"[\\n\"+o+u.join(\",\\n\"+o)+\"\\n\"+f+\"]\":\"[\"+u.join(\",\")+\"]\",o=f,c}if(n&&\"object\"==typeof n)for(h=n.length,t=0;t<h;t+=1)l=n[t],\"string\"==typeof l&&(c=s(l,d),c&&u.push(a(l)+(o?\": \":\":\")+c));else for(l in d)Object.prototype.hasOwnProperty.call(d,l)&&(c=s(l,d),c&&u.push(a(l)+(o?\": \":\":\")+c));return c=0===u.length?\"{}\":o?\"{\\n\"+o+u.join(\",\\n\"+o)+\"\\n\"+f+\"}\":\"{\"+u.join(\",\")+\"}\",o=f,c}}var o,i,n,l=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,c={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"};r.exports=function(e,r,t){var a;if(o=\"\",i=\"\",\"number\"==typeof t)for(a=0;a<t;a+=1)i+=\" \";else\"string\"==typeof t&&(i=t);if(n=r,r&&\"function\"!=typeof r&&(\"object\"!=typeof r||\"number\"!=typeof r.length))throw new Error(\"JSON.stringify\");return s(\"\",{\"\":e})}},{}],ajv:[function(e,r,t){\"use strict\";function a(e){return g.test(e)}function s(r){function t(e,r){var t;if(\"string\"==typeof e){if(t=S(e),!t)throw new Error('no schema with key or ref \"'+e+'\"')}else{var a=R(e);t=a.validate||I(a)}var s=t(r);return t.$async===!0?\"*\"==V._opts.async?m(s):s:(V.errors=t.errors,s)}function v(e,r){var t=R(e,void 0,r);return t.validate||I(t)}function E(e,r,t,a){if(Array.isArray(e))for(var s=0;s<e.length;s++)E(e[s],void 0,t,a);else r=i.normalizeId(r||e.id),Q(r),V._schemas[r]=R(e,t,a,!0)}function b(e,r,t){E(e,r,t,!0)}function w(e,r){var s=e.$schema||V._opts.defaultMeta||j(),o=V._formats.uri;V._formats.uri=\"function\"==typeof o?a:g;var i;try{i=t(s,e)}finally{V._formats.uri=o}if(!i&&r){var n=\"schema is invalid: \"+A();if(\"log\"!=V._opts.validateSchema)throw new Error(n);console.error(n)}return i}function j(){var e=V._opts.meta;return V._opts.defaultMeta=\"object\"==typeof e?e.id||e:V._opts.v5?f.META_SCHEMA_ID:y}function S(e){var r=x(e);switch(typeof r){case\"object\":return r.validate||I(r);case\"string\":return S(r);case\"undefined\":return $(e)}}function $(e){var r=i.schema.call(V,{schema:{}},e);if(r){var t=r.schema,a=r.root,s=r.baseId,n=o.call(V,t,a,void 0,s);return V._fragments[e]=new l({ref:e,fragment:!0,schema:t,root:a,baseId:s,validate:n}),n}}function x(e){return e=i.normalizeId(e),V._schemas[e]||V._refs[e]||V._fragments[e]}function _(e){if(e instanceof RegExp)return O(V._schemas,e),void O(V._refs,e);switch(typeof e){case\"undefined\":return O(V._schemas),O(V._refs),void V._cache.clear();case\"string\":var r=x(e);return r&&V._cache.del(r.jsonStr),delete V._schemas[e],void delete V._refs[e];case\"object\":V._cache.del(c(e));var t=e.id;t&&(t=i.normalizeId(t),delete V._schemas[t],delete V._refs[t])}}function O(e,r){for(var t in e){var a=e[t];a.meta||r&&!r.test(t)||(V._cache.del(a.jsonStr),delete e[t])}}function R(e,r,t,a){if(\"object\"!=typeof e)throw new Error(\"schema should be object\");var s=c(e),o=V._cache.get(s);if(o)return o;a=a||V._opts.addUsedSchema!==!1;var n=i.normalizeId(e.id);n&&a&&Q(n);var h,u=V._opts.validateSchema!==!1&&!r;u&&!(h=e.id&&e.id==e.$schema)&&w(e,!0);var f=i.ids.call(V,e),d=new l({id:n,schema:e,localRefs:f,jsonStr:s,meta:t});return\"#\"!=n[0]&&a&&(V._refs[n]=d),V._cache.put(s,d),u&&h&&w(e,!0),d}function I(e,r){function t(){var r=e.validate,a=r.apply(null,arguments);return t.errors=r.errors,a}if(e.compiling)return e.validate=t,t.schema=e.schema,t.errors=null,t.root=r?r:t,e.schema.$async===!0&&(t.$async=!0),t;e.compiling=!0;var a;e.meta&&(a=V._opts,V._opts=V._metaOpts);var s;try{s=o.call(V,e.schema,r,e.localRefs)}finally{e.compiling=!1,e.meta&&(V._opts=a)}return e.validate=s,e.refs=s.refs,e.refVal=s.refVal,e.root=s.root,s}function A(e,r){if(e=e||V.errors,!e)return\"No errors\";r=r||{};for(var t=void 0===r.separator?\", \":r.separator,a=void 0===r.dataVar?\"data\":r.dataVar,s=\"\",o=0;o<e.length;o++){var i=e[o];i&&(s+=a+i.dataPath+\" \"+i.message+t)}return s.slice(0,-t.length)}function k(e,r){\"string\"==typeof r&&(r=new RegExp(r)),V._formats[e]=r}function q(){if(V._opts.meta!==!1){b(e(\"./refs/json-schema-draft-04.json\"),y,!0),V._refs[\"http://json-schema.org/schema\"]=y}}function D(){var e=V._opts.schemas;if(e)if(Array.isArray(e))E(e);else for(var r in e)E(e[r],r)}function L(){for(var e in V._opts.formats){k(e,V._opts.formats[e])}}function Q(e){if(V._schemas[e]||V._refs[e])throw new Error('schema with key or id \"'+e+'\" already exists')}function C(){for(var e=d.copy(V._opts),r=0;r<P.length;r++)delete e[P[r]];return e}if(!(this instanceof s))return new s(r);var V=this;r=this._opts=d.copy(r)||{},this._schemas={},this._refs={},this._fragments={},this._formats=h(r.format),this._cache=r.cache||new n,this._loadingSchemas={},this._compilations=[],this.RULES=u(),this.validate=t,this.compile=v,this.addSchema=E,this.addMetaSchema=b,this.validateSchema=w,this.getSchema=S,this.removeSchema=_,this.addFormat=k,this.errorsText=A,this._addSchema=R,this._compile=I,r.loopRequired=r.loopRequired||1/0,(r.async||r.transpile)&&p.setup(r),r.beautify===!0&&(r.beautify={indent_size:2}),\"property\"==r.errorDataPath&&(r._errorDataPathProperty=!0),this._metaOpts=C(),r.formats&&L(),q(),r.v5&&f.enable(this),\"object\"==typeof r.meta&&b(r.meta),D()}var o=e(\"./compile\"),i=e(\"./compile/resolve\"),n=e(\"./cache\"),l=e(\"./compile/schema_obj\"),c=e(\"json-stable-stringify\"),h=e(\"./compile/formats\"),u=e(\"./compile/rules\"),f=e(\"./v5\"),d=e(\"./compile/util\"),p=e(\"./async\"),m=e(\"co\");r.exports=s,s.prototype.compileAsync=p.compile;var v=e(\"./keyword\");s.prototype.addKeyword=v.add,s.prototype.getKeyword=v.get,s.prototype.removeKeyword=v.remove,s.ValidationError=e(\"./compile/validation_error\");var y=\"http://json-schema.org/draft-04/schema\",g=/^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,P=[\"removeAdditional\",\"useDefaults\",\"coerceTypes\"]},{\"./async\":1,\"./cache\":2,\"./compile\":6,\"./compile/formats\":5,\"./compile/resolve\":7,\"./compile/rules\":8,\"./compile/schema_obj\":9,\"./compile/util\":11,\"./compile/validation_error\":12,\"./keyword\":37,\"./refs/json-schema-draft-04.json\":38,\"./v5\":40,co:47,\"json-stable-stringify\":48}]},{},[])(\"ajv\")});\n//# sourceMappingURL=ajv.min.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"swagger\": \"2.0\",\n\t\"basePath\": \"{{{ config.OPENAPI_BASEPATH }}}\",\n\t\"host\": \"{{ config.OPENAPI_HOST }}\",\n\t\"info\": {\n\t\t\"title\": \"Anno Server API\",\n\t\t\"version\": \"0.0.1\",\n\t\t\"description\": \" See [Web Annotation Protocol](https://www.w3.org/TR/annotation-protocol) \"\n\t},\n\t\"consumes\": [\n\t\t\"application/ld+json\"\n\t],\n\t\"produces\": [\n\t\t\"application/ld+json;profile=\\\"http://www.w3.org/ns/anno.jsonld\\\"\"\n\t],\n\t\"tags\": [\n\t\t{\n\t\t\t\"name\": \"anno\",\n\t\t\t\"description\": \"Web Annotation Protocol\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extensions\",\n\t\t\t\"description\": \"Extensions to Web Annotation Protocol\"\n\t\t}\n\t],\n\t\"securityDefinitions\": {\n\t\t\"Bearer\": {\n\t\t\t\"type\": \"apiKey\",\n\t\t\t\"name\": \"Authorization\",\n\t\t\t\"description\": \"Format: 'Bearer HIER_DAS_TOKEN'\",\n\t\t\t\"in\": \"header\"\n\t\t}\n\t},\n\t\"paths\": {\n\t\t\"/{{ config.OPENAPI_PATH }}\": {\n\t\t\t\"head\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get all annotations that adhere to query without body/target\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"name\": \"$target\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"format\": \"url\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get all annotations that adhere to query\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"name\": \"target.source\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"format\": \"url\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"header\",\n\t\t\t\t\t\t\"name\": \"Prefer\",\n\t\t\t\t\t\t\"description\": \"<a href=\\\"https://www.w3.org/TR/annotation-protocol/#container-representations\\\">Preferred Container Representation</a>\",\n\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\"return=representation;include=\\\"http://www.w3.org/ns/ldp#PreferMinimalContainer\\\"\",\n\t\t\t\t\t\t\t\"return=representation;include=\\\"http://www.w3.org/ns/oa#PreferContainedIRIs\",\n\t\t\t\t\t\t\t\"return=representation;include=\\\"http://www.w3.org/ns/oa#PreferContainedDescriptions\\\"\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Bearer\": []\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Post a new annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"description\": \"New annotation to post\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"header\",\n\t\t\t\t\t\t\"name\": \"Slug\",\n\t\t\t\t\t\t\"description\": \"Preferred annotation ID\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"delete\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Bearer\": []\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Wipe the store\",\n\t\t\t\t\"parameters\": [],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/{{ config.OPENAPI_PATH }}/{annoId}\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"head\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single annotation without body/target\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"delete\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Delete an annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Annotation deleted\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Annotation not found\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"put\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Store a new revision of an annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"description\": \"Updated annotation\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Created a new revision\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/anno/{annoId}-rev-{revId}\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single revision of one annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"revId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the revision\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"head\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single revision of one annotation without body/target\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"revId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the revision\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/anno/{annoId}/reply\": {\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Reply to an annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"Reply to post\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationReply\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"201\": {\n\t\t\t\t\t\t\"description\": \"Reply created\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Annotation not found\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(34);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar bind = __webpack_require__(17);\nvar Axios = __webpack_require__(36);\nvar defaults = __webpack_require__(10);\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(14);\naxios.CancelToken = __webpack_require__(35);\naxios.isCancel = __webpack_require__(15);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(50);\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Cancel = __webpack_require__(14);\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(10);\nvar utils = __webpack_require__(0);\nvar InterceptorManager = __webpack_require__(37);\nvar dispatchRequest = __webpack_require__(38);\nvar isAbsoluteURL = __webpack_require__(46);\nvar combineURLs = __webpack_require__(44);\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar transformData = __webpack_require__(41);\nvar isCancel = __webpack_require__(15);\nvar defaults = __webpack_require__(10);\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.response = response;\n  return error;\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createError = __webpack_require__(16);\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response\n    ));\n  }\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports.BinarySearchTree = __webpack_require__(18);\nmodule.exports.AVLTree = __webpack_require__(52);\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Self-balancing binary search tree using the AVL implementation\n */\nvar BinarySearchTree = __webpack_require__(18)\n  , customUtils = __webpack_require__(19)\n  , util = __webpack_require__(7)\n  , _ = __webpack_require__(4)\n  ;\n\n\n/**\n * Constructor\n * We can't use a direct pointer to the root node (as in the simple binary search tree)\n * as the root will change during tree rotations\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction AVLTree (options) {\n  this.tree = new _AVLTree(options);\n}\n\n\n/**\n * Constructor of the internal AVLTree\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction _AVLTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n/**\n * Inherit basic functions from the basic binary search tree\n */\nutil.inherits(_AVLTree, BinarySearchTree);\n\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\nAVLTree._AVLTree = _AVLTree;\n\n\n/**\n * Check the recorded height is correct for every node\n * Throws if one height doesn't match\n */\n_AVLTree.prototype.checkHeightCorrect = function () {\n  var leftH, rightH;\n\n  if (!this.hasOwnProperty('key')) { return; }   // Empty tree\n\n  if (this.left && this.left.height === undefined) { throw new Error(\"Undefined height for node \" + this.left.key); }\n  if (this.right && this.right.height === undefined) { throw new Error(\"Undefined height for node \" + this.right.key); }\n  if (this.height === undefined) { throw new Error(\"Undefined height for node \" + this.key); }\n\n  leftH = this.left ? this.left.height : 0;\n  rightH = this.right ? this.right.height : 0;\n\n  if (this.height !== 1 + Math.max(leftH, rightH)) { throw new Error(\"Height constraint failed for node \" + this.key); }\n  if (this.left) { this.left.checkHeightCorrect(); }\n  if (this.right) { this.right.checkHeightCorrect(); }\n};\n\n\n/**\n * Return the balance factor\n */\n_AVLTree.prototype.balanceFactor = function () {\n  var leftH = this.left ? this.left.height : 0\n    , rightH = this.right ? this.right.height : 0\n    ;\n  return leftH - rightH;\n};\n\n\n/**\n * Check that the balance factors are all between -1 and 1\n */\n_AVLTree.prototype.checkBalanceFactors = function () {\n  if (Math.abs(this.balanceFactor()) > 1) { throw new Error('Tree is unbalanced at node ' + this.key); }\n\n  if (this.left) { this.left.checkBalanceFactors(); }\n  if (this.right) { this.right.checkBalanceFactors(); }\n};\n\n\n/**\n * When checking if the BST conditions are met, also check that the heights are correct\n * and the tree is balanced\n */\n_AVLTree.prototype.checkIsAVLT = function () {\n  _AVLTree.super_.prototype.checkIsBST.call(this);\n  this.checkHeightCorrect();\n  this.checkBalanceFactors();\n};\nAVLTree.prototype.checkIsAVLT = function () { this.tree.checkIsAVLT(); };\n\n\n/**\n * Perform a right rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.rightRotation = function () {\n  var q = this\n    , p = this.left\n    , b\n    , ah, bh, ch;\n\n  if (!p) { return this; }   // No change\n\n  b = p.right;\n\n  // Alter tree structure\n  if (q.parent) {\n    p.parent = q.parent;\n    if (q.parent.left === q) { q.parent.left = p; } else { q.parent.right = p; }\n  } else {\n    p.parent = null;\n  }\n  p.right = q;\n  q.parent = p;\n  q.left = b;\n  if (b) { b.parent = q; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  q.height = Math.max(bh, ch) + 1;\n  p.height = Math.max(ah, q.height) + 1;\n\n  return p;\n};\n\n\n/**\n * Perform a left rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.leftRotation = function () {\n  var p = this\n    , q = this.right\n    , b\n    , ah, bh, ch;\n\n  if (!q) { return this; }   // No change\n\n  b = q.left;\n\n  // Alter tree structure\n  if (p.parent) {\n    q.parent = p.parent;\n    if (p.parent.left === p) { p.parent.left = q; } else { p.parent.right = q; }\n  } else {\n    q.parent = null;\n  }\n  q.left = p;\n  p.parent = q;\n  p.right = b;\n  if (b) { b.parent = p; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  p.height = Math.max(ah, bh) + 1;\n  q.height = Math.max(ch, p.height) + 1;\n\n  return q;\n};\n\n\n/**\n * Modify the tree if its right subtree is too small compared to the left\n * Return the new root if any\n */\n_AVLTree.prototype.rightTooSmall = function () {\n  if (this.balanceFactor() <= 1) { return this; }   // Right is not too small, don't change\n\n  if (this.left.balanceFactor() < 0) {\n    this.left.leftRotation();\n  }\n\n  return this.rightRotation();\n};\n\n\n/**\n * Modify the tree if its left subtree is too small compared to the right\n * Return the new root if any\n */\n_AVLTree.prototype.leftTooSmall = function () {\n  if (this.balanceFactor() >= -1) { return this; }   // Left is not too small, don't change\n\n  if (this.right.balanceFactor() > 0) {\n    this.right.rightRotation();\n  }\n\n  return this.leftRotation();\n};\n\n\n/**\n * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n * in the insert and delete functions).\n * Returns the new root of the tree\n * Of course, the first element of the path must be the root of the tree\n */\n_AVLTree.prototype.rebalanceAlongPath = function (path) {\n  var newRoot = this\n    , rotated\n    , i;\n\n  if (!this.hasOwnProperty('key')) { delete this.height; return this; }   // Empty tree\n\n  // Rebalance the tree and update all heights\n  for (i = path.length - 1; i >= 0; i -= 1) {\n    path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0);\n\n    if (path[i].balanceFactor() > 1) {\n      rotated = path[i].rightTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n\n    if (path[i].balanceFactor() < -1) {\n      rotated = path[i].leftTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n  }\n\n  return newRoot;\n};\n\n\n/**\n * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n * Return a pointer to the root node, which may have changed\n */\n_AVLTree.prototype.insert = function (key, value) {\n  var insertPath = []\n    , currentNode = this\n    ;\n\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    this.height = 1;\n    return this;\n  }\n\n  // Insert new leaf at the right place\n  while (true) {\n    // Same key: no change in the tree structure\n    if (currentNode.compareKeys(currentNode.key, key) === 0) {\n      if (currentNode.unique) {\n        var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n        err.key = key;\n        err.errorType = 'uniqueViolated';\n        throw err;\n      } else {\n        currentNode.data.push(value);\n      }\n      return this;\n    }\n\n    insertPath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (!currentNode.left) {\n        insertPath.push(currentNode.createLeftChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.left;\n      }\n    } else {\n      if (!currentNode.right) {\n        insertPath.push(currentNode.createRightChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.right;\n      }\n    }\n  }\n\n  return this.rebalanceAlongPath(insertPath);\n};\n\n// Insert in the internal tree, update the pointer to the root if needed\nAVLTree.prototype.insert = function (key, value) {\n  var newTree = this.tree.insert(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Delete a key or just a value and return the new root of the tree\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n_AVLTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    , currentNode = this\n    , deletePath = []\n    ;\n\n  if (!this.hasOwnProperty('key')) { return this; }   // Empty tree\n\n  // Either no match is found and the function will return from within the loop\n  // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n  while (true) {\n    if (currentNode.compareKeys(key, currentNode.key) === 0) { break; }\n\n    deletePath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (currentNode.left) {\n        currentNode = currentNode.left;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    } else {\n      // currentNode.compareKeys(key, currentNode.key) is > 0\n      if (currentNode.right) {\n        currentNode = currentNode.right;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    }\n  }\n\n  // Delete only a value (no tree modification)\n  if (currentNode.data.length > 1 && value) {\n    currentNode.data.forEach(function (d) {\n      if (!currentNode.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    currentNode.data = newData;\n    return this;\n  }\n\n  // Delete a whole node\n\n  // Leaf\n  if (!currentNode.left && !currentNode.right) {\n    if (currentNode === this) {   // This leaf is also the root\n      delete currentNode.key;\n      currentNode.data = [];\n      delete currentNode.height;\n      return this;\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = null;\n      } else {\n        currentNode.parent.right = null;\n      }\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with only one child\n  if (!currentNode.left || !currentNode.right) {\n    replaceWith = currentNode.left ? currentNode.left : currentNode.right;\n\n    if (currentNode === this) {   // This node is also the root\n      replaceWith.parent = null;\n      return replaceWith;   // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      } else {\n        currentNode.parent.right = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with two children\n  // Use the in-order predecessor (no need to randomize since we actively rebalance)\n  deletePath.push(currentNode);\n  replaceWith = currentNode.left;\n\n  // Special case: the in-order predecessor is right below the node to delete\n  if (!replaceWith.right) {\n    currentNode.key = replaceWith.key;\n    currentNode.data = replaceWith.data;\n    currentNode.left = replaceWith.left;\n    if (replaceWith.left) { replaceWith.left.parent = currentNode; }\n    return this.rebalanceAlongPath(deletePath);\n  }\n\n  // After this loop, replaceWith is the right-most leaf in the left subtree\n  // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n  while (true) {\n    if (replaceWith.right) {\n      deletePath.push(replaceWith);\n      replaceWith = replaceWith.right;\n    } else {\n      break;\n    }\n  }\n\n  currentNode.key = replaceWith.key;\n  currentNode.data = replaceWith.data;\n\n  replaceWith.parent.right = replaceWith.left;\n  if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n\n  return this.rebalanceAlongPath(deletePath);\n};\n\n// Delete a value\nAVLTree.prototype.delete = function (key, value) {\n  var newTree = this.tree.delete(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments);\n  };\n});\n\n\n// Interface\nmodule.exports = AVLTree;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\n\nvar localforage = __webpack_require__(53)\n\n// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\nlocalforage.config({\n  name: 'NeDB'\n, storeName: 'nedbdata'\n});\n\n\nfunction exists (filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {   // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\n\n\nfunction rename (filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () { return callback(); });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () { return callback(); });\n      });\n    }\n  });\n}\n\n\nfunction writeFile (filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.setItem(filename, contents, function () { return callback(); });\n}\n\n\nfunction appendFile (filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () { return callback(); });\n  });\n}\n\n\nfunction readFile (filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.getItem(filename, function (err, contents) { return callback(null, contents || ''); });\n}\n\n\nfunction unlink (filename, callback) {\n  localforage.removeItem(filename, function () { return callback(); });\n}\n\n\n// Nothing to do, no directories will be used on the browser\nfunction mkdirp (dir, callback) {\n  return callback();\n}\n\n\n// Nothing to do, no data corruption possible in the brower\nfunction ensureDatafileIntegrity (filename, callback) {\n  return callback(null);\n}\n\n\n// Interface\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile;   // No need for a crash safe function in the browser\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;\n\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Datastore = __webpack_require__(57);\n\nmodule.exports = Datastore;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = __webpack_require__(5)\n  , _ = __webpack_require__(4)\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar customUtils = __webpack_require__(20)\n  , model = __webpack_require__(5)\n  , async = __webpack_require__(11)\n  , Executor = __webpack_require__(58)\n  , Index = __webpack_require__(21)\n  , util = __webpack_require__(7)\n  , _ = __webpack_require__(4)\n  , Persistence = __webpack_require__(59)\n  , Cursor = __webpack_require__(56)\n  ;\n\n\n/**\n * Create a new collection\n * @param {String} options.filename Optional, datastore will be in-memory only if not provided\n * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)\n * @param {Boolean} options.inMemoryOnly Optional, defaults to false\n * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n * @param {Boolean} options.autoload Optional, defaults to false\n * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown\n * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks\n * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt\n * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting\n *\n * Event Emitter - Events\n * * compaction.done - Fired whenever a compaction operation was finished\n */\nfunction Datastore (options) {\n  var filename;\n\n  // Retrocompatibility with v0.6 and before\n  if (typeof options === 'string') {\n    filename = options;\n    this.inMemoryOnly = false;   // Default\n  } else {\n    options = options || {};\n    filename = options.filename;\n    this.inMemoryOnly = options.inMemoryOnly || false;\n    this.autoload = options.autoload || false;\n    this.timestampData = options.timestampData || false;\n  }\n\n  // Determine whether in memory or persistent\n  if (!filename || typeof filename !== 'string' || filename.length === 0) {\n    this.filename = null;\n    this.inMemoryOnly = true;\n  } else {\n    this.filename = filename;\n  }\n\n  // String comparison function\n  this.compareStrings = options.compareStrings;\n\n  // Persistence handling\n  this.persistence = new Persistence({ db: this, nodeWebkitAppName: options.nodeWebkitAppName\n                                      , afterSerialization: options.afterSerialization\n                                      , beforeDeserialization: options.beforeDeserialization\n                                      , corruptAlertThreshold: options.corruptAlertThreshold\n                                      });\n\n  // This new executor is ready if we don't use persistence\n  // If we do, it will only be ready once loadDatabase is called\n  this.executor = new Executor();\n  if (this.inMemoryOnly) { this.executor.ready = true; }\n\n  // Indexed by field name, dot notation can be used\n  // _id is always indexed and since _ids are generated randomly the underlying\n  // binary is always well-balanced\n  this.indexes = {};\n  this.indexes._id = new Index({ fieldName: '_id', unique: true });\n  this.ttlIndexes = {};\n\n  // Queue a load of the database right away and call the onload handler\n  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n  if (this.autoload) { this.loadDatabase(options.onload || function (err) {\n    if (err) { throw err; }\n  }); }\n}\n\nutil.inherits(Datastore, __webpack_require__(70).EventEmitter);\n\n\n/**\n * Load the database from the datafile, and trigger the execution of buffered commands if any\n */\nDatastore.prototype.loadDatabase = function () {\n  this.executor.push({ this: this.persistence, fn: this.persistence.loadDatabase, arguments: arguments }, true);\n};\n\n\n/**\n * Get an array of all the data in the database\n */\nDatastore.prototype.getAllData = function () {\n  return this.indexes._id.getAll();\n};\n\n\n/**\n * Reset all currently defined indexes\n */\nDatastore.prototype.resetIndexes = function (newData) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].reset(newData);\n  });\n};\n\n\n/**\n * Ensure an index is kept for this field. Same parameters as lib/indexes\n * For now this function is synchronous, we need to test how much time it takes\n * We use an async API for consistency with the rest of the code\n * @param {String} options.fieldName\n * @param {Boolean} options.unique\n * @param {Boolean} options.sparse\n * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.ensureIndex = function (options, cb) {\n  var err\n    , callback = cb || function () {};\n\n  options = options || {};\n\n  if (!options.fieldName) {\n    err = new Error(\"Cannot create an index without a fieldName\");\n    err.missingFieldName = true;\n    return callback(err);\n  }\n  if (this.indexes[options.fieldName]) { return callback(null); }\n\n  this.indexes[options.fieldName] = new Index(options);\n  if (options.expireAfterSeconds !== undefined) { this.ttlIndexes[options.fieldName] = options.expireAfterSeconds; }   // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n  try {\n    this.indexes[options.fieldName].insert(this.getAllData());\n  } catch (e) {\n    delete this.indexes[options.fieldName];\n    return callback(e);\n  }\n\n  // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n  this.persistence.persistNewState([{ $$indexCreated: options }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Remove an index\n * @param {String} fieldName\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.removeIndex = function (fieldName, cb) {\n  var callback = cb || function () {};\n\n  delete this.indexes[fieldName];\n\n  this.persistence.persistNewState([{ $$indexRemoved: fieldName }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Add one or several document(s) to all indexes\n */\nDatastore.prototype.addToIndexes = function (doc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].insert(doc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the insert on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].remove(doc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove one or several document(s) from all indexes\n */\nDatastore.prototype.removeFromIndexes = function (doc) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].remove(doc);\n  });\n};\n\n\n/**\n * Update one or several documents in all indexes\n * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs\n * If one update violates a constraint, all changes are rolled back\n */\nDatastore.prototype.updateIndexes = function (oldDoc, newDoc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].update(oldDoc, newDoc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the update on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Return the list of candidates for a given query\n * Crude implementation for now, we return the candidates given by the first usable index if any\n * We try the following query types, in this order: basic match, $in match, comparison match\n * One way to make it better would be to enable the use of multiple indexes if the first usable index\n * returns too much data. I may do it in the future.\n *\n * Returned candidates will be scanned to find and remove all expired documents\n *\n * @param {Query} query\n * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations\n * @param {Function} callback Signature err, docs\n */\nDatastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {\n  var indexNames = Object.keys(this.indexes)\n    , self = this\n    , usableQueryKeys;\n\n  if (typeof dontExpireStaleDocs === 'function') {\n    callback = dontExpireStaleDocs;\n    dontExpireStaleDocs = false;\n  }\n\n  async.waterfall([\n  // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n  function (cb) {\n    // For a basic match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));\n    }\n\n    // For a $in match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && query[k].hasOwnProperty('$in')) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));\n    }\n\n    // For a comparison match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));\n    }\n\n    // By default, return all the DB data\n    return cb(null, self.getAllData());\n  }\n  // STEP 2: remove all expired documents\n  , function (docs) {\n    if (dontExpireStaleDocs) { return callback(null, docs); }\n\n    var expiredDocsIds = [], validDocs = [], ttlIndexesFieldNames = Object.keys(self.ttlIndexes);\n\n    docs.forEach(function (doc) {\n      var valid = true;\n      ttlIndexesFieldNames.forEach(function (i) {\n        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {\n          valid = false;\n        }\n      });\n      if (valid) { validDocs.push(doc); } else { expiredDocsIds.push(doc._id); }\n    });\n\n    async.eachSeries(expiredDocsIds, function (_id, cb) {\n      self._remove({ _id: _id }, {}, function (err) {\n        if (err) { return callback(err); }\n        return cb();\n      });\n    }, function (err) {\n      return callback(null, validDocs);\n    });\n  }]);\n};\n\n\n/**\n * Insert a new document\n * @param {Function} cb Optional callback, signature: err, insertedDoc\n *\n * @api private Use Datastore.insert which has the same signature\n */\nDatastore.prototype._insert = function (newDoc, cb) {\n  var callback = cb || function () {}\n    , preparedDoc\n    ;\n\n  try {\n    preparedDoc = this.prepareDocumentForInsertion(newDoc)\n    this._insertInCache(preparedDoc);\n  } catch (e) {\n    return callback(e);\n  }\n\n  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {\n    if (err) { return callback(err); }\n    return callback(null, model.deepCopy(preparedDoc));\n  });\n};\n\n/**\n * Create a new _id that's not already in use\n */\nDatastore.prototype.createNewId = function () {\n  var tentativeId = customUtils.uid(16);\n  // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n  if (this.indexes._id.getMatching(tentativeId).length > 0) {\n    tentativeId = this.createNewId();\n  }\n  return tentativeId;\n};\n\n/**\n * Prepare a document (or array of documents) to be inserted in a database\n * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n * @api private\n */\nDatastore.prototype.prepareDocumentForInsertion = function (newDoc) {\n  var preparedDoc, self = this;\n\n  if (util.isArray(newDoc)) {\n    preparedDoc = [];\n    newDoc.forEach(function (doc) { preparedDoc.push(self.prepareDocumentForInsertion(doc)); });\n  } else {\n    preparedDoc = model.deepCopy(newDoc);\n    if (preparedDoc._id === undefined) { preparedDoc._id = this.createNewId(); }\n    var now = new Date();\n    if (this.timestampData && preparedDoc.createdAt === undefined) { preparedDoc.createdAt = now; }\n    if (this.timestampData && preparedDoc.updatedAt === undefined) { preparedDoc.updatedAt = now; }\n    model.checkObject(preparedDoc);\n  }\n\n  return preparedDoc;\n};\n\n/**\n * If newDoc is an array of documents, this will insert all documents in the cache\n * @api private\n */\nDatastore.prototype._insertInCache = function (preparedDoc) {\n  if (util.isArray(preparedDoc)) {\n    this._insertMultipleDocsInCache(preparedDoc);\n  } else {\n    this.addToIndexes(preparedDoc);\n  }\n};\n\n/**\n * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n * inserts and throws the error\n * @api private\n */\nDatastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {\n  var i, failingI, error;\n\n  for (i = 0; i < preparedDocs.length; i += 1) {\n    try {\n      this.addToIndexes(preparedDocs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.removeFromIndexes(preparedDocs[i]);\n    }\n\n    throw error;\n  }\n};\n\nDatastore.prototype.insert = function () {\n  this.executor.push({ this: this, fn: this._insert, arguments: arguments });\n};\n\n\n/**\n * Count all documents matching the query\n * @param {Object} query MongoDB-style query\n */\nDatastore.prototype.count = function(query, callback) {\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    return callback(null, docs.length);\n  });\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find all documents matching the query\n * If no callback is passed, we return the cursor so that user can limit, skip and finally exec\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.find = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    var res = [], i;\n\n    if (err) { return callback(err); }\n\n    for (i = 0; i < docs.length; i += 1) {\n      res.push(model.deepCopy(docs[i]));\n    }\n    return callback(null, res);\n  });\n\n  cursor.projection(projection);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find one document matching the query\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.findOne = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    if (docs.length === 1) {\n      return callback(null, model.deepCopy(docs[0]));\n    } else {\n      return callback(null, null);\n    }\n  });\n\n  cursor.projection(projection).limit(1);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Update all docs matching query\n * @param {Object} query\n * @param {Object} updateQuery\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n *                 options.upsert If true, document is inserted if the query doesn't match anything\n *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)\n * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)\n *                      If update was an upsert, upsert flag is set to true\n *                      affectedDocuments can be one of the following:\n *                        * For an upsert, the upserted document\n *                        * For an update with returnUpdatedDocs option false, null\n *                        * For an update with returnUpdatedDocs true and multi false, the updated document\n *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents\n *\n * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,\n *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert\n *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of\n *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the\n *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on\n *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary.\n *\n * @api private Use Datastore.update which has the same signature\n */\nDatastore.prototype._update = function (query, updateQuery, options, cb) {\n  var callback\n    , self = this\n    , numReplaced = 0\n    , multi, upsert\n    , i\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n  upsert = options.upsert !== undefined ? options.upsert : false;\n\n  async.waterfall([\n  function (cb) {   // If upsert option is set, check whether we need to insert the doc\n    if (!upsert) { return cb(); }\n\n    // Need to use an internal function not tied to the executor to avoid deadlock\n    var cursor = new Cursor(self, query);\n    cursor.limit(1)._exec(function (err, docs) {\n      if (err) { return callback(err); }\n      if (docs.length === 1) {\n        return cb();\n      } else {\n        var toBeInserted;\n\n        try {\n          model.checkObject(updateQuery);\n          // updateQuery is a simple object with no modifier, use it as the document to insert\n          toBeInserted = updateQuery;\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          try {\n            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);\n          } catch (err) {\n            return callback(err);\n          }\n        }\n\n        return self._insert(toBeInserted, function (err, newDoc) {\n          if (err) { return callback(err); }\n          return callback(null, 1, newDoc, true);\n        });\n      }\n    });\n  }\n  , function () {   // Perform the update\n    var modifiedDoc , modifications = [], createdAt;\n\n    self.getCandidates(query, function (err, candidates) {\n      if (err) { return callback(err); }\n\n      // Preparing update (if an error is thrown here neither the datafile nor\n      // the in-memory indexes are affected)\n      try {\n        for (i = 0; i < candidates.length; i += 1) {\n          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {\n            numReplaced += 1;\n            if (self.timestampData) { createdAt = candidates[i].createdAt; }\n            modifiedDoc = model.modify(candidates[i], updateQuery);\n            if (self.timestampData) {\n              modifiedDoc.createdAt = createdAt;\n              modifiedDoc.updatedAt = new Date();\n            }\n            modifications.push({ oldDoc: candidates[i], newDoc: modifiedDoc });\n          }\n        }\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Change the docs in memory\n      try {\n        self.updateIndexes(modifications);\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Update the datafile\n      var updatedDocs = _.pluck(modifications, 'newDoc');\n      self.persistence.persistNewState(updatedDocs, function (err) {\n        if (err) { return callback(err); }\n        if (!options.returnUpdatedDocs) {\n          return callback(null, numReplaced);\n        } else {\n          var updatedDocsDC = [];\n          updatedDocs.forEach(function (doc) { updatedDocsDC.push(model.deepCopy(doc)); });\n          if (! multi) { updatedDocsDC = updatedDocsDC[0]; }\n          return callback(null, numReplaced, updatedDocsDC);\n        }\n      });\n    });\n  }]);\n};\n\nDatastore.prototype.update = function () {\n  this.executor.push({ this: this, fn: this._update, arguments: arguments });\n};\n\n\n/**\n * Remove all docs matching the query\n * For now very naive implementation (similar to update)\n * @param {Object} query\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n * @param {Function} cb Optional callback, signature: err, numRemoved\n *\n * @api private Use Datastore.remove which has the same signature\n */\nDatastore.prototype._remove = function (query, options, cb) {\n  var callback\n    , self = this, numRemoved = 0, removedDocs = [], multi\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n\n  this.getCandidates(query, true, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      candidates.forEach(function (d) {\n        if (model.match(d, query) && (multi || numRemoved === 0)) {\n          numRemoved += 1;\n          removedDocs.push({ $$deleted: true, _id: d._id });\n          self.removeFromIndexes(d);\n        }\n      });\n    } catch (err) { return callback(err); }\n\n    self.persistence.persistNewState(removedDocs, function (err) {\n      if (err) { return callback(err); }\n      return callback(null, numRemoved);\n    });\n  });\n};\n\nDatastore.prototype.remove = function () {\n  this.executor.push({ this: this, fn: this._remove, arguments: arguments });\n};\n\n\n\nmodule.exports = Datastore;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate, process) {/**\n * Responsible for sequentially executing actions on the database\n */\n\nvar async = __webpack_require__(11)\n  ;\n\nfunction Executor () {\n  this.buffer = [];\n  this.ready = false;\n\n  // This queue will execute all commands, one-by-one in order\n  this.queue = async.queue(function (task, cb) {\n    var newArguments = [];\n\n    // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array\n    for (var i = 0; i < task.arguments.length; i += 1) { newArguments.push(task.arguments[i]); }\n    var lastArg = task.arguments[task.arguments.length - 1];\n\n    // Always tell the queue task is complete. Execute callback if any was given.\n    if (typeof lastArg === 'function') {\n      // Callback was supplied\n      newArguments[newArguments.length - 1] = function () {\n        if (typeof setImmediate === 'function') {\n           setImmediate(cb);\n        } else {\n          process.nextTick(cb);\n        }\n        lastArg.apply(null, arguments);\n      };\n    } else if (!lastArg && task.arguments.length !== 0) {\n      // false/undefined/null supplied as callbback\n      newArguments[newArguments.length - 1] = function () { cb(); };\n    } else {\n      // Nothing supplied as callback\n      newArguments.push(function () { cb(); });\n    }\n\n\n    task.fn.apply(task.this, newArguments);\n  }, 1);\n}\n\n\n/**\n * If executor is ready, queue task (and process it immediately if executor was idle)\n * If not, buffer task for later processing\n * @param {Object} task\n *                 task.this - Object to use as this\n *                 task.fn - Function to execute\n *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)\n *                                                                 and the last argument cannot be false/undefined/null\n * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready\n */\nExecutor.prototype.push = function (task, forceQueuing) {\n  if (this.ready || forceQueuing) {\n    this.queue.push(task);\n  } else {\n    this.buffer.push(task);\n  }\n};\n\n\n/**\n * Queue all tasks in buffer (in the same order they came in)\n * Automatically sets executor as ready\n */\nExecutor.prototype.processBuffer = function () {\n  var i;\n  this.ready = true;\n  for (i = 0; i < this.buffer.length; i += 1) { this.queue.push(this.buffer[i]); }\n  this.buffer = [];\n};\n\n\n\n// Interface\nmodule.exports = Executor;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).setImmediate, __webpack_require__(1)))\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Handle every persistence-related task\n * The interface Datastore expects to be implemented is\n * * Persistence.loadDatabase(callback) and callback has signature err\n * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err\n */\n\nvar storage = __webpack_require__(54)\n  , path = __webpack_require__(73)\n  , model = __webpack_require__(5)\n  , async = __webpack_require__(11)\n  , customUtils = __webpack_require__(20)\n  , Index = __webpack_require__(21)\n  ;\n\n\n/**\n * Create a new Persistence object for database options.db\n * @param {Datastore} options.db\n * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n */\nfunction Persistence (options) {\n  var i, j, randomString;\n\n  this.db = options.db;\n  this.inMemoryOnly = this.db.inMemoryOnly;\n  this.filename = this.db.filename;\n  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;\n\n  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {\n    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");\n  }\n\n  // After serialization and before deserialization hooks with some basic sanity checks\n  if (options.afterSerialization && !options.beforeDeserialization) {\n    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  if (!options.afterSerialization && options.beforeDeserialization) {\n    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  this.afterSerialization = options.afterSerialization || function (s) { return s; };\n  this.beforeDeserialization = options.beforeDeserialization || function (s) { return s; };\n  for (i = 1; i < 30; i += 1) {\n    for (j = 0; j < 10; j += 1) {\n      randomString = customUtils.uid(i);\n      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");\n      }\n    }\n  }\n\n  // For NW apps, store data in the same directory where NW stores application data\n  if (this.filename && options.nodeWebkitAppName) {\n    console.log(\"==================================================================\");\n    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");\n    console.log(\"To get the path to the directory where Node Webkit stores the data\");\n    console.log(\"for your app, use the internal nw.gui module like this\");\n    console.log(\"require('nw.gui').App.dataPath\");\n    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");\n    console.log(\"==================================================================\");\n    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);\n  }\n};\n\n\n/**\n * Check if a directory exists and create it on the fly if it is not the case\n * cb is optional, signature: err\n */\nPersistence.ensureDirectoryExists = function (dir, cb) {\n  var callback = cb || function () {}\n    ;\n\n  storage.mkdirp(dir, function (err) { return callback(err); });\n};\n\n\n\n\n/**\n * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores\n * data for this application. Probably the best place to store data\n */\nPersistence.getNWAppFilename = function (appName, relativeFilename) {\n  var home;\n\n  switch (process.platform) {\n    case 'win32':\n    case 'win64':\n      home = process.env.LOCALAPPDATA || process.env.APPDATA;\n      if (!home) { throw new Error(\"Couldn't find the base application data folder\"); }\n      home = path.join(home, appName);\n      break;\n    case 'darwin':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, 'Library', 'Application Support', appName);\n      break;\n    case 'linux':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, '.config', appName);\n      break;\n    default:\n      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);\n      break;\n  }\n\n  return path.join(home, 'nedb-data', relativeFilename);\n}\n\n\n/**\n * Persist cached database\n * This serves as a compaction function since the cache always contains only the number of documents in the collection\n * while the data file is append-only so it may grow larger\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.persistCachedDatabase = function (cb) {\n  var callback = cb || function () {}\n    , toPersist = ''\n    , self = this\n    ;\n\n  if (this.inMemoryOnly) { return callback(null); }\n\n  this.db.getAllData().forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n  Object.keys(this.db.indexes).forEach(function (fieldName) {\n    if (fieldName != \"_id\") {   // The special _id index is managed by datastore.js, the others need to be persisted\n      toPersist += self.afterSerialization(model.serialize({ $$indexCreated: { fieldName: fieldName, unique: self.db.indexes[fieldName].unique, sparse: self.db.indexes[fieldName].sparse }})) + '\\n';\n    }\n  });\n\n  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {\n    if (err) { return callback(err); }\n    self.db.emit('compaction.done');\n    return callback(null);\n  });\n};\n\n\n/**\n * Queue a rewrite of the datafile\n */\nPersistence.prototype.compactDatafile = function () {\n  this.db.executor.push({ this: this, fn: this.persistCachedDatabase, arguments: [] });\n};\n\n\n/**\n * Set automatic compaction every interval ms\n * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds\n */\nPersistence.prototype.setAutocompactionInterval = function (interval) {\n  var self = this\n    , minInterval = 5000\n    , realInterval = Math.max(interval || 0, minInterval)\n    ;\n\n  this.stopAutocompaction();\n\n  this.autocompactionIntervalId = setInterval(function () {\n    self.compactDatafile();\n  }, realInterval);\n};\n\n\n/**\n * Stop autocompaction (do nothing if autocompaction was not running)\n */\nPersistence.prototype.stopAutocompaction = function () {\n  if (this.autocompactionIntervalId) { clearInterval(this.autocompactionIntervalId); }\n};\n\n\n/**\n * Persist new state for the given newDocs (can be insertion, update or removal)\n * Use an append-only format\n * @param {Array} newDocs Can be empty if no doc was updated/removed\n * @param {Function} cb Optional, signature: err\n */\nPersistence.prototype.persistNewState = function (newDocs, cb) {\n  var self = this\n    , toPersist = ''\n    , callback = cb || function () {}\n    ;\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  newDocs.forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n\n  if (toPersist.length === 0) { return callback(null); }\n\n  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {\n    return callback(err);\n  });\n};\n\n\n/**\n * From a database's raw data, return the corresponding\n * machine understandable collection\n */\nPersistence.prototype.treatRawData = function (rawData) {\n  var data = rawData.split('\\n')\n    , dataById = {}\n    , tdata = []\n    , i\n    , indexes = {}\n    , corruptItems = -1   // Last line of every data file is usually blank so not really corrupt\n    ;\n\n  for (i = 0; i < data.length; i += 1) {\n    var doc;\n\n    try {\n      doc = model.deserialize(this.beforeDeserialization(data[i]));\n      if (doc._id) {\n        if (doc.$$deleted === true) {\n          delete dataById[doc._id];\n        } else {\n          dataById[doc._id] = doc;\n        }\n      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {\n        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;\n      } else if (typeof doc.$$indexRemoved === \"string\") {\n        delete indexes[doc.$$indexRemoved];\n      }\n    } catch (e) {\n      corruptItems += 1;\n    }\n  }\n\n  // A bit lenient on corruption\n  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {\n    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  Object.keys(dataById).forEach(function (k) {\n    tdata.push(dataById[k]);\n  });\n\n  return { data: tdata, indexes: indexes };\n};\n\n\n/**\n * Load the database\n * 1) Create all indexes\n * 2) Insert all data\n * 3) Compact the database\n * This means pulling data out of the data file or creating it if it doesn't exist\n * Also, all data is persisted right away, which has the effect of compacting the database file\n * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.loadDatabase = function (cb) {\n  var callback = cb || function () {}\n    , self = this\n    ;\n\n  self.db.resetIndexes();\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  async.waterfall([\n    function (cb) {\n      Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {\n        storage.ensureDatafileIntegrity(self.filename, function (err) {\n          storage.readFile(self.filename, 'utf8', function (err, rawData) {\n            if (err) { return cb(err); }\n\n            try {\n              var treatedData = self.treatRawData(rawData);\n            } catch (e) {\n              return cb(e);\n            }\n\n            // Recreate all indexes in the datafile\n            Object.keys(treatedData.indexes).forEach(function (key) {\n              self.db.indexes[key] = new Index(treatedData.indexes[key]);\n            });\n\n            // Fill cached database (i.e. all indexes) with data\n            try {\n              self.db.resetIndexes(treatedData.data);\n            } catch (e) {\n              self.db.resetIndexes();   // Rollback any index which didn't fail\n              return cb(e);\n            }\n\n            self.db.persistence.persistCachedDatabase(cb);\n          });\n        });\n      });\n    }\n  ], function (err) {\n       if (err) { return callback(err); }\n\n       self.db.executor.processBuffer();\n       return callback(null);\n     });\n};\n\n\n// Interface\nmodule.exports = Persistence;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module, setImmediate, process) {(function (global, factory) {\n     true ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Lodash rest function without function.toString()\n// remappings\nfunction rest(func, start) {\n    return overRest$1(func, start, identity);\n}\n\nvar initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    });\n};\n\nfunction applyEach$1(eachfn) {\n    return rest(function (fns, args) {\n        var go = initialParams(function (args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        } else {\n            return go;\n        }\n    });\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  value = Object(value);\n  return (symToStringTag && symToStringTag in value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key: key } : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (value === breakLoop || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, iteratee, callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, iteratee, callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, iteratee, callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a transformed\n * item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n        return fn.apply(null, args.concat(callArgs));\n    });\n});\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2016 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function to convert to an\n * asynchronous function.\n * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n * (callback).\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es6 example\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                callback(null, value);\n            }, function (err) {\n                callback(err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the functions in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the functions pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * Functions also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the function itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while (readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            runningTasks--;\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function (val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = args;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = args;\n                taskComplete(key);\n            }\n        }));\n\n        runningTasks++;\n        var taskFn = task[task.length - 1];\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is a function of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (taskFn.length === 1) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            taskFn.apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return rest(function (fn, args) {\n        defer(function () {\n            fn.apply(null, args);\n        });\n    });\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = DLL;\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    }\n\n    function _next(tasks) {\n        return rest(function (args) {\n            workers -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n                var index = baseIndexOf(workersList, task, 0);\n                if (index >= 0) {\n                    workersList.splice(index);\n                }\n\n                task.callback.apply(task, args);\n\n                if (args[0] != null) {\n                    q.error(args[0], task.data);\n                }\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        });\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated: noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var tasks = [],\n                    data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    data.push(node.data);\n                }\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n                workers += 1;\n                workersList.push(tasks[0]);\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing an array\n * of queued tasks, which must call its `callback(err)` argument when finished,\n * with an optional `err` argument. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n  return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * `key` is the item's key, or index in the case of an array. The iteratee is\n * passed a `callback(err)` which must be called once it has completed. If no\n * error has occurred, the callback should be run without arguments or with an\n * explicit `null` argument. Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    eachOfSeries(coll, function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nvar seq$1 = rest(function seq(functions) {\n    return rest(function (args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(functions, args, function (newargs, fn, cb) {\n            fn.apply(that, newargs.concat(rest(function (err, nextargs) {\n                cb(err, nextargs);\n            })));\n        }, function (err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    });\n});\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = rest(function (args) {\n  return seq$1.apply(null, args.reverse());\n});\n\nfunction concat$1(eachfn, arr, fn, callback) {\n    var result = [];\n    eachfn(arr, function (x, index, cb) {\n        fn(x, function (err, y) {\n            result = result.concat(y || []);\n            cb(err);\n        });\n    }, function (err) {\n        callback(err, result);\n    });\n}\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doParallel(concat$1);\n\nfunction doSeries(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOfSeries, obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doSeries(concat$1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {Function} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = rest(function (values) {\n    var args = [null].concat(values);\n    return initialParams(function (ignoredArgs, callback) {\n        return callback.apply(this, args);\n    });\n});\n\nfunction _createTester(check, getResult) {\n    return function (eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function (value, _, callback) {\n            iteratee(value, function (err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return rest(function (fn, args) {\n        fn.apply(null, args.concat(rest(function (err, args) {\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        })));\n    });\n}\n\n/**\n * Logs the result of an `async` function to the `console` using `console.dir`\n * to display the properties of the resulting object. Only works in Node.js or\n * in browsers that support `console.dir` and `console.error` (such as FF and\n * Chrome). If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occured, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        args.push(check);\n        test.apply(this, args);\n    });\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    check(null, true);\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `fn`. Invoked with the non-error callback results of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(fn, test, callback) {\n    doWhilst(fn, function () {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occured, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n\n    function next(err) {\n        if (err) return callback(err);\n        test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item\n * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n * it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is not\n * passed to the iteratee. Invoked with (item, callback). If you need the index,\n * use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n  eachOf(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * iteratee is passed a `callback(err)` which must be called once it has\n * completed. If no error has occurred, the `callback` should be run without\n * arguments or with an explicit `null` argument. The array index is not passed\n * to the iteratee. Invoked with (item, callback). If you need the index, use\n * `eachOfLimit`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n * once it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is\n * not passed to the iteratee. Invoked with (item, callback). If you need the\n * index, use `eachOfSeries`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {Function} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({ index: index, value: x });\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, iteratee, callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the\n * callback then `errback` is called with the error, and execution stops,\n * otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = ensureAsync(fn);\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function (coll, limit, iteratee, callback) {\n    callback = callback || noop;\n\n    mapLimit(coll, limit, function (val, callback) {\n        iteratee(val, function (err, key) {\n            if (err) return callback(err);\n            return callback(null, { key: key, val: val });\n        });\n    }, function (err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    eachOfLimit(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value and key in\n * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n * called once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat(rest(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @alias setImmediate\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        task(rest(function (err, args) {\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            results[key] = args;\n            callback(err);\n        }));\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n  _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Collection} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n  _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n  return queue(function (items, cb) {\n    worker(items[0], cb);\n  }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing functions to run. Each function\n * is passed a `callback(err, result)` which it must call on completion with an\n * error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        tasks[i](callback);\n    }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = slice.call(array).reverse();\n  reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the function in another function that always returns data even when it\n * errors.\n *\n * The object returned has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(rest(function callback(err, cbArgs) {\n            if (err) {\n                reflectCallback(null, {\n                    error: err\n                });\n            } else {\n                var value = null;\n                if (cbArgs.length === 1) {\n                    value = cbArgs[0];\n                } else if (cbArgs.length > 1) {\n                    value = cbArgs;\n                }\n                reflectCallback(null, {\n                    value: value\n                });\n            }\n        }));\n\n        return fn.apply(this, args);\n    });\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function (value, cb) {\n        iteratee(value, function (err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * A helper function that wraps an array or an object of functions with reflect.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n * @returns {Array} Returns an array of functions, each function wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function (task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {Function} task - A function which receives two arguments: (1) a\n * `callback(err, result)` which must be called when finished, passing `err`\n * (which can be `null`) and the `result` of the function's execution, and (2)\n * a `results` object, containing the results of the previously executed\n * functions (if nested inside another control flow). Invoked with\n * (callback, results).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // It can also be embedded within other control flow functions to retry\n * // individual methods that are not as reliable, like this:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retry(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var attempt = 1;\n    function retryAttempt() {\n        task(function (err) {\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n * retryable, rather than immediately calling it with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {Function} task - the asynchronous function to wrap\n * @returns {Functions} The wrapped function, which when invoked, will retry on\n * an error, based on the parameters specified in `opts`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n * function is passed a `callback(err, result)` it must call on completion with\n * an error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, sortValue)` which must be called once\n * it has completed with an error (which can be `null`) and a value to use as\n * the sort criteria. Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy(coll, iteratee, callback) {\n    map(coll, function (x, callback) {\n        iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, { value: x, criteria: criteria });\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria,\n            b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} asyncFn - The asynchronous function you want to set the\n * time limit.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {Function} Returns a wrapped function that can be used with any of\n * the control flow functions. Invoke this function with the same\n * parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var originalCallback, timer;\n    var timedOut = false;\n\n    function injectedCallback() {\n        if (!timedOut) {\n            originalCallback.apply(null, arguments);\n            clearTimeout(timer);\n        }\n    }\n\n    function timeoutCallback() {\n        var name = asyncFn.name || 'anonymous';\n        var error = new Error('Callback function \"' + name + '\" timed out.');\n        error.code = 'ETIMEDOUT';\n        if (info) {\n            error.info = info;\n        }\n        timedOut = true;\n        originalCallback(error);\n    }\n\n    return initialParams(function (args, origCallback) {\n        originalCallback = origCallback;\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        asyncFn.apply(null, args.concat(injectedCallback));\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax$1 = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {Function} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator. The `iteratee` is\n * passed a `callback(err)` which accepts an optional error as its first\n * argument. If an error is passed to the callback, the transform is stopped\n * and the main `callback` is immediately called with the error.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform(coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n\n    eachOf(coll, function (v, k, cb) {\n        iteratee(accumulator, v, k, cb);\n    }, function (err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {Function} fn - the memoized function\n * @returns {Function} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    if (!test()) return callback(null);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    whilst(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function (tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n */\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\nvar index = {\n  applyEach: applyEach,\n  applyEachSeries: applyEachSeries,\n  apply: apply$2,\n  asyncify: asyncify,\n  auto: auto,\n  autoInject: autoInject,\n  cargo: cargo,\n  compose: compose,\n  concat: concat,\n  concatSeries: concatSeries,\n  constant: constant,\n  detect: detect,\n  detectLimit: detectLimit,\n  detectSeries: detectSeries,\n  dir: dir,\n  doDuring: doDuring,\n  doUntil: doUntil,\n  doWhilst: doWhilst,\n  during: during,\n  each: eachLimit,\n  eachLimit: eachLimit$1,\n  eachOf: eachOf,\n  eachOfLimit: eachOfLimit,\n  eachOfSeries: eachOfSeries,\n  eachSeries: eachSeries,\n  ensureAsync: ensureAsync,\n  every: every,\n  everyLimit: everyLimit,\n  everySeries: everySeries,\n  filter: filter,\n  filterLimit: filterLimit,\n  filterSeries: filterSeries,\n  forever: forever,\n  groupBy: groupBy,\n  groupByLimit: groupByLimit,\n  groupBySeries: groupBySeries,\n  log: log,\n  map: map,\n  mapLimit: mapLimit,\n  mapSeries: mapSeries,\n  mapValues: mapValues,\n  mapValuesLimit: mapValuesLimit,\n  mapValuesSeries: mapValuesSeries,\n  memoize: memoize,\n  nextTick: nextTick,\n  parallel: parallelLimit,\n  parallelLimit: parallelLimit$1,\n  priorityQueue: priorityQueue,\n  queue: queue$1,\n  race: race,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  reflect: reflect,\n  reflectAll: reflectAll,\n  reject: reject,\n  rejectLimit: rejectLimit,\n  rejectSeries: rejectSeries,\n  retry: retry,\n  retryable: retryable,\n  seq: seq$1,\n  series: series,\n  setImmediate: setImmediate$1,\n  some: some,\n  someLimit: someLimit,\n  someSeries: someSeries,\n  sortBy: sortBy,\n  timeout: timeout,\n  times: times,\n  timesLimit: timeLimit,\n  timesSeries: timesSeries,\n  transform: transform,\n  unmemoize: unmemoize,\n  until: until,\n  waterfall: waterfall,\n  whilst: whilst,\n\n  // aliases\n  all: every,\n  any: some,\n  forEach: eachLimit,\n  forEachSeries: eachSeries,\n  forEachLimit: eachLimit$1,\n  forEachOf: eachOf,\n  forEachOfSeries: eachOfSeries,\n  forEachOfLimit: eachOfLimit,\n  inject: reduce,\n  foldl: reduce,\n  foldr: reduceRight,\n  select: filter,\n  selectLimit: filterLimit,\n  selectSeries: filterSeries,\n  wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.apply = apply$2;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq$1;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(23)(module), __webpack_require__(6).setImmediate, __webpack_require__(1)))\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module, setImmediate, process) {(function (global, factory) {\n     true ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Lodash rest function without function.toString()\n// remappings\nfunction rest(func, start) {\n    return overRest$1(func, start, identity);\n}\n\nvar initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    });\n};\n\nfunction applyEach$1(eachfn) {\n    return rest(function (fns, args) {\n        var go = initialParams(function (args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        } else {\n            return go;\n        }\n    });\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  value = Object(value);\n  return (symToStringTag && symToStringTag in value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key: key } : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (value === breakLoop || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, iteratee, callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, iteratee, callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, iteratee, callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a transformed\n * item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n        return fn.apply(null, args.concat(callArgs));\n    });\n});\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2016 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function to convert to an\n * asynchronous function.\n * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n * (callback).\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es6 example\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                callback(null, value);\n            }, function (err) {\n                callback(err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the functions in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the functions pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * Functions also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the function itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while (readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            runningTasks--;\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function (val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = args;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = args;\n                taskComplete(key);\n            }\n        }));\n\n        runningTasks++;\n        var taskFn = task[task.length - 1];\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is a function of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (taskFn.length === 1) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            taskFn.apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return rest(function (fn, args) {\n        defer(function () {\n            fn.apply(null, args);\n        });\n    });\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = DLL;\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    }\n\n    function _next(tasks) {\n        return rest(function (args) {\n            workers -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n                var index = baseIndexOf(workersList, task, 0);\n                if (index >= 0) {\n                    workersList.splice(index);\n                }\n\n                task.callback.apply(task, args);\n\n                if (args[0] != null) {\n                    q.error(args[0], task.data);\n                }\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        });\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated: noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var tasks = [],\n                    data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    data.push(node.data);\n                }\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n                workers += 1;\n                workersList.push(tasks[0]);\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing an array\n * of queued tasks, which must call its `callback(err)` argument when finished,\n * with an optional `err` argument. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n  return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * `key` is the item's key, or index in the case of an array. The iteratee is\n * passed a `callback(err)` which must be called once it has completed. If no\n * error has occurred, the callback should be run without arguments or with an\n * explicit `null` argument. Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    eachOfSeries(coll, function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nvar seq$1 = rest(function seq(functions) {\n    return rest(function (args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(functions, args, function (newargs, fn, cb) {\n            fn.apply(that, newargs.concat(rest(function (err, nextargs) {\n                cb(err, nextargs);\n            })));\n        }, function (err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    });\n});\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = rest(function (args) {\n  return seq$1.apply(null, args.reverse());\n});\n\nfunction concat$1(eachfn, arr, fn, callback) {\n    var result = [];\n    eachfn(arr, function (x, index, cb) {\n        fn(x, function (err, y) {\n            result = result.concat(y || []);\n            cb(err);\n        });\n    }, function (err) {\n        callback(err, result);\n    });\n}\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doParallel(concat$1);\n\nfunction doSeries(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOfSeries, obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doSeries(concat$1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {Function} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = rest(function (values) {\n    var args = [null].concat(values);\n    return initialParams(function (ignoredArgs, callback) {\n        return callback.apply(this, args);\n    });\n});\n\nfunction _createTester(check, getResult) {\n    return function (eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function (value, _, callback) {\n            iteratee(value, function (err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return rest(function (fn, args) {\n        fn.apply(null, args.concat(rest(function (err, args) {\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        })));\n    });\n}\n\n/**\n * Logs the result of an `async` function to the `console` using `console.dir`\n * to display the properties of the resulting object. Only works in Node.js or\n * in browsers that support `console.dir` and `console.error` (such as FF and\n * Chrome). If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occured, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        args.push(check);\n        test.apply(this, args);\n    });\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    check(null, true);\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `fn`. Invoked with the non-error callback results of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(fn, test, callback) {\n    doWhilst(fn, function () {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occured, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n\n    function next(err) {\n        if (err) return callback(err);\n        test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item\n * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n * it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is not\n * passed to the iteratee. Invoked with (item, callback). If you need the index,\n * use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n  eachOf(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * iteratee is passed a `callback(err)` which must be called once it has\n * completed. If no error has occurred, the `callback` should be run without\n * arguments or with an explicit `null` argument. The array index is not passed\n * to the iteratee. Invoked with (item, callback). If you need the index, use\n * `eachOfLimit`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n * once it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is\n * not passed to the iteratee. Invoked with (item, callback). If you need the\n * index, use `eachOfSeries`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {Function} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({ index: index, value: x });\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, iteratee, callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the\n * callback then `errback` is called with the error, and execution stops,\n * otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = ensureAsync(fn);\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function (coll, limit, iteratee, callback) {\n    callback = callback || noop;\n\n    mapLimit(coll, limit, function (val, callback) {\n        iteratee(val, function (err, key) {\n            if (err) return callback(err);\n            return callback(null, { key: key, val: val });\n        });\n    }, function (err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    eachOfLimit(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value and key in\n * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n * called once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat(rest(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @alias setImmediate\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        task(rest(function (err, args) {\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            results[key] = args;\n            callback(err);\n        }));\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n  _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Collection} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n  _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n  return queue(function (items, cb) {\n    worker(items[0], cb);\n  }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing functions to run. Each function\n * is passed a `callback(err, result)` which it must call on completion with an\n * error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        tasks[i](callback);\n    }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = slice.call(array).reverse();\n  reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the function in another function that always returns data even when it\n * errors.\n *\n * The object returned has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(rest(function callback(err, cbArgs) {\n            if (err) {\n                reflectCallback(null, {\n                    error: err\n                });\n            } else {\n                var value = null;\n                if (cbArgs.length === 1) {\n                    value = cbArgs[0];\n                } else if (cbArgs.length > 1) {\n                    value = cbArgs;\n                }\n                reflectCallback(null, {\n                    value: value\n                });\n            }\n        }));\n\n        return fn.apply(this, args);\n    });\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function (value, cb) {\n        iteratee(value, function (err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * A helper function that wraps an array or an object of functions with reflect.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n * @returns {Array} Returns an array of functions, each function wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function (task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {Function} task - A function which receives two arguments: (1) a\n * `callback(err, result)` which must be called when finished, passing `err`\n * (which can be `null`) and the `result` of the function's execution, and (2)\n * a `results` object, containing the results of the previously executed\n * functions (if nested inside another control flow). Invoked with\n * (callback, results).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // It can also be embedded within other control flow functions to retry\n * // individual methods that are not as reliable, like this:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retry(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var attempt = 1;\n    function retryAttempt() {\n        task(function (err) {\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n * retryable, rather than immediately calling it with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {Function} task - the asynchronous function to wrap\n * @returns {Functions} The wrapped function, which when invoked, will retry on\n * an error, based on the parameters specified in `opts`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n * function is passed a `callback(err, result)` it must call on completion with\n * an error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, sortValue)` which must be called once\n * it has completed with an error (which can be `null`) and a value to use as\n * the sort criteria. Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy(coll, iteratee, callback) {\n    map(coll, function (x, callback) {\n        iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, { value: x, criteria: criteria });\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria,\n            b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} asyncFn - The asynchronous function you want to set the\n * time limit.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {Function} Returns a wrapped function that can be used with any of\n * the control flow functions. Invoke this function with the same\n * parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var originalCallback, timer;\n    var timedOut = false;\n\n    function injectedCallback() {\n        if (!timedOut) {\n            originalCallback.apply(null, arguments);\n            clearTimeout(timer);\n        }\n    }\n\n    function timeoutCallback() {\n        var name = asyncFn.name || 'anonymous';\n        var error = new Error('Callback function \"' + name + '\" timed out.');\n        error.code = 'ETIMEDOUT';\n        if (info) {\n            error.info = info;\n        }\n        timedOut = true;\n        originalCallback(error);\n    }\n\n    return initialParams(function (args, origCallback) {\n        originalCallback = origCallback;\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        asyncFn.apply(null, args.concat(injectedCallback));\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax$1 = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {Function} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator. The `iteratee` is\n * passed a `callback(err)` which accepts an optional error as its first\n * argument. If an error is passed to the callback, the transform is stopped\n * and the main `callback` is immediately called with the error.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform(coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n\n    eachOf(coll, function (v, k, cb) {\n        iteratee(accumulator, v, k, cb);\n    }, function (err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {Function} fn - the memoized function\n * @returns {Function} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    if (!test()) return callback(null);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    whilst(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function (tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n */\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\nvar index = {\n  applyEach: applyEach,\n  applyEachSeries: applyEachSeries,\n  apply: apply$2,\n  asyncify: asyncify,\n  auto: auto,\n  autoInject: autoInject,\n  cargo: cargo,\n  compose: compose,\n  concat: concat,\n  concatSeries: concatSeries,\n  constant: constant,\n  detect: detect,\n  detectLimit: detectLimit,\n  detectSeries: detectSeries,\n  dir: dir,\n  doDuring: doDuring,\n  doUntil: doUntil,\n  doWhilst: doWhilst,\n  during: during,\n  each: eachLimit,\n  eachLimit: eachLimit$1,\n  eachOf: eachOf,\n  eachOfLimit: eachOfLimit,\n  eachOfSeries: eachOfSeries,\n  eachSeries: eachSeries,\n  ensureAsync: ensureAsync,\n  every: every,\n  everyLimit: everyLimit,\n  everySeries: everySeries,\n  filter: filter,\n  filterLimit: filterLimit,\n  filterSeries: filterSeries,\n  forever: forever,\n  groupBy: groupBy,\n  groupByLimit: groupByLimit,\n  groupBySeries: groupBySeries,\n  log: log,\n  map: map,\n  mapLimit: mapLimit,\n  mapSeries: mapSeries,\n  mapValues: mapValues,\n  mapValuesLimit: mapValuesLimit,\n  mapValuesSeries: mapValuesSeries,\n  memoize: memoize,\n  nextTick: nextTick,\n  parallel: parallelLimit,\n  parallelLimit: parallelLimit$1,\n  priorityQueue: priorityQueue,\n  queue: queue$1,\n  race: race,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  reflect: reflect,\n  reflectAll: reflectAll,\n  reject: reject,\n  rejectLimit: rejectLimit,\n  rejectSeries: rejectSeries,\n  retry: retry,\n  retryable: retryable,\n  seq: seq$1,\n  series: series,\n  setImmediate: setImmediate$1,\n  some: some,\n  someLimit: someLimit,\n  someSeries: someSeries,\n  sortBy: sortBy,\n  timeout: timeout,\n  times: times,\n  timesLimit: timeLimit,\n  timesSeries: timesSeries,\n  transform: transform,\n  unmemoize: unmemoize,\n  until: until,\n  waterfall: waterfall,\n  whilst: whilst,\n\n  // aliases\n  all: every,\n  any: some,\n  forEach: eachLimit,\n  forEachSeries: eachSeries,\n  forEachLimit: eachLimit$1,\n  forEachOf: eachOf,\n  forEachOfSeries: eachOfSeries,\n  forEachOfLimit: eachOfLimit,\n  inject: reduce,\n  foldl: reduce,\n  foldr: reduceRight,\n  select: filter,\n  selectLimit: filterLimit,\n  selectSeries: filterSeries,\n  wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.apply = apply$2;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq$1;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(23)(module), __webpack_require__(6).setImmediate, __webpack_require__(1)))\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = __webpack_require__(63);\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar uuid = __webpack_require__(65);\n\n/**\n * Returns the given uuid as a 22 character slug. This can be a regular v4\n * slug or a \"nice\" slug.\n */\nexports.encode = function(uuid_) {\n  var bytes   = uuid.parse(uuid_);\n  var base64  = (new Buffer(bytes)).toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/**\n * Returns the uuid represented by the given v4 or \"nice\" slug\n */\nexports.decode = function(slug) {\n  var base64 = slug\n                  .replace(/-/g, '+')\n                  .replace(/_/g, '/')\n                  + '==';\n  return uuid.unparse(new Buffer(base64, 'base64'));\n};\n\n/**\n * Returns a randomly generated uuid v4 compliant slug\n */\nexports.v4 = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/** \n * Returns a randomly generated uuid v4 compliant slug which conforms to a set\n * of \"nice\" properties, at the cost of some entropy. Currently this means one\n * extra fixed bit (the first bit of the uuid is set to 0) which guarantees the\n * slug will begin with [A-Za-f]. For example such slugs don't require special\n * handling when used as command line parameters (whereas non-nice slugs may\n * start with `-` which can confuse command line tools).\n *\n * Potentially other \"nice\" properties may be added in future to further\n * restrict the range of potential uuids that may be generated.\n */\nexports.nice = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  bytes[0] = bytes[0] & 0x7f;  // unset first bit to ensure [A-Za-f] first char\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(69).Buffer))\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = __webpack_require__(64);\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Store = __webpack_require__(9);\nvar schema = __webpack_require__(12);\nvar async = __webpack_require__(60);\nvar errors = __webpack_require__(8);\nvar config = __webpack_require__(2).loadConfig({\n    COLLECTION: 'default'\n});\n\nvar MongolikeStore = function (_Store) {\n    _inherits(MongolikeStore, _Store);\n\n    function MongolikeStore() {\n        var _ref;\n\n        _classCallCheck(this, MongolikeStore);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _possibleConstructorReturn(this, (_ref = MongolikeStore.__proto__ || Object.getPrototypeOf(MongolikeStore)).call.apply(_ref, [this].concat(args)));\n    }\n\n    /* @override */\n\n\n    _createClass(MongolikeStore, [{\n        key: '_wipe',\n        value: function _wipe(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref2 = [options, {}];\n                cb = _ref2[0];\n                options = _ref2[1];\n            }throw new Error(\"Must override '_wipe'\");\n        }\n\n        /* @override */\n\n    }, {\n        key: '_disconnect',\n        value: function _disconnect(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref3 = [options, {}];\n                cb = _ref3[0];\n                options = _ref3[1];\n            }return cb();\n        }\n\n        /* @override */\n\n    }, {\n        key: '_get',\n        value: function _get(options, cb) {\n            var _this2 = this;\n\n            var annoId = options.annoId;\n            var projection = this._projectionFromOptions(options);\n            annoId = this._idFromURL(annoId);\n\n            var _annoId$split = annoId.split(/-rev-/),\n                _annoId$split2 = _slicedToArray(_annoId$split, 2),\n                _id = _annoId$split2[0],\n                _revid = _annoId$split2[1];\n\n            var query = { _id: _id, deleted: { $exists: false } };\n            this.db.findOne(query, projection, function (err, doc) {\n                if (err) return cb(err);\n                if (!doc) return cb(errors.annotationNotFound(annoId));\n                var rev = _revid ? doc._revisions[_revid - 1] : doc._revisions[doc._revisions.length - 1];\n                if (!rev) return cb(errors.revisionNotFound(_id, _revid));\n                if (options.latest) {\n                    annoId = _id + '-rev-' + doc._revisions.length;\n                    doc = rev;\n                }\n                return cb(null, _this2._toJSONLD(annoId, doc, options));\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_create',\n        value: function _create(options, cb) {\n            var _this3 = this;\n\n            if (typeof options === 'function') {\n                ;\n                var _ref4 = [options, {}];\n                cb = _ref4[0];\n                options = _ref4[1];\n            }var annos = JSON.parse(JSON.stringify(options.annos));\n            var wasArray = Array.isArray(annos);\n            if (!wasArray) {\n                annos = [annos];\n            }\n            var validationErrors = [];\n            annos = annos.map(function (anno) {\n                anno = _this3._deleteId(anno);\n                var validFn = schema.validate.Annotation;\n                // console.log(anno)\n                if (!validFn(anno)) {\n                    return validationErrors.push(errors.invalidAnnotation(anno, validFn.errors));\n                }\n                anno = _this3._normalizeTarget(anno);\n                anno = _this3._normalizeType(anno);\n                anno._revisions = [JSON.parse(JSON.stringify(anno))];\n                var created = new Date().toISOString();\n                anno.modified = created;\n                anno.created = created;\n                anno._revisions[0].created = created;\n                anno._id = _this3._genid();\n                return anno;\n            });\n            if (validationErrors.length > 0) return cb(errors.invalidAnnotation({ validationErrors: validationErrors }));\n            this.db.insert(annos, function (err, savedAnnos) {\n                // Mongodb returns an object describing the result, nedb returns just the results\n                var insertedIds = savedAnnos.insertedIds;\n\n                if (!insertedIds) insertedIds = savedAnnos.map(function (savedAnno) {\n                    return savedAnno._id;\n                });\n                if (err) return cb(err);\n                if (!wasArray) return _this3.get(insertedIds[0], options, cb);\n                return _this3.get(insertedIds, options, cb);\n            });\n        }\n\n        // https://www.w3.org/TR/annotation-protocol/#update-an-existing-annotation\n        /* @override */\n\n    }, {\n        key: '_revise',\n        value: function _revise(options, cb) {\n            var _this4 = this;\n\n            if (typeof options === 'function') {\n                ;\n                var _ref5 = [options, {}];\n                cb = _ref5[0];\n                options = _ref5[1];\n            }var annoId = this._idFromURL(options.annoId);\n            var anno = options.anno;\n\n            var _annoId$split3 = annoId.split(/-rev-/),\n                _annoId$split4 = _slicedToArray(_annoId$split3, 2),\n                _id = _annoId$split4[0],\n                _revid = _annoId$split4[1];\n\n            this.db.findOne({ _id: _id }, function (err, existingAnno) {\n                if (err) return cb(err);\n                if (!existingAnno) return cb(errors.annotationNotFound(_id));['canonical', 'via', 'hasVersion', 'versionOf'].forEach(function (prop) {\n                    if (anno[prop] && anno[prop] !== existingAnno[prop]) {\n                        return cb(errors.readonlyValue(annoId, 'canonical'));\n                    }\n                });\n                var newData = JSON.parse(JSON.stringify(anno));\n                newData.created = new Date().toISOString();\n                _this4._deleteId(newData);\n                _this4._normalizeType(newData);\n                var validFn = schema.validate.Annotation;\n                if (!validFn(newData)) {\n                    return cb(errors.invalidAnnotation(anno, validFn.errors));\n                }\n                // TODO no idempotency of targets with normalization -> disabled for now\n                // anno = this._normalizeTarget(anno)\n                _this4.db.update({ _id: _id }, {\n                    $push: { _revisions: newData },\n                    $set: newData\n                }, {}, function (err, arg) {\n                    if (err) return cb(err);\n                    options.latest = true;\n                    delete options.anno;\n                    return _this4.get(_id, options, cb);\n                });\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_delete',\n        value: function _delete(options, cb) {\n            if (typeof options === 'function') {\n                ;\n                var _ref6 = [options, {}];\n                cb = _ref6[0];\n                options = _ref6[1];\n            }var _id = this._idFromURL(options.annoId);\n            this.db.update({ _id: _id }, { $set: { deleted: new Date() } }, function (err) {\n                if (err) return cb(err);\n                return cb();\n            });\n        }\n\n        /* @override */\n\n    }, {\n        key: '_search',\n        value: function _search(options, cb) {\n            var _this5 = this;\n\n            var query = options.query;\n\n\n            if ('$target' in query) {\n                query.$or = [{ target: query.$target }, { 'target.source': query.$target }];\n                delete query.$target;\n            }\n            if (query.includeDeleted) {\n                delete query.includeDeleted;\n            } else {\n                query.deleted = { $exists: false };\n            }\n\n            var projection = this._projectionFromOptions(options);\n\n            // console.log(JSON.stringify({query, projection}, null, 2))\n            this.db.find(query, projection, function (err, docs) {\n                if (err) return cb(err);\n                if (docs === undefined) docs = [];\n                // mongodb returns a cursor, nedb a list of documents\n                if (Array.isArray(docs)) return cb(null, docs.map(function (doc) {\n                    return _this5._toJSONLD(doc, { skipContext: true });\n                }));else docs.toArray(function (err, docs) {\n                    if (err) return cb(err);\n                    return cb(null, docs.map(function (doc) {\n                        return _this5._toJSONLD(doc, { skipContext: true });\n                    }));\n                });\n            });\n        }\n\n        /* ******************************************\n         * Protected API\n         * ******************************************\n         */\n\n    }, {\n        key: '_toJSONLD',\n        value: function _toJSONLD(annoId, anno) {\n            var _this6 = this;\n\n            var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n            if ((typeof annoId === 'undefined' ? 'undefined' : _typeof(annoId)) === 'object') {\n                ;\n                var _ref7 = [annoId._id, annoId];\n                annoId = _ref7[0];\n                anno = _ref7[1];\n            }var ret = {};\n            if (!options.skipContext) {\n                ret['@context'] = 'http://www.w3.org/ns/anno.jsonld';\n            }\n            ret.id = this.config.BASE_URL + '/anno/' + annoId;\n            ret.type = \"Annotation\";\n            Object.keys(anno).forEach(function (prop) {\n                if (prop === '_revisions') {\n                    if (anno._revisions.length > 0 && !options.skipVersions) {\n                        var revId = 0;\n                        ret.hasVersion = anno._revisions.map(function (revision) {\n                            var revisionLD = _this6._toJSONLD(annoId + '-rev-' + ++revId, revision, { skipContext: true });\n                            revisionLD.versionOf = ret.id;\n                            return revisionLD;\n                        });\n                    }\n                } else if (!prop.match(/^_/)) {\n                    ret[prop] = anno[prop];\n                }\n            });\n\n            return ret;\n        }\n    }, {\n        key: '_projectionFromOptions',\n        value: function _projectionFromOptions(options) {\n            var ret = {};\n            if (options.metadataOnly) {\n                Object.assign(ret, {\n                    body: false,\n                    target: false\n                });\n                // HACK\n                for (var i = 0; i < 20; i++) {\n                    ret['_revisions.' + i + '.body'] = false;\n                    ret['_revisions.' + i + '.target'] = false;\n                }\n            }\n            return ret;\n        }\n    }]);\n\n    return MongolikeStore;\n}(Store);\n\nmodule.exports = MongolikeStore;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n    Schema: __webpack_require__(12),\n    Config: __webpack_require__(2),\n    Errors: __webpack_require__(8),\n    Store: __webpack_require__(9),\n    HttpStore: __webpack_require__(26),\n    MemoryStore: __webpack_require__(27),\n    BasicAuthMiddleware: __webpack_require__(24),\n    HttpHeadersMiddleware: __webpack_require__(25)\n};\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(68)\nvar ieee754 = __webpack_require__(71)\nvar isArray = __webpack_require__(72)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.decode = exports.parse = __webpack_require__(74);\nexports.encode = exports.stringify = __webpack_require__(75);\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports) {\n\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// anno.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 67);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4ad71524c9164d22096b","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  typeof document.createElement -> undefined\n */\nfunction isStandardBrowserEnv() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined' &&\n    typeof document.createElement === 'function'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/utils.js\n// module id = 0\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 1\n// module chunks = 0","var ENV\ntry {\n    ENV = window\n} catch (e) {\n    ENV = process.env\n}\nconst PREFIX = 'ANNO';\nconst PREFIX_RE = new RegExp(`^${PREFIX}_`)\nconst DEFAULTS = {\n    DEBUG: 'false',\n    // NEDB_DIR: __dirname + '/' + '../nedb',\n    STORE: '@kba/anno-store-file',\n}\n\nfunction loadConfig(localDefaults={}) {\n\n    const CONFIG = JSON.parse(JSON.stringify(DEFAULTS))\n    Object.assign(CONFIG, JSON.parse(JSON.stringify(localDefaults)))\n\n    Object.keys(ENV)\n        .filter(k => k.match(PREFIX_RE))\n        .forEach(k => CONFIG[k.replace(PREFIX_RE, '')] = ENV[k])\n\n    Object.keys(CONFIG)\n        .forEach(k => {\n            if (typeof CONFIG[k] === 'string' && CONFIG[k].match(/^true|false$/))\n                CONFIG[k] = CONFIG[k] !== 'false'\n            ENV[`${PREFIX}_${k}`] = CONFIG[k]\n        })\n\n    return CONFIG\n}\n\nfunction getLogger(category) {\n    var isNode; try { isNode = window !== undefined } catch (err) {isNode = true}\n    const config = loadConfig({\n        LOGFILE: '',\n        LOGLEVEL: '',\n    })\n    const format = function format(level, message) {\n        // console.log(message)\n        if (typeof message !== 'string') message = JSON.stringify(message)\n        const timestamp = new Date().toISOString().substr(11).substr(0, 11)\n        return `# ${level} [${timestamp}] ${category} - ${message}`\n    }\n    const logEnabled = function logEnabled(level, cb) {\n        if (level.match(/debug/i) && config.LOGLEVEL.match(/(silly|debug)/i)) return cb()\n        if (level.match(/SILLY/i) && config.LOGLEVEL.match(/silly/i)) return cb()\n    }\n    if (isNode && config.LOGFILE !== '') {\n        // HACK XXX webpack\n        const fn = require\n        const fs = fn('fs')\n        return {\n            silly: (...msgs) => logEnabled('silly', () => msgs.forEach(msg =>\n                fs.appendFile(config.LOGFILE, format('SILLY', msg+'\\n'), ()=>{}))),\n            debug: (...msgs) => logEnabled('debug', () => msgs.forEach(msg =>\n                fs.appendFile(config.LOGFILE, format('DEBUG', msg+'\\n'), ()=>{}))),\n        }\n    }\n    return {\n        silly: (...msgs) => logEnabled('SILLY', () => msgs.forEach(msg =>\n            console[isNode ? 'log' : 'debug'](format('SILLY', msg)))),\n        debug: (...msgs) => logEnabled('DEBUG', () => msgs.forEach(msg =>\n            console.log(format('DEBUG', msg)))),\n    }\n}\n\nmodule.exports = {\n    loadConfig,\n    getLogger,\n}\n\n\n\n// WEBPACK FOOTER //\n// ../anno-config/config.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0","//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/underscore/underscore.js\n// module id = 4\n// module chunks = 0","/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = require('util')\n  , _ = require('underscore')\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') { \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/lib/model.js\n// module id = 5\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 6\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 7\n// module chunks = 0","module.exports = {\n\n    annotationNotFound(id) {\n        const err = new Error(`Annotation not found in store: ${JSON.stringify(id)}`)\n        err.code = 404\n        return err\n    },\n\n    revisionNotFound(id, rev) {\n        const err = new Error(`No revision '${rev}' for annotation '${id}'`)\n        err.code = 404\n        return err\n    },\n\n    readonlyValue(id, field) {\n        const err = new Error(`Client must not change the '${field}' of annotation '${id}'`)\n        err.code = 409\n        return err\n    },\n\n    invalidAnnotation(anno, errors) {\n        const err = new Error(`Annotation is invalid: ` + JSON.stringify({anno, errors}, null, 2))\n        err.validationErrors = errors\n        err.code = 415\n        return err\n    },\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../anno-errors/errors.js","const slugid = require('slugid')\nconst async = require('async')\nconst {loadConfig,getLogger} = require('@kba/anno-config')\n\nclass Store {\n\n    static load(loadingModule) {\n        const config = loadConfig({\n            BASE_URL: 'http://ANNO_BASE_URL-NOT-SET',\n            STORE_MIDDLEWARES: ''\n        })\n        const log = require('@kba/anno-config').getLogger('store')\n        if (!loadingModule)\n            throw new Error(\"Must pass the loading module to Store.load\")\n        if (!config.STORE)\n            throw new Error(\"No store configured. Set the ANNO_STORE env var or STORE config option.\")\n        if (config.DEBUG)\n            console.log(`Loading store ${config.STORE} for ${loadingModule.filename}`)\n\n        var impl;\n        try {\n            impl = loadingModule.require(config.STORE)\n        } catch (err) {\n            console.log(err)\n            console.error(`Please install '${config.STORE}' configured as store`)\n            process.exit(1)\n        }\n\n        const store = new(impl)()\n        const middlewareModules = config.STORE_MIDDLEWARES\n            .split(',')\n            .map(s => s.trim())\n            .filter(s => s !== '')\n        log.silly('middlewares', middlewareModules)\n        async.eachSeries(middlewareModules, (middlewareModule, next) => {\n            var middlewareImpl;\n            try {\n                log.silly(`Loading ${middlewareModule}`)\n                middlewareImpl = loadingModule.require(middlewareModule)\n            } catch (err) {\n                console.log(err)\n                console.error(`Please install '${middlewareModule}' configured as middleware`)\n                process.exit(1)\n            }\n            store.use(middlewareImpl())\n            next()\n        })\n        return store\n    }\n\n    constructor() {\n        this.config = loadConfig()\n        this.middlewares = []\n        // console.log(this.config)\n        // console.error(\"Store.constructor called\")\n    }\n\n    _callMethod(ctx, cb) {\n        const impl = `_${ctx.method}`\n        if (!(impl in this)) {\n            return cb(new Error(`${impl} not implemented`))\n        }\n        const log = getLogger('store')\n        log.silly(`Calling method '${ctx.method}'`, ctx)\n        async.eachSeries(this.middlewares, (middleware, next) => {\n            middleware(ctx, function process(...args) {\n                log.silly(`ctx after ${middleware.constructor.name}`, ctx)\n                next(...args)\n            })\n        }, (err, pass) => {\n            if (err) return cb(err)\n            this[impl](ctx, cb)\n        })\n    }\n\n    /**\n     * Use middleware for auth etc.\n     *\n     */\n    use(middleware) {\n        this.middlewares.push(middleware)\n    }\n\n    /**\n     * Initialize a connection to the store.\n     *\n     * @param {Options} options\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    init(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'init'\n        }), cb)\n    }\n\n    /**\n     * Wipe the store, revisions and all.\n     *\n     * @param {Options} options\n     * @param {String} options.user\n     * @param {function} callback\n     *\n     */\n    wipe(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'wipe'\n        }), cb)\n    }\n\n    /**\n     * Disconnect a store.\n     *\n     * A disconnected store cannot be used until `init` is called again.\n     *\n     * @param {Options} options\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    disconnect(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'disconnect'\n        }), cb)\n    }\n\n    /**\n     * Retrieve an annotation.\n     *\n     * @param {String|Array<String>} annoIds\n     * @param {Options} options\n     * @param {Options} options.latest Return the latest revision\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    get(annoId, options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'get',\n            annoId,\n        }), cb)\n    }\n\n    /**\n     * Create an annotation.\n     *\n     * @param {Object|Array<Object>} annosToCreate\n     * @param {Options} options\n     * @param String options.slug Proposal for the ID to create\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    create(annos, options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'create',\n            annos,\n        }), cb)\n    }\n\n    /**\n     * Revise an annotation.\n     *\n     * @param {String} annoId\n     * @param {Object} anno\n     * @param {Options} options\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    revise(annoId, anno, options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'revise',\n            annoId,\n            anno,\n        }), cb)\n    }\n\n    /**\n     * Delete an annotation, i.e. set the deleted date.\n     *\n     * @param {String} annoId\n     * @param {Options} options\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    delete(annoId, options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'delete',\n            annoId,\n        }), cb)\n    }\n\n    /**\n     * Search the store.\n     *\n     * @param {Object} query\n     * @param {Options} options\n     * @param {String} options.user\n     * @param {function} callback\n     */\n    search(query, options, cb) {\n        if (typeof query   === 'function') [cb, query, options] = [query, {}, {}]\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this._callMethod(Object.assign(options, {\n            method: 'search',\n            query,\n        }), cb)\n    }\n\n\n\n    /*\n     * *********************************************************************\n     *\n     * Protected API\n     *\n     * *********************************************************************\n     */\n\n    _idFromURL(url) {\n        return url.replace(this.config.BASE_URL + '/anno/', '')\n    }\n\n    // TODO no idempotency of targets with normalization -> disabled for now\n    _normalizeTarget(annoDoc) {\n        if (!Array.isArray(annoDoc.target)) annoDoc.target = [annoDoc.target]\n        annoDoc.target = annoDoc.target.map(target =>\n            (typeof target === 'string') ? {source: target} : target)\n        if (annoDoc.target.length === 1) annoDoc.target = annoDoc.target[0]\n        return annoDoc\n    }\n\n    _normalizeType(annoDoc) {\n        if (!('type' in annoDoc)) annoDoc.type = []\n        if (!Array.isArray(annoDoc.type)) annoDoc.type = [annoDoc.type]\n        if (annoDoc.type.indexOf('Annotation') === -1) annoDoc.type.push('Annotation')\n        return annoDoc\n    }\n\n    _deleteId(anno) {\n        // delete anno._id\n        if (anno.id) {\n            anno.via = anno.id\n            delete anno.id\n        }\n        return anno\n    }\n\n    _genid(slug='') {\n        return slug + slugid.v4()\n    }\n\n}\n\nmodule.exports = Store\n\n\n\n// WEBPACK FOOTER //\n// ../anno-store/store.js","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/defaults.js\n// module id = 10\n// module chunks = 0","/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/async/lib/async.js\n// module id = 11\n// module chunks = 0","const mustache = require('mustache')\nconst ajv = require('ajv')({\n    allErrors: true,\n    errorDataPath: true,\n    // verbose: true,\n});\nconst config = require('@kba/anno-config').loadConfig({\n    CONTEXT_URL: 'https://kba.github.io/anno/context.jsonld',\n\n    // Swagger / OpenAPI\n    OPENAPI_HOST: 'localhost:3000',\n    OPENAPI_BASEPATH: '/',\n    OPENAPI_PATH: 'anno',\n\n    // PROP_HAS_REPLY: 'hasReply',\n    // PROP_REPLY_TO: 'replyTo',\n    // // PROP_HAS_COMMENT: 'ns:hasReview',\n    // PROP_HAS_VERSION: 'http://purl.org/dcterms/hasVersion',\n    // // PROP_HAS_VERSION: 'ns:hasVersion',\n    // PROP_VERSION_OF: 'http://purl.org/dcterms/versionOf',\n    // // PROP_VERSION_OF: 'ns:versionOf',\n})\n\nfunction mustacheJSON(obj) {\n    return JSON.parse(mustache.render(JSON.stringify(obj), {config}))\n}\n\nconst dataModel     = mustacheJSON(require('./data-model.json'))\nconst jsonldContext = mustacheJSON(require('./context.json'))\nconst openapi       = mustacheJSON(require('./openapi.json'))\nopenapi.definitions = dataModel.definitions\n\nmodule.exports = {\n    openapi: openapi,\n    definitions: dataModel.definitions,\n    jsonldContext: jsonldContext,\n    contentType: {\n        'anno':  'application/ld+json;profile=\"http://www.w3.org/ns/anno.jsonld\"',\n        'annox': 'application/ld+json;profile=\"http://www.w3.org/ns/anno.jsonld\"',\n    },\n    validate: {},\n}\n\nObject.keys(dataModel.definitions).forEach(k => {\n    const thisSchema = JSON.parse(JSON.stringify(dataModel.definitions[k]))\n    thisSchema.definitions = JSON.parse(JSON.stringify(dataModel.definitions))\n    module.exports.validate[k] = ajv.compile(thisSchema)\n})\n\n\n\n// WEBPACK FOOTER //\n// ../anno-schema/index.js","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        if (request.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/adapters/xhr.js\n// module id = 13\n// module chunks = 0","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/cancel/Cancel.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/cancel/isCancel.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, response);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/createError.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/bind.js\n// module id = 17\n// module chunks = 0","/**\n * Simple binary search tree\n */\nvar customUtils = require('./customUtils');\n\n\n/**\n * Constructor\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction BinarySearchTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n// ================================\n// Methods used to test the tree\n// ================================\n\n\n/**\n * Get the descendant with max key\n */\nBinarySearchTree.prototype.getMaxKeyDescendant = function () {\n  if (this.right) {\n    return this.right.getMaxKeyDescendant();\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the maximum key\n */\nBinarySearchTree.prototype.getMaxKey = function () {\n  return this.getMaxKeyDescendant().key;\n};\n\n\n/**\n * Get the descendant with min key\n */\nBinarySearchTree.prototype.getMinKeyDescendant = function () {\n  if (this.left) {\n    return this.left.getMinKeyDescendant()\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the minimum key\n */\nBinarySearchTree.prototype.getMinKey = function () {\n  return this.getMinKeyDescendant().key;\n};\n\n\n/**\n * Check that all nodes (incl. leaves) fullfil condition given by fn\n * test is a function passed every (key, data) and which throws if the condition is not met\n */\nBinarySearchTree.prototype.checkAllNodesFullfillCondition = function (test) {\n  if (!this.hasOwnProperty('key')) { return; }\n\n  test(this.key, this.data);\n  if (this.left) { this.left.checkAllNodesFullfillCondition(test); }\n  if (this.right) { this.right.checkAllNodesFullfillCondition(test); }\n};\n\n\n/**\n * Check that the core BST properties on node ordering are verified\n * Throw if they aren't\n */\nBinarySearchTree.prototype.checkNodeOrdering = function () {\n  var self = this;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) >= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.left.checkNodeOrdering();\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) <= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.right.checkNodeOrdering();\n  }\n};\n\n\n/**\n * Check that all pointers are coherent in this tree\n */\nBinarySearchTree.prototype.checkInternalPointers = function () {\n  if (this.left) {\n    if (this.left.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.left.checkInternalPointers();\n  }\n\n  if (this.right) {\n    if (this.right.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.right.checkInternalPointers();\n  }\n};\n\n\n/**\n * Check that a tree is a BST as defined here (node ordering and pointer references)\n */\nBinarySearchTree.prototype.checkIsBST = function () {\n  this.checkNodeOrdering();\n  this.checkInternalPointers();\n  if (this.parent) { throw new Error(\"The root shouldn't have a parent\"); }\n};\n\n\n/**\n * Get number of keys inserted\n */\nBinarySearchTree.prototype.getNumberOfKeys = function () {\n  var res;\n\n  if (!this.hasOwnProperty('key')) { return 0; }\n\n  res = 1;\n  if (this.left) { res += this.left.getNumberOfKeys(); }\n  if (this.right) { res += this.right.getNumberOfKeys(); }\n\n  return res;\n};\n\n\n\n// ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n/**\n * Create a BST similar (i.e. same options except for key and value) to the current one\n * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n * @param {Object} options see constructor\n */\nBinarySearchTree.prototype.createSimilar = function (options) {\n  options = options || {};\n  options.unique = this.unique;\n  options.compareKeys = this.compareKeys;\n  options.checkValueEquality = this.checkValueEquality;\n\n  return new this.constructor(options);\n};\n\n\n/**\n * Create the left child of this BST and return it\n */\nBinarySearchTree.prototype.createLeftChild = function (options) {\n  var leftChild = this.createSimilar(options);\n  leftChild.parent = this;\n  this.left = leftChild;\n\n  return leftChild;\n};\n\n\n/**\n * Create the right child of this BST and return it\n */\nBinarySearchTree.prototype.createRightChild = function (options) {\n  var rightChild = this.createSimilar(options);\n  rightChild.parent = this;\n  this.right = rightChild;\n\n  return rightChild;\n};\n\n\n/**\n * Insert a new element\n */\nBinarySearchTree.prototype.insert = function (key, value) {\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    return;\n  }\n\n  // Same key as root\n  if (this.compareKeys(this.key, key) === 0) {\n    if (this.unique) {\n      var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n      err.key = key;\n      err.errorType = 'uniqueViolated';\n      throw err;\n    } else {\n      this.data.push(value);\n    }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    // Insert in left subtree\n    if (this.left) {\n      this.left.insert(key, value);\n    } else {\n      this.createLeftChild({ key: key, value: value });\n    }\n  } else {\n    // Insert in right subtree\n    if (this.right) {\n      this.right.insert(key, value);\n    } else {\n      this.createRightChild({ key: key, value: value });\n    }\n  }\n};\n\n\n/**\n * Search for all data corresponding to a key\n */\nBinarySearchTree.prototype.search = function (key) {\n  if (!this.hasOwnProperty('key')) { return []; }\n\n  if (this.compareKeys(this.key, key) === 0) { return this.data; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      return this.left.search(key);\n    } else {\n      return [];\n    }\n  } else {\n    if (this.right) {\n      return this.right.search(key);\n    } else {\n      return [];\n    }\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches a lower bound\n */\nBinarySearchTree.prototype.getLowerBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$gt') && !query.hasOwnProperty('$gte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$gt') && query.hasOwnProperty('$gte')) {\n    if (self.compareKeys(query.$gte, query.$gt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n\n    if (self.compareKeys(query.$gte, query.$gt) > 0) {\n      return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$gt')) {\n    return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches an upper bound\n */\nBinarySearchTree.prototype.getUpperBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$lt') && !query.hasOwnProperty('$lte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$lt') && query.hasOwnProperty('$lte')) {\n    if (self.compareKeys(query.$lte, query.$lt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n\n    if (self.compareKeys(query.$lte, query.$lt) < 0) {\n      return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$lt')) {\n    return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n  }\n};\n\n\n// Append all elements in toAppend to array\nfunction append (array, toAppend) {\n  var i;\n\n  for (i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i]);\n  }\n}\n\n\n/**\n * Get all data for a key between bounds\n * Return it in key order\n * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n */\nBinarySearchTree.prototype.betweenBounds = function (query, lbm, ubm) {\n  var res = [];\n\n  if (!this.hasOwnProperty('key')) { return []; }   // Empty tree\n\n  lbm = lbm || this.getLowerBoundMatcher(query);\n  ubm = ubm || this.getUpperBoundMatcher(query);\n\n  if (lbm(this.key) && this.left) { append(res, this.left.betweenBounds(query, lbm, ubm)); }\n  if (lbm(this.key) && ubm(this.key)) { append(res, this.data); }\n  if (ubm(this.key) && this.right) { append(res, this.right.betweenBounds(query, lbm, ubm)); }\n\n  return res;\n};\n\n\n/**\n * Delete the current node if it is a leaf\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfLeaf = function () {\n  if (this.left || this.right) { return false; }\n\n  // The leaf is itself a root\n  if (!this.parent) {\n    delete this.key;\n    this.data = [];\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = null;\n  } else {\n    this.parent.right = null;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete the current node if it has only one child\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfOnlyOneChild = function () {\n  var child;\n\n  if (this.left && !this.right) { child = this.left; }\n  if (!this.left && this.right) { child = this.right; }\n  if (!child) { return false; }\n\n  // Root\n  if (!this.parent) {\n    this.key = child.key;\n    this.data = child.data;\n\n    this.left = null;\n    if (child.left) {\n      this.left = child.left;\n      child.left.parent = this;\n    }\n\n    this.right = null;\n    if (child.right) {\n      this.right = child.right;\n      child.right.parent = this;\n    }\n\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = child;\n    child.parent = this.parent;\n  } else {\n    this.parent.right = child;\n    child.parent = this.parent;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete a key or just a value\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\nBinarySearchTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    ;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) { this.left.delete(key, value); }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) > 0) {\n    if (this.right) { this.right.delete(key, value); }\n    return;\n  }\n\n  if (!this.compareKeys(key, this.key) === 0) { return; }\n\n  // Delete only a value\n  if (this.data.length > 1 && value !== undefined) {\n    this.data.forEach(function (d) {\n      if (!self.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    self.data = newData;\n    return;\n  }\n\n  // Delete the whole node\n  if (this.deleteIfLeaf()) {\n    return;\n  }\n  if (this.deleteIfOnlyOneChild()) {\n    return;\n  }\n\n  // We are in the case where the node to delete has two children\n  if (Math.random() >= 0.5) {   // Randomize replacement to avoid unbalancing the tree too much\n    // Use the in-order predecessor\n    replaceWith = this.left.getMaxKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.left = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.right = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    }\n  } else {\n    // Use the in-order successor\n    replaceWith = this.right.getMinKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.right = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.left = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    }\n  }\n};\n\n\n/**\n * Execute a function on every node of the tree, in key order\n * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n */\nBinarySearchTree.prototype.executeOnEveryNode = function (fn) {\n  if (this.left) { this.left.executeOnEveryNode(fn); }\n  fn(this);\n  if (this.right) { this.right.executeOnEveryNode(fn); }\n};\n\n\n/**\n * Pretty print a tree\n * @param {Boolean} printData To print the nodes' data along with the key\n */\nBinarySearchTree.prototype.prettyPrint = function (printData, spacing) {\n  spacing = spacing || \"\";\n\n  console.log(spacing + \"* \" + this.key);\n  if (printData) { console.log(spacing + \"* \" + this.data); }\n\n  if (!this.left && !this.right) { return; }\n\n  if (this.left) {\n    this.left.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n  if (this.right) {\n    this.right.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n};\n\n\n\n\n// Interface\nmodule.exports = BinarySearchTree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/binary-search-tree/lib/bst.js\n// module id = 18\n// module chunks = 0","/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/binary-search-tree/lib/customUtils.js\n// module id = 19\n// module chunks = 0","/**\n * Specific customUtils for the browser, where we don't have access to the Crypto and Buffer modules\n */\n\n/**\n * Taken from the crypto-browserify module\n * https://github.com/dominictarr/crypto-browserify\n * NOTE: Math.random() does not guarantee \"cryptographic quality\" but we actually don't need it\n */\nfunction randomBytes (size) {\n  var bytes = new Array(size);\n  var r;\n\n  for (var i = 0, r; i < size; i++) {\n    if ((i & 0x03) == 0) r = Math.random() * 0x100000000;\n    bytes[i] = r >>> ((i & 0x03) << 3) & 0xff;\n  }\n\n  return bytes;\n}\n\n\n/**\n * Taken from the base64-js module\n * https://github.com/beatgammit/base64-js/\n */\nfunction byteArrayToBase64 (uint8) {\n  var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    , extraBytes = uint8.length % 3   // if we have 1 byte left, pad 2 bytes\n    , output = \"\"\n    , temp, length, i;\n\n  function tripletToBase64 (num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  };\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output += tripletToBase64(temp);\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  switch (extraBytes) {\n    case 1:\n      temp = uint8[uint8.length - 1];\n      output += lookup[temp >> 2];\n      output += lookup[(temp << 4) & 0x3F];\n      output += '==';\n      break;\n    case 2:\n      temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n      output += lookup[temp >> 10];\n      output += lookup[(temp >> 4) & 0x3F];\n      output += lookup[(temp << 2) & 0x3F];\n      output += '=';\n      break;\n  }\n\n  return output;\n}\n\n\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n */\nfunction uid (len) {\n  return byteArrayToBase64(randomBytes(Math.ceil(Math.max(8, len * 2)))).replace(/[+\\/]/g, '').slice(0, len);\n}\n\n\n\nmodule.exports.uid = uid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/browser-version/browser-specific/lib/customUtils.js\n// module id = 20\n// module chunks = 0","var BinarySearchTree = require('binary-search-tree').AVLTree\n  , model = require('./model')\n  , _ = require('underscore')\n  , util = require('util')\n  ;\n\n/**\n * Two indexed pointers are equal iif they point to the same place\n */\nfunction checkValueEquality (a, b) {\n  return a === b;\n}\n\n/**\n * Type-aware projection\n */\nfunction projectForUnique (elt) {\n  if (elt === null) { return '$null'; }\n  if (typeof elt === 'string') { return '$string' + elt; }\n  if (typeof elt === 'boolean') { return '$boolean' + elt; }\n  if (typeof elt === 'number') { return '$number' + elt; }\n  if (util.isArray(elt)) { return '$date' + elt.getTime(); }\n\n  return elt;   // Arrays and objects, will check for pointer equality\n}\n\n\n/**\n * Create a new index\n * All methods on an index guarantee that either the whole operation was successful and the index changed\n * or the operation was unsuccessful and an error is thrown while the index is unchanged\n * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)\n * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)\n */\nfunction Index (options) {\n  this.fieldName = options.fieldName;\n  this.unique = options.unique || false;\n  this.sparse = options.sparse || false;\n\n  this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality };\n\n  this.reset();   // No data in the beginning\n}\n\n\n/**\n * Reset an index\n * @param {Document or Array of documents} newData Optional, data to initialize the index with\n *                                                 If an error is thrown during insertion, the index is not modified\n */\nIndex.prototype.reset = function (newData) {\n  this.tree = new BinarySearchTree(this.treeOptions);\n\n  if (newData) { this.insert(newData); }\n};\n\n\n/**\n * Insert a new document in the index\n * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n * O(log(n))\n */\nIndex.prototype.insert = function (doc) {\n  var key, self = this\n    , keys, i, failingI, error\n    ;\n\n  if (util.isArray(doc)) { this.insertMultipleDocs(doc); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  // We don't index documents that don't contain the field if the index is sparse\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.insert(key, doc);\n  } else {\n    // If an insert fails due to a unique constraint, roll back all inserts before it\n    keys = _.uniq(key, projectForUnique);\n\n    for (i = 0; i < keys.length; i += 1) {\n      try {\n        this.tree.insert(keys[i], doc);\n      } catch (e) {\n        error = e;\n        failingI = i;\n        break;\n      }\n    }\n\n    if (error) {\n      for (i = 0; i < failingI; i += 1) {\n        this.tree.delete(keys[i], doc);\n      }\n\n      throw error;\n    }\n  }\n};\n\n\n/**\n * Insert an array of documents in the index\n * If a constraint is violated, the changes should be rolled back and an error thrown\n *\n * @API private\n */\nIndex.prototype.insertMultipleDocs = function (docs) {\n  var i, error, failingI;\n\n  for (i = 0; i < docs.length; i += 1) {\n    try {\n      this.insert(docs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(docs[i]);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove a document from the index\n * If an array is passed, we remove all its elements\n * The remove operation is safe with regards to the 'unique' constraint\n * O(log(n))\n */\nIndex.prototype.remove = function (doc) {\n  var key, self = this;\n\n  if (util.isArray(doc)) { doc.forEach(function (d) { self.remove(d); }); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.delete(key, doc);\n  } else {\n    _.uniq(key, projectForUnique).forEach(function (_key) {\n      self.tree.delete(_key, doc);\n    });\n  }\n};\n\n\n/**\n * Update a document in the index\n * If a constraint is violated, changes are rolled back and an error thrown\n * Naive implementation, still in O(log(n))\n */\nIndex.prototype.update = function (oldDoc, newDoc) {\n  if (util.isArray(oldDoc)) { this.updateMultipleDocs(oldDoc); return; }\n\n  this.remove(oldDoc);\n\n  try {\n    this.insert(newDoc);\n  } catch (e) {\n    this.insert(oldDoc);\n    throw e;\n  }\n};\n\n\n/**\n * Update multiple documents in the index\n * If a constraint is violated, the changes need to be rolled back\n * and an error thrown\n * @param {Array of oldDoc, newDoc pairs} pairs\n *\n * @API private\n */\nIndex.prototype.updateMultipleDocs = function (pairs) {\n  var i, failingI, error;\n\n  for (i = 0; i < pairs.length; i += 1) {\n    this.remove(pairs[i].oldDoc);\n  }\n\n  for (i = 0; i < pairs.length; i += 1) {\n    try {\n      this.insert(pairs[i].newDoc);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  // If an error was raised, roll back changes in the inverse order\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(pairs[i].newDoc);\n    }\n\n    for (i = 0; i < pairs.length; i += 1) {\n      this.insert(pairs[i].oldDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Revert an update\n */\nIndex.prototype.revertUpdate = function (oldDoc, newDoc) {\n  var revert = [];\n\n  if (!util.isArray(oldDoc)) {\n    this.update(newDoc, oldDoc);\n  } else {\n    oldDoc.forEach(function (pair) {\n      revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc });\n    });\n    this.update(revert);\n  }\n};\n\n\n/**\n * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n * @param {Thing} value Value to match the key against\n * @return {Array of documents}\n */\nIndex.prototype.getMatching = function (value) {\n  var self = this;\n\n  if (!util.isArray(value)) {\n    return self.tree.search(value);\n  } else {\n    var _res = {}, res = [];\n\n    value.forEach(function (v) {\n      self.getMatching(v).forEach(function (doc) {\n        _res[doc._id] = doc;\n      });\n    });\n\n    Object.keys(_res).forEach(function (_id) {\n      res.push(_res[_id]);\n    });\n\n    return res;\n  }\n};\n\n\n/**\n * Get all documents in index whose key is between bounds are they are defined by query\n * Documents are sorted by key\n * @param {Query} query\n * @return {Array of documents}\n */\nIndex.prototype.getBetweenBounds = function (query) {\n  return this.tree.betweenBounds(query);\n};\n\n\n/**\n * Get all elements in the index\n * @return {Array of documents}\n */\nIndex.prototype.getAll = function () {\n  var res = [];\n\n  this.tree.executeOnEveryNode(function (node) {\n    var i;\n\n    for (i = 0; i < node.data.length; i += 1) {\n      res.push(node.data[i]);\n    }\n  });\n\n  return res;\n};\n\n\n\n\n// Interface\nmodule.exports = Index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/lib/indexes.js\n// module id = 21\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 23\n// module chunks = 0","const {loadConfig} = require('@kba/anno-config')\n\nmodule.exports = function () {\n    const config = require('@kba/anno-config').loadConfig({\n        BASICAUTH_USERNAME: '',\n        BASICAUTH_PASSWORD: '',\n    })\n    return function BasicAuthMiddleware(ctx, cb) {\n        if (!config.BASICAUTH_USERNAME)\n            return cb(new Error(\"ANNO_BASICAUTH_USERNAME not set\"))\n        ctx.auth = ctx.auth || {}\n        ;['username', 'password'].forEach(k => {\n            ctx.auth[k] = config[`BASICAUTH_${k}`.toUpperCase()]\n        })\n        cb()\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../anno-mw-basicauth/mw-basicauth.js","const {loadConfig} = require('@kba/anno-config')\n\nmodule.exports = function () {\n    const config = loadConfig({ HTTPHEADERS: '' })\n    return function HttpHeaderMiddleware(ctx, cb) {\n        if (!config.HTTPHEADERS) return cb()\n        ctx.httpHeaders = ctx.httpHeaders || {}\n        config.HTTPHEADERS.trim()\n            .split(/\\s*[|\\n]+\\s*/g)\n            .map(kv => kv.trim())\n            .map(kv => kv.split(/\\s*:\\s*/))\n            .map(([k, v]) => ctx.httpHeaders[k.trim()] = v.trim())\n        cb()\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../anno-mw-httpheaders/mw-httpheaders.js","const axios = require('axios')\nconst Store = require('@kba/anno-store')\nconst errors = require('@kba/anno-errors')\nconst querystring = require('querystring')\nconst {loadConfig, getLogger} = require('@kba/anno-config')\n\nclass HttpStore extends Store {\n\n    constructor() {\n        super()\n        this.config = loadConfig({\n            BASE_URL: 'http://localhost:3000/anno'\n        })\n        const options = {\n            baseURL: this.config.BASE_URL\n        }\n        this._httpClient = axios.create(options)\n    }\n\n    /* @override */\n    _init(options, cb) {\n        return cb()\n    }\n\n    /* @override */\n    _create(options, cb) {\n        const {annos} = options\n        this._httpClient.post('/', annos, this._configFromOptions(options))\n            .then(resp => cb(null, resp.data))\n            .catch(err => cb(err.statusCode))\n    }\n\n    /* @override */\n    _get(options, cb) {\n        const {annoId} = options\n        const annoUrl = annoId.match('//') ? annoId : `/${annoId}`\n        this._httpClient.get(annoUrl, this._configFromOptions(options))\n            .then(resp => cb(null, resp.data))\n            .catch(err => {\n                if(err.response.status === 404) {\n                    return cb(errors.annotationNotFound(annoUrl))\n                }\n                return cb(err.response.data)\n            })\n    }\n\n    /* @override */\n    _search(options, cb) {\n        const {query} = options\n        this._httpClient.get('/' + '?' + querystring.stringify(query), this._configFromOptions(options))\n            .then(resp => {\n                const col = resp.data\n                if (col.total === 0) {\n                    return []\n                } else {\n                    cb(null, col.first.items)\n                }\n            })\n            .catch(err => cb(err.statusCode))\n    }\n\n    /* @override */\n    _revise(options, cb) {\n        const {annoId, anno} = options\n        const annoUrl = annoId.match('//') ? annoId : `/${annoId}`\n        this._httpClient.put(annoUrl, anno, this._configFromOptions(options))\n            .then(resp => cb(null, resp.data))\n            .catch(err => {\n                if(err.response.status === 404) {\n                    return cb(errors.annotationNotFound(annoUrl))\n                }\n                return cb(err.response.data)\n            })\n    }\n\n    /* @override */\n    _delete(options, cb) {\n        const {annoId} = options\n        const annoUrl = annoId.match('//') ? annoId : `/${annoId}`\n        this._httpClient.delete(annoUrl, this._configFromOptions(options))\n            .then(() => cb())\n            .catch(err => {\n                if(err.response.status === 404) {\n                    return cb(errors.annotationNotFound(annoUrl))\n                }\n                return cb(err.response.data)\n            })\n    }\n\n    /* @override */\n    _wipe(options, cb) {\n        return this._httpClient.delete('/', this._configFromOptions(options))\n            .then(() => cb())\n            .catch(err => {\n                return cb(err.statusCode)\n            })\n    }\n\n    /* @override */\n    _disconnect(options, cb) {\n        return cb()\n    }\n\n    // ----------------------------------------\n    // PRIVATE\n    // ----------------------------------------\n    _configFromOptions(options) {\n        const ret = {}\n        // BasicAuth\n        if (options.auth && options.auth.username) {\n            ret.auth = ret.auth || {}\n            ret.auth.username = options.auth.username\n            ret.auth.password = options.auth.password\n        }\n        // Custom Headers\n        if (options.httpHeaders) {\n            ret.headers = ret.headers || {}\n            Object.assign(ret.headers, options.httpHeaders)\n        }\n        const log = getLogger('store-http')\n        log.silly(\"axios config from options\", ret)\n        return ret\n    }\n\n}\n\nmodule.exports = HttpStore\n\n\n\n// WEBPACK FOOTER //\n// ../anno-store-http/store-http.js","const nedb = require('nedb')\nconst fs = require('fs')\nconst Store = require('@kba/anno-store-mongolike')\n\nclass MemoryStore extends Store {\n\n    constructor() {\n        super()\n        this.db = new nedb({})\n    }\n\n    _init(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this.db.loadDatabase(err => {\n            if (err) return cb(err)\n            return cb()\n        })\n    }\n\n    _wipe(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        this.db = new nedb({})\n        return this.init(options, cb)\n    }\n\n}\n\nmodule.exports = MemoryStore\n\n\n\n// WEBPACK FOOTER //\n// ../anno-store-memory/store-memory.js","module.exports = {\n\t\"@context\": [\n\t\t\"http://www.w3.org/ns/anno.jsonld\",\n\t\t{\n\t\t\t\"annox\": \"https://github.com/kba/anno/context.jsonld\",\n\t\t\t\"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n\t\t\t\"sioc\": \"http://rdfs.org/sioc/ns#\",\n\t\t\t\"AnnotationRevision\": {\n\t\t\t\t\"@id\": \"annox:AnnotationRevision\",\n\t\t\t\t\"rdfs:subClassOf\": \"oa:Annotation\"\n\t\t\t},\n\t\t\t\"AnnotationReply\": {\n\t\t\t\t\"@id\": \"annox:AnnotationReply\",\n\t\t\t\t\"rdfs:subClassOf\": \"oa:Annotation\"\n\t\t\t},\n\t\t\t\"hasReply\": {\n\t\t\t\t\"@id\": \"annox:hasReply\",\n\t\t\t\t\"@type\": \"@id\",\n\t\t\t\t\"rdfs:subClassOf\": \"sioc:has_reply\",\n\t\t\t\t\"rdfs:domain\": \"oa:Annotation\",\n\t\t\t\t\"rdfs:range\": \"annox:AnnotationComment\"\n\t\t\t},\n\t\t\t\"replyTo\": {\n\t\t\t\t\"@id\": \"annox:replyTo\",\n\t\t\t\t\"@type\": \"@id\",\n\t\t\t\t\"rdfs:subClassOf\": \"sioc:reply_to\",\n\t\t\t\t\"rdfs:domain\": \"annox:AnnotationComment\",\n\t\t\t\t\"rdfs:range\": \"oa:Annotation\"\n\t\t\t},\n\t\t\t\"hasVersion\": {\n\t\t\t\t\"@id\": \"http://purl.org/pav/hasVersion\",\n\t\t\t\t\"@type\": \"@id\"\n\t\t\t},\n\t\t\t\"versionOf\": {\n\t\t\t\t\"@id\": \"annox:versionOf\",\n\t\t\t\t\"@type\": \"@id\"\n\t\t\t},\n\t\t\t\"deleted\": \"schema:dateDeleted\"\n\t\t}\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-schema/context.json\n// module id = 28\n// module chunks = 0","module.exports = {\n\t\"definitions\": {\n\t\t\"xsd_dateTime\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"format\": \"date-time\"\n\t\t},\n\t\t\"iri\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"format\": \"uri\"\n\t\t},\n\t\t\"iri_object\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"id\"\n\t\t\t],\n\t\t\t\"additionalProperties\": false,\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"mediaType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \".*/.*\"\n\t\t},\n\t\t\"language\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \"[a-z]{2,3}\"\n\t\t},\n\t\t\"textDirection\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [\n\t\t\t\t\"\",\n\t\t\t\t\"ltr\",\n\t\t\t\t\"rtl\",\n\t\t\t\t\"auto\"\n\t\t\t]\n\t\t},\n\t\t\"Annotation\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationMetadata\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"target\"\n\t\t\t\t\t],\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"canonical\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"via\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"styledBy\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/CssStylesheet\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"body\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/TextualBody\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Choice\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/TextualBody\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Choice\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"target\": {\n\t\t\t\t\t\t\t\"anyOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"anyOf\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"Resource\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"anyOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"id\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"format\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/mediaType\"\n\t\t\t\t},\n\t\t\t\t\"language\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/language\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/language\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"processingLanguage\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/language\"\n\t\t\t\t},\n\t\t\t\t\"textDirection\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/textDirection\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/ResourceClass\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/ResourceClass\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"TargetResource\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"renderedVia\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Software\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"styleClass\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"source\": {\n\t\t\t\t\t\t\t\"allOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"default\": \"http://foo\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"scope\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"selector\": {\n\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"AnnotationMetadata\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"created\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"modified\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"generated\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"creator\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Person\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"generator\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Software\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"ResourceClass\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [\n\t\t\t\t\"Dataset\",\n\t\t\t\t\"Image\",\n\t\t\t\t\"Video\",\n\t\t\t\t\"Sound\",\n\t\t\t\t\"Text\"\n\t\t\t]\n\t\t},\n\t\t\"TextualBody\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TextualBody\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"format\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/mediaType\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Choice\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"Choice\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"items\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"minItems\": 1,\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"anyOf\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/TextualBody\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/SpecificResource\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Motivation\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [\n\t\t\t\t\"bookmarking\",\n\t\t\t\t\"classifying\",\n\t\t\t\t\"commenting\",\n\t\t\t\t\"describing\",\n\t\t\t\t\"editing\",\n\t\t\t\t\"highlighting\",\n\t\t\t\t\"identifying\",\n\t\t\t\t\"linking\",\n\t\t\t\t\"moderating\",\n\t\t\t\t\"questioning\",\n\t\t\t\t\"replying\",\n\t\t\t\t\"tagging\"\n\t\t\t]\n\t\t},\n\t\t\"Agent\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"id\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"Person\",\n\t\t\t\t\t\t\"Organization\",\n\t\t\t\t\t\t\"Software\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"nickname\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"email\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"format\": \"email\"\n\t\t\t\t},\n\t\t\t\t\"email_sha1\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"homepage\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Person\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/Agent\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"Person\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"name\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"SpecificResource\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"anyOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"purpose\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"selector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"styleClass\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"state\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\",\n\t\t\t\t\t\t\"scope\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"source\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"SpecificResource\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"styleClass\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"source\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Resource\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"purpose\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Motivation\"\n\t\t\t\t},\n\t\t\t\t\"scope\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"accessibility\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"state\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri_object\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/State\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri_object\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/State\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"selector\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Selector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"oneOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/FragmentSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/CssSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/XPathSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/TextQuoteSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/TextPositionSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/DataPositionSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/SvgSelector\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/RangeSelector\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"FragmentSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"FragmentSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"conformsTo\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3236\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3778\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc5147\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3023\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc3870\",\n\t\t\t\t\t\t\"http://tools.ietf.org/rfc/rfc7111\",\n\t\t\t\t\t\t\"http://www.w3.org/TR/media-frags/\",\n\t\t\t\t\t\t\"http://www.w3.org/TR/SVG/\",\n\t\t\t\t\t\t\"http://www.idpf.org/epub/linking/cfi/epub-cfi.html\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"CssSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"CssSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"XPathSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"XPathSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"TextQuoteSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"exact\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TextQuoteSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"exact\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"suffix\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"TextPositionSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"start\",\n\t\t\t\t\"end\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TextPositionSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"start\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"end\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"DataPositionSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"start\",\n\t\t\t\t\"end\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"DataPositionSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"start\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"end\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"SvgSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"oneOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"id\",\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"value\",\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"SvgSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"RangeSelector\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"startSelector\",\n\t\t\t\t\"endSelector\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"RangeSelector\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"startSelector\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t},\n\t\t\t\t\"endSelector\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Selector\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"State\": {\n\t\t\t\"oneOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/TimeState\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/HttpRequestState\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TimeState\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"TimeState\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"sourceDate\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"sourceDateStart\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"sourceDateEnd\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/xsd_dateTime\"\n\t\t\t\t},\n\t\t\t\t\"cached\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"HttpRequestState\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"HttpRequestState\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"CssStylesheet\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"type\",\n\t\t\t\t\"value\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"CssStylesheet\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Software\": {\n\t\t\t\"allOf\": [\n\t\t\t\t{\n\t\t\t\t\t\"$ref\": \"#/definitions/Agent\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"id\",\n\t\t\t\t\t\t\"type\"\n\t\t\t\t\t],\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"Software\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"schema:softwareVersion\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"AnnotationCollection\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"id\",\n\t\t\t\t\"type\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"@context\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"AnnotationCollection\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"AnnotationCollection\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"total\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"first\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationPage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"last\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationPage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"AnnotationPage\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"@context\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"http://www.w3.org/ns/anno.jsonld\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"AnnotationPage\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contains\": [\n\t\t\t\t\t\t\t\t\"AnnotationPage\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"partOf\": {\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationPage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"items\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/iri\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-schema/data-model.json\n// module id = 29\n// module chunks = 0","/* ajv 4.11.5: Another JSON Schema Validator */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r;r=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,r.Ajv=e()}}(function(){var e;return function e(r,t,a){function s(i,n){if(!t[i]){if(!r[i]){var l=\"function\"==typeof require&&require;if(!n&&l)return l(i,!0);if(o)return o(i,!0);var c=new Error(\"Cannot find module '\"+i+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var h=t[i]={exports:{}};r[i][0].call(h.exports,function(e){var t=r[i][1][e];return s(t?t:e)},h,h.exports,e,r,t,a)}return t[i].exports}for(var o=\"function\"==typeof require&&require,i=0;i<a.length;i++)s(a[i]);return s}({1:[function(e,r,t){\"use strict\";function a(e,r){r!==!1&&(r=!0);var t,s=e.async,o=e.transpile;switch(typeof o){case\"string\":var i=m[o];if(!i)throw new Error(\"bad transpiler: \"+o);return e._transpileFunc=i(e,r);case\"undefined\":case\"boolean\":if(\"string\"==typeof s){if(t=p[s],!t)throw new Error(\"bad async mode: \"+s);return e.transpile=t(e,r)}for(var n=0;n<v.length;n++){var l=v[n];if(a(l,!1))return d.copy(l,e),e.transpile}throw new Error(\"generators, nodent and regenerator are not available\");case\"function\":return e._transpileFunc=e.transpile;default:throw new Error(\"bad transpiler: \"+o)}}function s(e,r){try{return new Function(\"(function*(){})()\")(),!0}catch(e){if(r)throw new Error(\"generators not supported\")}}function o(e,r){try{return new Function(\"(async function(){})()\")(),!0}catch(e){if(r)throw new Error(\"es7 async functions not supported\")}}function i(r,t){try{if(!u){u=e(\"regenerator\"),u.runtime()}return r.async&&r.async!==!0||(r.async=\"es7\"),n}catch(e){if(t)throw new Error(\"regenerator not available\")}}function n(e){return u.compile(e).code}function l(r,t){try{if(!f){f=e(\"nodent\")({log:!1,dontInstallRequireHook:!0})}return\"es7\"!=r.async&&(r.async&&r.async!==!0&&console.warn(\"nodent transpiles only es7 async functions\"),r.async=\"es7\"),c}catch(e){if(t)throw new Error(\"nodent not available\")}}function c(e){return f.compile(e,\"\",{promises:!0,sourcemap:!1}).code}function h(e,r){function t(e,r,a){function o(a){function o(a,o){if(a)return r(a);if(!s._refs[i]&&!s._schemas[i])try{s.addSchema(o,i)}catch(e){return void r(e)}t(e,r)}var i=a.missingSchema;if(s._refs[i]||s._schemas[i])return r(new Error(\"Schema \"+i+\" is loaded but \"+a.missingRef+\" cannot be resolved\"));var n=s._loadingSchemas[i];n?\"function\"==typeof n?s._loadingSchemas[i]=[n,o]:n[n.length]=o:(s._loadingSchemas[i]=o,s._opts.loadSchema(i,function(e,r){var t=s._loadingSchemas[i];if(delete s._loadingSchemas[i],\"function\"==typeof t)t(e,r);else for(var a=0;a<t.length;a++)t[a](e,r)}))}function i(e,t){if(!a)return r(e,t);setTimeout(function(){r(e,t)})}var n;try{n=s.compile(e)}catch(e){return void(e.missingSchema?o(e):i(e))}i(null,n)}var a,s=this;try{a=this._addSchema(e)}catch(e){return void setTimeout(function(){r(e)})}if(a.validate)setTimeout(function(){r(null,a.validate)});else{if(\"function\"!=typeof this._opts.loadSchema)throw new Error(\"options.loadSchema should be a function\");t(e,r,!0)}}r.exports={setup:a,compile:h};var u,f,d=e(\"./compile/util\"),p={\"*\":s,\"co*\":s,es7:o},m={nodent:l,regenerator:i},v=[{async:\"co*\"},{async:\"es7\",transpile:\"nodent\"},{async:\"co*\",transpile:\"regenerator\"}]},{\"./compile/util\":11}],2:[function(e,r,t){\"use strict\";var a=r.exports=function(){this._cache={}};a.prototype.put=function(e,r){this._cache[e]=r},a.prototype.get=function(e){return this._cache[e]},a.prototype.del=function(e){delete this._cache[e]},a.prototype.clear=function(){this._cache={}}},{}],3:[function(e,r,t){\"use strict\";r.exports={$ref:e(\"../dotjs/ref\"),allOf:e(\"../dotjs/allOf\"),anyOf:e(\"../dotjs/anyOf\"),dependencies:e(\"../dotjs/dependencies\"),enum:e(\"../dotjs/enum\"),format:e(\"../dotjs/format\"),items:e(\"../dotjs/items\"),maximum:e(\"../dotjs/_limit\"),minimum:e(\"../dotjs/_limit\"),maxItems:e(\"../dotjs/_limitItems\"),minItems:e(\"../dotjs/_limitItems\"),maxLength:e(\"../dotjs/_limitLength\"),minLength:e(\"../dotjs/_limitLength\"),maxProperties:e(\"../dotjs/_limitProperties\"),minProperties:e(\"../dotjs/_limitProperties\"),multipleOf:e(\"../dotjs/multipleOf\"),not:e(\"../dotjs/not\"),oneOf:e(\"../dotjs/oneOf\"),pattern:e(\"../dotjs/pattern\"),properties:e(\"../dotjs/properties\"),required:e(\"../dotjs/required\"),uniqueItems:e(\"../dotjs/uniqueItems\"),validate:e(\"../dotjs/validate\")}},{\"../dotjs/_limit\":14,\"../dotjs/_limitItems\":15,\"../dotjs/_limitLength\":16,\"../dotjs/_limitProperties\":17,\"../dotjs/allOf\":18,\"../dotjs/anyOf\":19,\"../dotjs/dependencies\":22,\"../dotjs/enum\":23,\"../dotjs/format\":24,\"../dotjs/items\":25,\"../dotjs/multipleOf\":26,\"../dotjs/not\":27,\"../dotjs/oneOf\":28,\"../dotjs/pattern\":29,\"../dotjs/properties\":31,\"../dotjs/ref\":32,\"../dotjs/required\":33,\"../dotjs/uniqueItems\":35,\"../dotjs/validate\":36}],4:[function(e,r,t){\"use strict\";r.exports=function e(r,t){if(r===t)return!0;var a,s=Array.isArray(r),o=Array.isArray(t);if(s&&o){if(r.length!=t.length)return!1;for(a=0;a<r.length;a++)if(!e(r[a],t[a]))return!1;return!0}if(s!=o)return!1;if(r&&t&&\"object\"==typeof r&&\"object\"==typeof t){var i=Object.keys(r);if(i.length!==Object.keys(t).length)return!1;var n=r instanceof Date,l=t instanceof Date;if(n&&l)return r.getTime()==t.getTime();if(n!=l)return!1;var c=r instanceof RegExp,h=t instanceof RegExp;if(c&&h)return r.toString()==t.toString();if(c!=h)return!1;for(a=0;a<i.length;a++)if(!Object.prototype.hasOwnProperty.call(t,i[a]))return!1;for(a=0;a<i.length;a++)if(!e(r[i[a]],t[i[a]]))return!1;return!0}return!1}},{}],5:[function(e,r,t){\"use strict\";function a(e){e=\"full\"==e?\"full\":\"fast\";var r=d.copy(a[e]);for(var t in a.compare)r[t]={validate:r[t],compare:a.compare[t]};return r}function s(e){var r=e.match(p);if(!r)return!1;var t=+r[1],a=+r[2];return t>=1&&t<=12&&a>=1&&a<=m[t]}function o(e,r){var t=e.match(v);if(!t)return!1;var a=t[1],s=t[2],o=t[3],i=t[5];return a<=23&&s<=59&&o<=59&&(!r||i)}function i(e){var r=e.split(w);return 2==r.length&&s(r[0])&&o(r[1],!0)}function n(e){return e.length<=255&&y.test(e)}function l(e){return j.test(e)&&g.test(e)}function c(e){try{return new RegExp(e),!0}catch(e){return!1}}function h(e,r){if(e&&r)return e>r?1:e<r?-1:e===r?0:void 0}function u(e,r){if(e&&r&&(e=e.match(v),r=r.match(v),e&&r))return e=e[1]+e[2]+e[3]+(e[4]||\"\"),r=r[1]+r[2]+r[3]+(r[4]||\"\"),e>r?1:e<r?-1:e===r?0:void 0}function f(e,r){if(e&&r){e=e.split(w),r=r.split(w);var t=h(e[0],r[0]);if(void 0!==t)return t||u(e[1],r[1])}}var d=e(\"./util\"),p=/^\\d\\d\\d\\d-(\\d\\d)-(\\d\\d)$/,m=[0,31,29,31,30,31,30,31,31,30,31,30,31],v=/^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i,y=/^[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i,g=/^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?(?:\\#(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?$/i,P=/^(?:urn\\:uuid\\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,E=/^(?:\\/(?:[^~\\/]|~0|~1)*)*$|^\\#(?:\\/(?:[a-z0-9_\\-\\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,b=/^(?:0|[1-9][0-9]*)(?:\\#|(?:\\/(?:[^~\\/]|~0|~1)*)*)$/;r.exports=a,a.fast={date:/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,time:/^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\"date-time\":/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,uri:/^(?:[a-z][a-z0-9+-.]*)?(?:\\:|\\/)\\/?[^\\s]*$/i,email:/^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:y,ipv4:/^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,ipv6:/^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,regex:c,uuid:P,\"json-pointer\":E,\"relative-json-pointer\":b},a.full={date:s,time:o,\"date-time\":i,uri:l,email:/^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&''*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:n,ipv4:/^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,ipv6:/^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,regex:c,uuid:P,\"json-pointer\":E,\"relative-json-pointer\":b},a.compare={date:h,time:u,\"date-time\":f};var w=/t|\\s/i,j=/\\/|\\:/},{\"./util\":11}],6:[function(e,r,t){\"use strict\";function a(){if(void 0===d){try{d=e(\"js-beautify\").js_beautify}catch(e){d=!1}}}function s(e,r,t,n){function j(){var e=N.validate,r=e.apply(null,arguments);return j.errors=e.errors,r}function S(e,t,o,i){var n=!t||t&&t.schema==e;if(t.schema!=r.schema)return s.call(k,e,t,o,i);var v=e.$async===!0;v&&!q.transpile&&y.setup(q);var j=g({isTop:!0,schema:e,isRoot:n,baseId:i,root:t,schemaPath:\"\",errSchemaPath:\"#\",errorPath:'\"\"',RULES:H,validate:g,util:m,resolve:p,resolveRef:$,usePattern:R,useDefault:I,useCustomRule:A,opts:q,formats:F,self:k});j=f(D,h)+f(Q,l)+f(V,c)+f(U,u)+j,q.beautify&&(a(),d?j=d(j,q.beautify):console.error('\"npm install js-beautify\" to use beautify option'));var S,x,_=q._transpileFunc;try{x=v&&_?_(j):j;S=new Function(\"self\",\"RULES\",\"formats\",\"root\",\"refVal\",\"defaults\",\"customRules\",\"co\",\"equal\",\"ucs2length\",\"ValidationError\",x)(k,H,F,r,D,V,U,P,b,E,w),D[0]=S}catch(e){throw console.error(\"Error compiling schema, function code:\",x),e}return S.schema=e,S.errors=null,S.refs=L,S.refVal=D,S.root=n?S:t,v&&(S.$async=!0),T&&(S.sourceCode=j),q.sourceCode===!0&&(S.source={patterns:Q,defaults:V}),S}function $(e,a,o){a=p.url(e,a);var i,n,l=L[a];if(void 0!==l)return i=D[l],n=\"refVal[\"+l+\"]\",O(i,n);if(!o&&r.refs){var c=r.refs[a];if(void 0!==c)return i=r.refVal[c],n=x(a,i),O(i,n)}n=x(a);var h=p.call(k,S,r,a);if(!h){var u=t&&t[a];u&&(h=p.inlineRef(u,q.inlineRefs)?u:s.call(k,u,r,t,e))}return h?(_(a,h),O(h,n)):void 0}function x(e,r){var t=D.length;return D[t]=r,L[e]=t,\"refVal\"+t}function _(e,r){D[L[e]]=r}function O(e,r){return\"object\"==typeof e?{code:r,schema:e,inline:!0}:{code:r,$async:e&&e.$async}}function R(e){var r=C[e];return void 0===r&&(r=C[e]=Q.length,Q[r]=e),\"pattern\"+r}function I(e){switch(typeof e){case\"boolean\":case\"number\":return\"\"+e;case\"string\":return m.toQuotedString(e);case\"object\":if(null===e)return\"null\";var r=v(e),t=z[r];return void 0===t&&(t=z[r]=V.length,V[t]=e),\"default\"+t}}function A(e,r,t,a){var s=e.definition.validateSchema;if(s&&k._opts.validateSchema!==!1){if(!s(r)){var o=\"keyword schema is invalid: \"+k.errorsText(s.errors);if(\"log\"!=k._opts.validateSchema)throw new Error(o);console.error(o)}}var i,n=e.definition.compile,l=e.definition.inline,c=e.definition.macro;n?i=n.call(k,r,t,a):c?(i=c.call(k,r,t,a),q.validateSchema!==!1&&k.validateSchema(i,!0)):i=l?l.call(k,a,e.keyword,r,t):e.definition.validate;var h=U.length;return U[h]=i,{code:\"customRule\"+h,validate:i}}var k=this,q=this._opts,D=[void 0],L={},Q=[],C={},V=[],z={},U=[],T=q.sourceCode!==!1;r=r||{schema:e,refVal:D,refs:L};var M=o.call(this,e,r,n),N=this._compilations[M.index];if(M.compiling)return N.callValidate=j;var F=this._formats,H=this.RULES;try{var J=S(e,r,t,n);N.validate=J;var G=N.callValidate;return G&&(G.schema=J.schema,G.errors=null,G.refs=J.refs,G.refVal=J.refVal,G.root=J.root,G.$async=J.$async,T&&(G.sourceCode=J.sourceCode)),J}finally{i.call(this,e,r,n)}}function o(e,r,t){var a=n.call(this,e,r,t);return a>=0?{index:a,compiling:!0}:(a=this._compilations.length,this._compilations[a]={schema:e,root:r,baseId:t},{index:a,compiling:!1})}function i(e,r,t){var a=n.call(this,e,r,t);a>=0&&this._compilations.splice(a,1)}function n(e,r,t){for(var a=0;a<this._compilations.length;a++){var s=this._compilations[a];if(s.schema==e&&s.root==r&&s.baseId==t)return a}return-1}function l(e,r){return\"var pattern\"+e+\" = new RegExp(\"+m.toQuotedString(r[e])+\");\"}function c(e){return\"var default\"+e+\" = defaults[\"+e+\"];\"}function h(e,r){return r[e]?\"var refVal\"+e+\" = refVal[\"+e+\"];\":\"\"}function u(e){return\"var customRule\"+e+\" = customRules[\"+e+\"];\"}function f(e,r){if(!e.length)return\"\";for(var t=\"\",a=0;a<e.length;a++)t+=r(a,e);return t}var d,p=e(\"./resolve\"),m=e(\"./util\"),v=e(\"json-stable-stringify\"),y=e(\"../async\"),g=e(\"../dotjs/validate\"),P=e(\"co\"),E=m.ucs2length,b=e(\"./equal\"),w=e(\"./validation_error\");r.exports=s},{\"../async\":1,\"../dotjs/validate\":36,\"./equal\":4,\"./resolve\":7,\"./util\":11,\"./validation_error\":12,co:47,\"json-stable-stringify\":48}],7:[function(e,r,t){\"use strict\";function a(e,r,t){var o=this._refs[t];if(\"string\"==typeof o){if(!this._refs[o])return a.call(this,e,r,o);o=this._refs[o]}if(o=o||this._schemas[t],o instanceof g)return n(o.schema,this._opts.inlineRefs)?o.schema:o.validate||this._compile(o);var i,l,c,h=s.call(this,r,t);return h&&(i=h.schema,r=h.root,c=h.baseId),i instanceof g?l=i.validate||e.call(this,i.schema,r,void 0,c):i&&(l=n(i,this._opts.inlineRefs)?i:e.call(this,i,r,void 0,c)),l}function s(e,r){var t=m.parse(r,!1,!0),a=u(t),s=h(e.schema.id);if(a!==s){var n=f(a),l=this._refs[n];if(\"string\"==typeof l)return o.call(this,e,l,t);if(l instanceof g)l.validate||this._compile(l),e=l;else{if(l=this._schemas[n],!(l instanceof g))return;if(l.validate||this._compile(l),n==f(r))return{schema:l,root:e,baseId:s};e=l}if(!e.schema)return;s=h(e.schema.id)}return i.call(this,t,s,e.schema,e)}function o(e,r,t){var a=s.call(this,e,r);if(a){var o=a.schema,n=a.baseId;return e=a.root,o.id&&(n=d(n,o.id)),i.call(this,t,n,o,e)}}function i(e,r,t,a){if(e.hash=e.hash||\"\",\"#/\"==e.hash.slice(0,2)){for(var o=e.hash.split(\"/\"),i=1;i<o.length;i++){var n=o[i];if(n){if(n=y.unescapeFragment(n),t=t[n],!t)break;if(t.id&&!P[n]&&(r=d(r,t.id)),t.$ref){var l=d(r,t.$ref),c=s.call(this,a,l);c&&(t=c.schema,a=c.root,r=c.baseId)}}}return t&&t!=a.schema?{schema:t,root:a,baseId:r}:void 0}}function n(e,r){return r!==!1&&(void 0===r||r===!0?l(e):r?c(e)<=r:void 0)}function l(e){var r;if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(r=e[t],\"object\"==typeof r&&!l(r))return!1}else for(var a in e){if(\"$ref\"==a)return!1;if(r=e[a],\"object\"==typeof r&&!l(r))return!1}return!0}function c(e){var r,t=0;if(Array.isArray(e)){for(var a=0;a<e.length;a++)if(r=e[a],\"object\"==typeof r&&(t+=c(r)),t==1/0)return 1/0}else for(var s in e){if(\"$ref\"==s)return 1/0;if(E[s])t++;else if(r=e[s],\"object\"==typeof r&&(t+=c(r)+1),t==1/0)return 1/0}return t}function h(e,r){return r!==!1&&(e=f(e)),u(m.parse(e,!1,!0))}function u(e){var r=e.protocol||\"//\"==e.href.slice(0,2)?\"//\":\"\";return(e.protocol||\"\")+r+(e.host||\"\")+(e.path||\"\")+\"#\"}function f(e){return e?e.replace(b,\"\"):\"\"}function d(e,r){return r=f(r),m.resolve(e,r)}function p(e){function r(e,t,s){if(Array.isArray(e))for(var o=0;o<e.length;o++)r.call(this,e[o],t+\"/\"+o,s);else if(e&&\"object\"==typeof e){if(\"string\"==typeof e.id){var i=s=s?m.resolve(s,e.id):e.id;i=f(i);var n=this._refs[i];if(\"string\"==typeof n&&(n=this._refs[n]),n&&n.schema){if(!v(e,n.schema))throw new Error('id \"'+i+'\" resolves to more than one schema')}else if(i!=f(t))if(\"#\"==i[0]){if(a[i]&&!v(e,a[i]))throw new Error('id \"'+i+'\" resolves to more than one schema');a[i]=e}else this._refs[i]=t}for(var l in e)r.call(this,e[l],t+\"/\"+y.escapeFragment(l),s)}}var t=f(e.id),a={};return r.call(this,e,h(t,!1),t),a}var m=e(\"url\"),v=e(\"./equal\"),y=e(\"./util\"),g=e(\"./schema_obj\");r.exports=a,a.normalizeId=f,a.fullPath=h,a.url=d,a.ids=p,a.inlineRef=n,a.schema=s;var P=y.toHash([\"properties\",\"patternProperties\",\"enum\",\"dependencies\",\"definitions\"]),E=y.toHash([\"type\",\"format\",\"pattern\",\"maxLength\",\"minLength\",\"maxProperties\",\"minProperties\",\"maxItems\",\"minItems\",\"maximum\",\"minimum\",\"uniqueItems\",\"multipleOf\",\"required\",\"enum\"]),b=/#\\/?$/},{\"./equal\":4,\"./schema_obj\":9,\"./util\":11,url:45}],8:[function(e,r,t){\"use strict\";var a=e(\"./_rules\"),s=e(\"./util\").toHash;r.exports=function(){var e=[{type:\"number\",rules:[\"maximum\",\"minimum\",\"multipleOf\"]},{type:\"string\",rules:[\"maxLength\",\"minLength\",\"pattern\",\"format\"]},{type:\"array\",rules:[\"maxItems\",\"minItems\",\"uniqueItems\",\"items\"]},{type:\"object\",rules:[\"maxProperties\",\"minProperties\",\"required\",\"dependencies\",\"properties\"]},{rules:[\"$ref\",\"enum\",\"not\",\"anyOf\",\"oneOf\",\"allOf\"]}],r=[\"type\",\"additionalProperties\",\"patternProperties\"],t=[\"additionalItems\",\"$schema\",\"id\",\"title\",\"description\",\"default\"],o=[\"number\",\"integer\",\"string\",\"array\",\"object\",\"boolean\",\"null\"];return e.all=s(r),e.forEach(function(t){t.rules=t.rules.map(function(t){return r.push(t),e.all[t]={keyword:t,code:a[t]}})}),e.keywords=s(r.concat(t)),e.types=s(o),e.custom={},e}},{\"./_rules\":3,\"./util\":11}],9:[function(e,r,t){\"use strict\";function a(e){s.copy(e,this)}var s=e(\"./util\");r.exports=a},{\"./util\":11}],10:[function(e,r,t){\"use strict\";r.exports=function(e){for(var r,t=0,a=e.length,s=0;s<a;)t++,r=e.charCodeAt(s++),r>=55296&&r<=56319&&s<a&&(r=e.charCodeAt(s),56320==(64512&r)&&s++);return t}},{}],11:[function(e,r,t){\"use strict\";function a(e,r){r=r||{};for(var t in e)r[t]=e[t];return r}function s(e,r,t){var a=t?\" !== \":\" === \",s=t?\" || \":\" && \",o=t?\"!\":\"\",i=t?\"\":\"!\";switch(e){case\"null\":return r+a+\"null\";case\"array\":return o+\"Array.isArray(\"+r+\")\";case\"object\":return\"(\"+o+r+s+\"typeof \"+r+a+'\"object\"'+s+i+\"Array.isArray(\"+r+\"))\";case\"integer\":return\"(typeof \"+r+a+'\"number\"'+s+i+\"(\"+r+\" % 1)\"+s+r+a+r+\")\";default:return\"typeof \"+r+a+'\"'+e+'\"'}}function o(e,r){switch(e.length){case 1:return s(e[0],r,!0);default:var t=\"\",a=n(e);a.array&&a.object&&(t=a.null?\"(\":\"(!\"+r+\" || \",t+=\"typeof \"+r+' !== \"object\")',delete a.null,delete a.array,delete a.object),a.number&&delete a.integer;for(var o in a)t+=(t?\" && \":\"\")+s(o,r,!0);return t}}function i(e,r){if(Array.isArray(r)){for(var t=[],a=0;a<r.length;a++){var s=r[a];$[s]?t[t.length]=s:\"array\"===e&&\"array\"===s&&(t[t.length]=s)}if(t.length)return t}else{if($[r])return[r];if(\"array\"===e&&\"array\"===r)return[\"array\"]}}function n(e){for(var r={},t=0;t<e.length;t++)r[e[t]]=!0;return r}function l(e){return\"number\"==typeof e?\"[\"+e+\"]\":x.test(e)?\".\"+e:\"['\"+c(e)+\"']\"}function c(e){return e.replace(_,\"\\\\$&\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\f/g,\"\\\\f\").replace(/\\t/g,\"\\\\t\")}function h(e,r){r+=\"[^0-9]\";var t=e.match(new RegExp(r,\"g\"));return t?t.length:0}function u(e,r,t){return r+=\"([^0-9])\",t=t.replace(/\\$/g,\"$$$$\"),e.replace(new RegExp(r,\"g\"),t+\"$1\")}function f(e){return e.replace(O,\"\").replace(R,\"\").replace(I,\"if (!($1))\")}function d(e,r){var t=e.match(A);return t&&2===t.length?r?e.replace(q,\"\").replace(Q,C):e.replace(k,\"\").replace(D,L):e}function p(e,r){for(var t in e)if(r[t])return!0}function m(e,r,t){for(var a in e)if(a!=t&&r[a])return!0}function v(e){return\"'\"+c(e)+\"'\"}function y(e,r,t,a){return E(e,t?\"'/' + \"+r+(a?\"\":\".replace(/~/g, '~0').replace(/\\\\//g, '~1')\"):a?\"'[' + \"+r+\" + ']'\":\"'[\\\\'' + \"+r+\" + '\\\\']'\")}function g(e,r,t){return E(e,v(t?\"/\"+j(r):l(r)))}function P(e,r,t){var a,s,o,i;if(\"\"===e)return\"rootData\";if(\"/\"==e[0]){if(!V.test(e))throw new Error(\"Invalid JSON-pointer: \"+e);s=e,o=\"rootData\"}else{if(i=e.match(z),!i)throw new Error(\"Invalid JSON-pointer: \"+e);if(a=+i[1],s=i[2],\"#\"==s){if(a>=r)throw new Error(\"Cannot access property/index \"+a+\" levels up, current level is \"+r);return t[r-a]}if(a>r)throw new Error(\"Cannot access data \"+a+\" levels up, current level is \"+r);if(o=\"data\"+(r-a||\"\"),!s)return o}for(var n=o,c=s.split(\"/\"),h=0;h<c.length;h++){var u=c[h];u&&(o+=l(S(u)),n+=\" && \"+o)}return n}function E(e,r){return'\"\"'==e?r:(e+\" + \"+r).replace(/' \\+ '/g,\"\")}function b(e){return S(decodeURIComponent(e))}function w(e){return encodeURIComponent(j(e))}function j(e){return e.replace(/~/g,\"~0\").replace(/\\//g,\"~1\")}function S(e){return e.replace(/~1/g,\"/\").replace(/~0/g,\"~\")}r.exports={copy:a,checkDataType:s,checkDataTypes:o,coerceToTypes:i,toHash:n,getProperty:l,escapeQuotes:c,ucs2length:e(\"./ucs2length\"),varOccurences:h,varReplace:u,cleanUpCode:f,cleanUpVarErrors:d,schemaHasRules:p,schemaHasRulesExcept:m,stableStringify:e(\"json-stable-stringify\"),toQuotedString:v,getPathExpr:y,getPath:g,getData:P,unescapeFragment:b,escapeFragment:w,escapeJsonPointer:j};var $=n([\"string\",\"number\",\"integer\",\"boolean\",\"null\"]),x=/^[a-z$_][a-z$_0-9]*$/i,_=/'|\\\\/g,O=/else\\s*{\\s*}/g,R=/if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g,I=/if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g,A=/[^v\\.]errors/g,k=/var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,q=/var errors = 0;|var vErrors = null;/g,D=\"return errors === 0;\",L=\"validate.errors = null; return true;\",Q=/if \\(errors === 0\\) return true;\\s*else throw new ValidationError\\(vErrors\\);/,C=\"return true;\",V=/^\\/(?:[^~]|~0|~1)*$/,z=/^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/},{\"./ucs2length\":10,\"json-stable-stringify\":48}],12:[function(e,r,t){\"use strict\";function a(e){this.message=\"validation failed\",this.errors=e,this.ajv=this.validation=!0}r.exports=a,a.prototype=Object.create(Error.prototype),a.prototype.constructor=a},{}],13:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s;if(a+=\"var \"+u+\" = undefined;\",e.opts.format===!1)return a+=\" \"+u+\" = true; \";var f=e.schema.format,d=e.opts.v5&&f.$data,p=\"\";if(d){var m=e.util.getData(f.$data,o,e.dataPathArr),v=\"format\"+s,y=\"compare\"+s;a+=\" var \"+v+\" = formats[\"+m+\"] , \"+y+\" = \"+v+\" && \"+v+\".compare;\"}else{var v=e.formats[f];if(!v||!v.compare)return a+=\"  \"+u+\" = true; \";var y=\"formats\"+e.util.getProperty(f)+\".compare\"}var g,P=\"formatMaximum\"==r,E=\"formatExclusive\"+(P?\"Maximum\":\"Minimum\"),b=e.schema[E],w=e.opts.v5&&b&&b.$data,j=P?\"<\":\">\",S=\"result\"+s,$=e.opts.v5&&i&&i.$data;if($?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",g=\"schema\"+s):g=i,w){var x=e.util.getData(b.$data,o,e.dataPathArr),_=\"exclusive\"+s,O=\"op\"+s,R=\"' + \"+O+\" + '\";a+=\" var schemaExcl\"+s+\" = \"+x+\"; \",x=\"schemaExcl\"+s,a+=\" if (typeof \"+x+\" != 'boolean' && \"+x+\" !== undefined) { \"+u+\" = false; \";var t=E,I=I||[];I.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"_formatExclusiveLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: '\"+E+\" should be boolean' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var A=a;a=I.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+A+\"]); \":\" validate.errors = [\"+A+\"]; return false; \":\" var err = \"+A+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }  \",c&&(p+=\"}\",a+=\" else { \"),$&&(a+=\" if (\"+g+\" === undefined) \"+u+\" = true; else if (typeof \"+g+\" != 'string') \"+u+\" = false; else { \",p+=\"}\"),d&&(a+=\" if (!\"+y+\") \"+u+\" = true; else { \",p+=\"}\"),a+=\" var \"+S+\" = \"+y+\"(\"+h+\",  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" ); if (\"+S+\" === undefined) \"+u+\" = false; var \"+_+\" = \"+x+\" === true; if (\"+u+\" === undefined) { \"+u+\" = \"+_+\" ? \"+S+\" \"+j+\" 0 : \"+S+\" \"+j+\"= 0; } if (!\"+u+\") var op\"+s+\" = \"+_+\" ? '\"+j+\"' : '\"+j+\"=';\"}else{var _=b===!0,R=j;_||(R+=\"=\");var O=\"'\"+R+\"'\";$&&(a+=\" if (\"+g+\" === undefined) \"+u+\" = true; else if (typeof \"+g+\" != 'string') \"+u+\" = false; else { \",p+=\"}\"),d&&(a+=\" if (!\"+y+\") \"+u+\" = true; else { \",p+=\"}\"),a+=\" var \"+S+\" = \"+y+\"(\"+h+\",  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" ); if (\"+S+\" === undefined) \"+u+\" = false; if (\"+u+\" === undefined) \"+u+\" = \"+S+\" \"+j,_||(a+=\"=\"),a+=\" 0;\"}a+=\"\"+p+\"if (!\"+u+\") { \";var t=r,I=I||[];I.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"_formatLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { comparison: \"+O+\", limit:  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" , exclusive: \"+_+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should be \"+R+' \"',a+=$?\"' + \"+g+\" + '\":\"\"+e.util.escapeQuotes(i),a+=\"\\\"' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=$?\"validate.schema\"+n:\"\"+e.util.toQuotedString(i),a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var A=a;return a=I.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+A+\"]); \":\" validate.errors = [\"+A+\"]; return false; \":\" var err = \"+A+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"}\"}},{}],14:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maximum\"==r,p=d?\"exclusiveMaximum\":\"exclusiveMinimum\",m=e.schema[p],v=e.opts.v5&&m&&m.$data,y=d?\"<\":\">\",g=d?\">\":\"<\";if(v){var P=e.util.getData(m.$data,i,e.dataPathArr),E=\"exclusive\"+o,b=\"op\"+o,w=\"' + \"+b+\" + '\";s+=\" var schemaExcl\"+o+\" = \"+P+\"; \",P=\"schemaExcl\"+o,s+=\" var exclusive\"+o+\"; if (typeof \"+P+\" != 'boolean' && typeof \"+P+\" != 'undefined') { \";var t=p,j=j||[];j.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_exclusiveLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: {} \",e.opts.messages!==!1&&(s+=\" , message: '\"+p+\" should be boolean' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var S=s;s=j.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } else if( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" ((exclusive\"+o+\" = \"+P+\" === true) ? \"+u+\" \"+g+\"= \"+a+\" : \"+u+\" \"+g+\" \"+a+\") || \"+u+\" !== \"+u+\") { var op\"+o+\" = exclusive\"+o+\" ? '\"+y+\"' : '\"+y+\"=';\"}else{var E=m===!0,w=y;E||(w+=\"=\");var b=\"'\"+w+\"'\";s+=\" if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" \"+u+\" \"+g,E&&(s+=\"=\"),s+=\" \"+a+\" || \"+u+\" !== \"+u+\") {\"}var t=r,j=j||[];j.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { comparison: \"+b+\", limit: \"+a+\", exclusive: \"+E+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \"+w+\" \",s+=f?\"' + \"+a:\"\"+n+\"'\"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var S=s;return s=j.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \",h&&(s+=\" else { \"),s}},{}],15:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxItems\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" \"+u+\".length \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limitItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT have \",s+=\"maxItems\"==r?\"more\":\"less\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" items' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],16:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxLength\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=e.opts.unicode===!1?\" \"+u+\".length \":\" ucs2length(\"+u+\") \",s+=\" \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limitLength\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT be \",s+=\"maxLength\"==r?\"longer\":\"shorter\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" characters' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,\ns+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],17:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxProperties\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" Object.keys(\"+u+\").length \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"_limitProperties\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT have \",s+=\"maxProperties\"==r?\"more\":\"less\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" properties' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],18:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.schema[r],s=e.schemaPath+e.util.getProperty(r),o=e.errSchemaPath+\"/\"+r,i=!e.opts.allErrors,n=e.util.copy(e),l=\"\";n.level++;var c=\"valid\"+n.level,h=n.baseId,u=!0,f=a;if(f)for(var d,p=-1,m=f.length-1;p<m;)d=f[p+=1],e.util.schemaHasRules(d,e.RULES.all)&&(u=!1,n.schema=d,n.schemaPath=s+\"[\"+p+\"]\",n.errSchemaPath=o+\"/\"+p,t+=\"  \"+e.validate(n)+\" \",n.baseId=h,i&&(t+=\" if (\"+c+\") { \",l+=\"}\"));return i&&(t+=u?\" if (true) { \":\" \"+l.slice(0,-1)+\" \"),t=e.util.cleanUpCode(t)}},{}],19:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level;if(i.every(function(r){return e.util.schemaHasRules(r,e.RULES.all)})){var v=d.baseId;a+=\" var \"+f+\" = errors; var \"+u+\" = false;  \";var y=e.compositeRule;e.compositeRule=d.compositeRule=!0;var g=i;if(g)for(var P,E=-1,b=g.length-1;E<b;)P=g[E+=1],d.schema=P,d.schemaPath=n+\"[\"+E+\"]\",d.errSchemaPath=l+\"/\"+E,a+=\"  \"+e.validate(d)+\" \",d.baseId=v,a+=\" \"+u+\" = \"+u+\" || \"+m+\"; if (!\"+u+\") { \",p+=\"}\";e.compositeRule=d.compositeRule=y,a+=\" \"+p+\" if (!\"+u+\") {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"anyOf\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should match some schema in anyOf' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = \"+f+\"; if (vErrors !== null) { if (\"+f+\") vErrors.length = \"+f+\"; else vErrors = null; } \",e.opts.allErrors&&(a+=\" } \"),a=e.util.cleanUpCode(a)}else c&&(a+=\" if (true) { \");return a}},{}],20:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;f&&(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \"),f||(a+=\" var schema\"+s+\" = validate.schema\"+n+\";\"),a+=\"var \"+u+\" = equal(\"+h+\", schema\"+s+\"); if (!\"+u+\") {   \";var d=d||[];d.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"constant\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should be equal to constant' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var p=a;return a=d.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+p+\"]); \":\" validate.errors = [\"+p+\"]; return false; \":\" var err = \"+p+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }\"}},{}],21:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=\"valid\"+o,d=\"errs__\"+o,p=e.opts.v5&&n&&n.$data;p?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var m,v,y,g,P,E=this,b=\"definition\"+o,w=E.definition;if(p&&w.$data){P=\"keywordValidate\"+o;var j=w.validateSchema;s+=\" var \"+b+\" = RULES.custom['\"+r+\"'].definition; var \"+P+\" = \"+b+\".validate;\"}else g=e.useCustomRule(E,n,e.schema,e),a=\"validate.schema\"+l,P=g.code,m=w.compile,v=w.inline,y=w.macro;var S=P+\".errors\",$=\"i\"+o,x=\"ruleErr\"+o,_=w.async;if(_&&!e.async)throw new Error(\"async keyword in sync schema\");if(v||y||(s+=\"\"+S+\" = null;\"),s+=\"var \"+d+\" = errors;var \"+f+\";\",j&&(s+=\" \"+f+\" = \"+b+\".validateSchema(\"+a+\"); if (\"+f+\") {\"),v)s+=w.statements?\" \"+g.validate+\" \":\" \"+f+\" = \"+g.validate+\"; \";else if(y){var O=e.util.copy(e);O.level++;var R=\"valid\"+O.level;O.schema=g.validate,O.schemaPath=\"\";var I=e.compositeRule;e.compositeRule=O.compositeRule=!0;var A=e.validate(O).replace(/validate\\.schema/g,P);e.compositeRule=O.compositeRule=I,s+=\" \"+A}else{var k=k||[];k.push(s),s=\"\",s+=\"  \"+P+\".call( \",s+=e.opts.passContext?\"this\":\"self\",s+=m||w.schema===!1?\" , \"+u+\" \":\" , \"+a+\" , \"+u+\" , validate.schema\"+e.schemaPath+\" \",s+=\" , (dataPath || '')\",'\"\"'!=e.errorPath&&(s+=\" + \"+e.errorPath);var q=i?\"data\"+(i-1||\"\"):\"parentData\",D=i?e.dataPathArr[i]:\"parentDataProperty\";s+=\" , \"+q+\" , \"+D+\" , rootData )  \";var L=s;s=k.pop(),w.errors===!1?(s+=\" \"+f+\" = \",_&&(s+=\"\"+e.yieldAwait),s+=\"\"+L+\"; \"):_?(S=\"customErrors\"+o,s+=\" var \"+S+\" = null; try { \"+f+\" = \"+e.yieldAwait+L+\"; } catch (e) { \"+f+\" = false; if (e instanceof ValidationError) \"+S+\" = e.errors; else throw e; } \"):s+=\" \"+S+\" = null; \"+f+\" = \"+L+\"; \"}if(w.modifying&&(s+=\" \"+u+\" = \"+q+\"[\"+D+\"];\"),j&&(s+=\" }\"),w.valid)h&&(s+=\" if (true) { \");else{s+=\" if ( \",void 0===w.valid?(s+=\" !\",s+=y?\"\"+R:\"\"+f):s+=\" \"+!w.valid+\" \",s+=\") { \",t=E.keyword;var k=k||[];k.push(s),s=\"\";var k=k||[];k.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"custom\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { keyword: '\"+E.keyword+\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should pass \\\"\"+E.keyword+\"\\\" keyword validation' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var Q=s;s=k.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+Q+\"]); \":\" validate.errors = [\"+Q+\"]; return false; \":\" var err = \"+Q+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \";var C=s;s=k.pop(),v?w.errors?\"full\"!=w.errors&&(s+=\"  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\"; if (\"+x+\".schemaPath === undefined) { \"+x+'.schemaPath = \"'+c+'\"; } ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } \"):w.errors===!1?s+=\" \"+C+\" \":(s+=\" if (\"+d+\" == errors) { \"+C+\" } else {  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\"; if (\"+x+\".schemaPath === undefined) { \"+x+'.schemaPath = \"'+c+'\"; } ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } } \"):y?(s+=\"   var err =   \",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"custom\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { keyword: '\"+E.keyword+\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should pass \\\"\"+E.keyword+\"\\\" keyword validation' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \",s+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",!e.compositeRule&&h&&(s+=e.async?\" throw new ValidationError(vErrors); \":\" validate.errors = vErrors; return false; \")):w.errors===!1?s+=\" \"+C+\" \":(s+=\" if (Array.isArray(\"+S+\")) { if (vErrors === null) vErrors = \"+S+\"; else vErrors = vErrors.concat(\"+S+\"); errors = vErrors.length;  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\";  \"+x+'.schemaPath = \"'+c+'\";  ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } } else { \"+C+\" } \"),s+=\" } \",h&&(s+=\" else { \")}return s}},{}],22:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"errs__\"+s,f=e.util.copy(e),d=\"\";f.level++;var p=\"valid\"+f.level,m={},v={};for(E in i){var y=i[E],g=Array.isArray(y)?v:m;g[E]=y}a+=\"var \"+u+\" = errors;\";var P=e.errorPath;a+=\"var missing\"+s+\";\";for(var E in v){if(g=v[E],a+=\" if (\"+h+e.util.getProperty(E)+\" !== undefined \",c){a+=\" && ( \";var b=g;if(b)for(var w,j=-1,S=b.length-1;j<S;){w=b[j+=1],j&&(a+=\" || \");var $=e.util.getProperty(w);a+=\" ( \"+h+$+\" === undefined && (missing\"+s+\" = \"+e.util.toQuotedString(e.opts.jsonPointers?w:$)+\") ) \"}a+=\")) {  \";var x=\"missing\"+s,_=\"' + \"+x+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(P,x,!0):P+\" + \"+x);var O=O||[];O.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"dependencies\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { property: '\"+e.util.escapeQuotes(E)+\"', missingProperty: '\"+_+\"', depsCount: \"+g.length+\", deps: '\"+e.util.escapeQuotes(1==g.length?g[0]:g.join(\", \"))+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should have \",a+=1==g.length?\"property \"+e.util.escapeQuotes(g[0]):\"properties \"+e.util.escapeQuotes(g.join(\", \")),a+=\" when property \"+e.util.escapeQuotes(E)+\" is present' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var R=a;a=O.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+R+\"]); \":\" validate.errors = [\"+R+\"]; return false; \":\" var err = \"+R+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}else{a+=\" ) { \";var I=g;if(I)for(var A,k=-1,q=I.length-1;k<q;){A=I[k+=1];var $=e.util.getProperty(A),_=e.util.escapeQuotes(A);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(P,A,e.opts.jsonPointers)),a+=\" if (\"+h+$+\" === undefined) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"dependencies\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { property: '\"+e.util.escapeQuotes(E)+\"', missingProperty: '\"+_+\"', depsCount: \"+g.length+\", deps: '\"+e.util.escapeQuotes(1==g.length?g[0]:g.join(\", \"))+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should have \",a+=1==g.length?\"property \"+e.util.escapeQuotes(g[0]):\"properties \"+e.util.escapeQuotes(g.join(\", \")),a+=\" when property \"+e.util.escapeQuotes(E)+\" is present' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } \"}}a+=\" }   \",c&&(d+=\"}\",a+=\" else { \")}e.errorPath=P;var D=f.baseId;for(var E in m){var y=m[E];e.util.schemaHasRules(y,e.RULES.all)&&(a+=\" \"+p+\" = true; if (\"+h+e.util.getProperty(E)+\" !== undefined) { \",f.schema=y,f.schemaPath=n+e.util.getProperty(E),f.errSchemaPath=l+\"/\"+e.util.escapeFragment(E),a+=\"  \"+e.validate(f)+\" \",f.baseId=D,a+=\" }  \",c&&(a+=\" if (\"+p+\") { \",d+=\"}\"))}return c&&(a+=\"   \"+d+\" if (\"+u+\" == errors) {\"),a=e.util.cleanUpCode(a)}},{}],23:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;f&&(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \");var d=\"i\"+s,p=\"schema\"+s;f||(a+=\" var \"+p+\" = validate.schema\"+n+\";\"),a+=\"var \"+u+\";\",f&&(a+=\" if (schema\"+s+\" === undefined) \"+u+\" = true; else if (!Array.isArray(schema\"+s+\")) \"+u+\" = false; else {\"),a+=\"\"+u+\" = false;for (var \"+d+\"=0; \"+d+\"<\"+p+\".length; \"+d+\"++) if (equal(\"+h+\", \"+p+\"[\"+d+\"])) { \"+u+\" = true; break; }\",f&&(a+=\"  }  \"),a+=\" if (!\"+u+\") {   \";var m=m||[];m.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"enum\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { allowedValues: schema\"+s+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should be equal to one of the allowed values' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var v=a;return a=m.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+v+\"]); \":\" validate.errors = [\"+v+\"]; return false; \":\" var err = \"+v+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }\",c&&(a+=\" else { \"),a}},{}],24:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\");if(e.opts.format===!1)return c&&(a+=\" if (true) { \"),a;var u,f=e.opts.v5&&i&&i.$data;f?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",u=\"schema\"+s):u=i;var d=e.opts.unknownFormats,p=Array.isArray(d);if(f){var m=\"format\"+s;a+=\" var \"+m+\" = formats[\"+u+\"]; var isObject\"+s+\" = typeof \"+m+\" == 'object' && !(\"+m+\" instanceof RegExp) && \"+m+\".validate; if (isObject\"+s+\") { \",e.async&&(a+=\" var async\"+s+\" = \"+m+\".async; \"),a+=\" \"+m+\" = \"+m+\".validate; } if (  \",f&&(a+=\" (\"+u+\" !== undefined && typeof \"+u+\" != 'string') || \"),a+=\" (\",(d===!0||p)&&(a+=\" (\"+u+\" && !\"+m+\" \",p&&(a+=\" && self._opts.unknownFormats.indexOf(\"+u+\") == -1 \"),a+=\") || \"),a+=\" (\"+m+\" && !(typeof \"+m+\" == 'function' ? \",a+=e.async?\" (async\"+s+\" ? \"+e.yieldAwait+\" \"+m+\"(\"+h+\") : \"+m+\"(\"+h+\")) \":\" \"+m+\"(\"+h+\") \",a+=\" : \"+m+\".test(\"+h+\"))))) {\"}else{var m=e.formats[i];if(!m){if(d===!0||p&&d.indexOf(i)==-1)throw new Error('unknown format \"'+i+'\" is used in schema at path \"'+e.errSchemaPath+'\"');return p||(console.warn('unknown format \"'+i+'\" ignored in schema at path \"'+e.errSchemaPath+'\"'),\"ignore\"!==d&&console.warn(\"In the next major version it will throw exception. See option unknownFormats for more information\")),c&&(a+=\" if (true) { \"),a}var v=\"object\"==typeof m&&!(m instanceof RegExp)&&m.validate;if(v){var y=m.async===!0;m=m.validate}if(y){if(!e.async)throw new Error(\"async format in sync schema\");var g=\"formats\"+e.util.getProperty(i)+\".validate\";a+=\" if (!(\"+e.yieldAwait+\" \"+g+\"(\"+h+\"))) { \"}else{a+=\" if (! \";var g=\"formats\"+e.util.getProperty(i);v&&(g+=\".validate\"),a+=\"function\"==typeof m?\" \"+g+\"(\"+h+\") \":\" \"+g+\".test(\"+h+\") \",a+=\") { \"}}var P=P||[];P.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"format\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { format:  \",a+=f?\"\"+u:\"\"+e.util.toQuotedString(i),a+=\"  } \",e.opts.messages!==!1&&(a+=\" , message: 'should match format \\\"\",a+=f?\"' + \"+u+\" + '\":\"\"+e.util.escapeQuotes(i),a+=\"\\\"' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=f?\"validate.schema\"+n:\"\"+e.util.toQuotedString(i),a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var E=a;return a=P.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+E+\"]); \":\" validate.errors = [\"+E+\"]; return false; \":\" var err = \"+E+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",c&&(a+=\" else { \"),a}},{}],25:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level,v=\"i\"+s,y=d.dataLevel=e.dataLevel+1,g=\"data\"+y,P=e.baseId;if(a+=\"var \"+f+\" = errors;var \"+u+\";\",Array.isArray(i)){var E=e.schema.additionalItems;if(E===!1){a+=\" \"+u+\" = \"+h+\".length <= \"+i.length+\"; \";var b=l;l=e.errSchemaPath+\"/additionalItems\",a+=\"  if (!\"+u+\") {   \";var w=w||[];w.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"additionalItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { limit: \"+i.length+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have more than \"+i.length+\" items' \"),e.opts.verbose&&(a+=\" , schema: false , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var j=a;a=w.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+j+\"]); \":\" validate.errors = [\"+j+\"]; return false; \":\" var err = \"+j+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",l=b,c&&(p+=\"}\",a+=\" else { \")}var S=i;if(S)for(var $,x=-1,_=S.length-1;x<_;)if($=S[x+=1],e.util.schemaHasRules($,e.RULES.all)){a+=\" \"+m+\" = true; if (\"+h+\".length > \"+x+\") { \";var O=h+\"[\"+x+\"]\";d.schema=$,d.schemaPath=n+\"[\"+x+\"]\",d.errSchemaPath=l+\"/\"+x,d.errorPath=e.util.getPathExpr(e.errorPath,x,e.opts.jsonPointers,!0),d.dataPathArr[y]=x;var R=e.validate(d);d.baseId=P,a+=e.util.varOccurences(R,g)<2?\" \"+e.util.varReplace(R,g,O)+\" \":\" var \"+g+\" = \"+O+\"; \"+R+\" \",a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}if(\"object\"==typeof E&&e.util.schemaHasRules(E,e.RULES.all)){d.schema=E,d.schemaPath=e.schemaPath+\".additionalItems\",d.errSchemaPath=e.errSchemaPath+\"/additionalItems\",a+=\" \"+m+\" = true; if (\"+h+\".length > \"+i.length+\") {  for (var \"+v+\" = \"+i.length+\"; \"+v+\" < \"+h+\".length; \"+v+\"++) { \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers,!0);var O=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var R=e.validate(d);d.baseId=P,a+=e.util.varOccurences(R,g)<2?\" \"+e.util.varReplace(R,g,O)+\" \":\" var \"+g+\" = \"+O+\"; \"+R+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" } }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}}else if(e.util.schemaHasRules(i,e.RULES.all)){d.schema=i,d.schemaPath=n,d.errSchemaPath=l,a+=\"  for (var \"+v+\" = 0; \"+v+\" < \"+h+\".length; \"+v+\"++) { \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers,!0);var O=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var R=e.validate(d);d.baseId=P,a+=e.util.varOccurences(R,g)<2?\" \"+e.util.varReplace(R,g,O)+\" \":\" var \"+g+\" = \"+O+\"; \"+R+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}return c&&(a+=\" \"+p+\" if (\"+f+\" == errors) {\"),a=e.util.cleanUpCode(a)}},{}],26:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n,s+=\"var division\"+o+\";if (\",f&&(s+=\" \"+a+\" !== undefined && ( typeof \"+a+\" != 'number' || \"),s+=\" (division\"+o+\" = \"+u+\" / \"+a+\", \",s+=e.opts.multipleOfPrecision?\" Math.abs(Math.round(division\"+o+\") - division\"+o+\") > 1e-\"+e.opts.multipleOfPrecision+\" \":\" division\"+o+\" !== parseInt(division\"+o+\") \",s+=\" ) \",f&&(s+=\"  )  \"),s+=\" ) {   \";var d=d||[];d.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"multipleOf\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { multipleOf: \"+a+\" } \",e.opts.messages!==!1&&(s+=\" , message: 'should be multiple of \",s+=f?\"' + \"+a:\"\"+n+\"'\"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var p=s;return s=d.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+p+\"]); \":\" validate.errors = [\"+p+\"]; return false; \":\" var err = \"+p+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],27:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"errs__\"+s,f=e.util.copy(e);f.level++;var d=\"valid\"+f.level;if(e.util.schemaHasRules(i,e.RULES.all)){f.schema=i,f.schemaPath=n,f.errSchemaPath=l,a+=\" var \"+u+\" = errors;  \";var p=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.createErrors=!1;var m;f.opts.allErrors&&(m=f.opts.allErrors,f.opts.allErrors=!1),a+=\" \"+e.validate(f)+\" \",f.createErrors=!0,m&&(f.opts.allErrors=m),e.compositeRule=f.compositeRule=p,a+=\" if (\"+d+\") {   \";var v=v||[];v.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"not\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT be valid' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var y=a;a=v.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+y+\"]); \":\" validate.errors = [\"+y+\"]; return false; \":\" var err = \"+y+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else {  errors = \"+u+\"; if (vErrors !== null) { if (\"+u+\") vErrors.length = \"+u+\"; else vErrors = null; } \",e.opts.allErrors&&(a+=\" } \")}else a+=\"  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"not\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT be valid' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",c&&(a+=\" if (false) { \");return a}},{}],28:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level;a+=\"var \"+f+\" = errors;var prevValid\"+s+\" = false;var \"+u+\" = false;\";var v=d.baseId,y=e.compositeRule;e.compositeRule=d.compositeRule=!0;var g=i;if(g)for(var P,E=-1,b=g.length-1;E<b;)P=g[E+=1],e.util.schemaHasRules(P,e.RULES.all)?(d.schema=P,d.schemaPath=n+\"[\"+E+\"]\",d.errSchemaPath=l+\"/\"+E,a+=\"  \"+e.validate(d)+\" \",d.baseId=v):a+=\" var \"+m+\" = true; \",E&&(a+=\" if (\"+m+\" && prevValid\"+s+\") \"+u+\" = false; else { \",p+=\"}\"),a+=\" if (\"+m+\") \"+u+\" = prevValid\"+s+\" = true;\";e.compositeRule=d.compositeRule=y,a+=\"\"+p+\"if (!\"+u+\") {   \";var w=w||[];w.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"oneOf\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",e.opts.messages!==!1&&(a+=\" , message: 'should match exactly one schema in oneOf' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var j=a;return a=w.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+j+\"]); \":\" validate.errors = [\"+j+\"]; return false; \":\" var err = \"+j+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"} else {  errors = \"+f+\"; if (vErrors !== null) { if (\"+f+\") vErrors.length = \"+f+\"; else vErrors = null; }\",e.opts.allErrors&&(a+=\" } \"),a}},{}],29:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=f?\"(new RegExp(\"+a+\"))\":e.usePattern(n);s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'string') || \"),s+=\" !\"+d+\".test(\"+u+\") ) {   \";var p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"pattern\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { pattern:  \",s+=f?\"\"+a:\"\"+e.util.toQuotedString(n),s+=\"  } \",e.opts.messages!==!1&&(s+=\" , message: 'should match pattern \\\"\",s+=f?\"' + \"+a+\" + '\":\"\"+e.util.escapeQuotes(n),s+=\"\\\"' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+e.util.toQuotedString(n),s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],30:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"key\"+s,d=\"patternMatched\"+s,p=\"\",m=e.opts.ownProperties;a+=\"var \"+u+\" = true;\";var v=i;if(v)for(var y,g=-1,P=v.length-1;g<P;){y=v[g+=1],a+=\" var \"+d+\" = false; for (var \"+f+\" in \"+h+\") {  \",m&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+f+\")) continue; \"),a+=\" \"+d+\" = \"+e.usePattern(y)+\".test(\"+f+\"); if (\"+d+\") break; } \";var E=e.util.escapeQuotes(y);a+=\" if (!\"+d+\") { \"+u+\" = false;  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"patternRequired\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingPattern: '\"+E+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should have property matching pattern \\\\'\"+E+\"\\\\'' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   \",c&&(p+=\"}\",a+=\" else { \")}return a+=\"\"+p}},{}],31:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m=\"valid\"+d.level,v=\"key\"+s,y=d.dataLevel=e.dataLevel+1,g=\"data\"+y,P=Object.keys(i||{}),E=e.schema.patternProperties||{},b=Object.keys(E),w=e.schema.additionalProperties,j=P.length||b.length,S=w===!1,$=\"object\"==typeof w&&Object.keys(w).length,x=e.opts.removeAdditional,_=S||$||x,O=e.opts.ownProperties,R=e.baseId,I=e.schema.required;if(I&&(!e.opts.v5||!I.$data)&&I.length<e.opts.loopRequired)var A=e.util.toHash(I);if(e.opts.v5)var k=e.schema.patternGroups||{},q=Object.keys(k);if(a+=\"var \"+f+\" = errors;var \"+m+\" = true;\",_){if(a+=\" for (var \"+v+\" in \"+h+\") {  \",O&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+v+\")) continue; \"),j){if(a+=\" var isAdditional\"+s+\" = !(false \",P.length)if(P.length>5)a+=\" || validate.schema\"+n+\"[\"+v+\"] \";else{var D=P;if(D)for(var L,Q=-1,C=D.length-1;Q<C;)L=D[Q+=1],a+=\" || \"+v+\" == \"+e.util.toQuotedString(L)+\" \"}if(b.length){var V=b;if(V)for(var z,U=-1,T=V.length-1;U<T;)z=V[U+=1],a+=\" || \"+e.usePattern(z)+\".test(\"+v+\") \"}if(e.opts.v5&&q&&q.length){var M=q;if(M)for(var N,U=-1,F=M.length-1;U<F;)N=M[U+=1],a+=\" || \"+e.usePattern(N)+\".test(\"+v+\") \"}a+=\" ); if (isAdditional\"+s+\") { \"}if(\"all\"==x)a+=\" delete \"+h+\"[\"+v+\"]; \";else{var H=e.errorPath,J=\"' + \"+v+\" + '\";if(e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers)),S)if(x)a+=\" delete \"+h+\"[\"+v+\"]; \";else{a+=\" \"+m+\" = false; \";var G=l;l=e.errSchemaPath+\"/additionalProperties\";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"additionalProperties\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { additionalProperty: '\"+J+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have additional properties' \"),e.opts.verbose&&(a+=\" , schema: false , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",l=G,c&&(a+=\" break; \")}else if($)if(\"failing\"==x){a+=\" var \"+f+\" = errors;  \";var Z=e.compositeRule;e.compositeRule=d.compositeRule=!0,d.schema=w,d.schemaPath=e.schemaPath+\".additionalProperties\",d.errSchemaPath=e.errSchemaPath+\"/additionalProperties\",d.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",a+=\" if (!\"+m+\") { errors = \"+f+\"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete \"+h+\"[\"+v+\"]; }  \",e.compositeRule=d.compositeRule=Z}else{d.schema=w,d.schemaPath=e.schemaPath+\".additionalProperties\",d.errSchemaPath=e.errSchemaPath+\"/additionalProperties\",d.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",c&&(a+=\" if (!\"+m+\") break; \")}e.errorPath=H}j&&(a+=\" } \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}var X=e.opts.useDefaults&&!e.compositeRule;if(P.length){var ee=P;if(ee)for(var L,re=-1,te=ee.length-1;re<te;){L=ee[re+=1];var ae=i[L];if(e.util.schemaHasRules(ae,e.RULES.all)){var se=e.util.getProperty(L),Y=h+se,oe=X&&void 0!==ae.default;d.schema=ae,d.schemaPath=n+se,d.errSchemaPath=l+\"/\"+e.util.escapeFragment(L),d.errorPath=e.util.getPath(e.errorPath,L,e.opts.jsonPointers),d.dataPathArr[y]=e.util.toQuotedString(L);var W=e.validate(d);if(d.baseId=R,e.util.varOccurences(W,g)<2){W=e.util.varReplace(W,g,Y);var ie=Y}else{var ie=g;a+=\" var \"+g+\" = \"+Y+\"; \"}if(oe)a+=\" \"+W+\" \";else{if(A&&A[L]){a+=\" if (\"+ie+\" === undefined) { \"+m+\" = false; \";var H=e.errorPath,G=l,ne=e.util.escapeQuotes(L);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(H,L,e.opts.jsonPointers)),l=e.errSchemaPath+\"/required\";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+ne+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+ne+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),\na+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",l=G,e.errorPath=H,a+=\" } else { \"}else a+=c?\" if (\"+ie+\" === undefined) { \"+m+\" = true; } else { \":\" if (\"+ie+\" !== undefined) { \";a+=\" \"+W+\" } \"}}c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}}var le=b;if(le)for(var z,ce=-1,he=le.length-1;ce<he;){z=le[ce+=1];var ae=E[z];if(e.util.schemaHasRules(ae,e.RULES.all)){d.schema=ae,d.schemaPath=e.schemaPath+\".patternProperties\"+e.util.getProperty(z),d.errSchemaPath=e.errSchemaPath+\"/patternProperties/\"+e.util.escapeFragment(z),a+=\" for (var \"+v+\" in \"+h+\") {  \",O&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+v+\")) continue; \"),a+=\" if (\"+e.usePattern(z)+\".test(\"+v+\")) { \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" } \",c&&(a+=\" else \"+m+\" = true; \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\")}}if(e.opts.v5){var ue=q;if(ue)for(var N,fe=-1,de=ue.length-1;fe<de;){N=ue[fe+=1];var pe=k[N],ae=pe.schema;if(e.util.schemaHasRules(ae,e.RULES.all)){d.schema=ae,d.schemaPath=e.schemaPath+\".patternGroups\"+e.util.getProperty(N)+\".schema\",d.errSchemaPath=e.errSchemaPath+\"/patternGroups/\"+e.util.escapeFragment(N)+\"/schema\",a+=\" var pgPropCount\"+s+\" = 0; for (var \"+v+\" in \"+h+\") {  \",O&&(a+=\" if (!Object.prototype.hasOwnProperty.call(\"+h+\", \"+v+\")) continue; \"),a+=\" if (\"+e.usePattern(N)+\".test(\"+v+\")) { pgPropCount\"+s+\"++; \",d.errorPath=e.util.getPathExpr(e.errorPath,v,e.opts.jsonPointers);var Y=h+\"[\"+v+\"]\";d.dataPathArr[y]=v;var W=e.validate(d);d.baseId=R,a+=e.util.varOccurences(W,g)<2?\" \"+e.util.varReplace(W,g,Y)+\" \":\" var \"+g+\" = \"+Y+\"; \"+W+\" \",c&&(a+=\" if (!\"+m+\") break; \"),a+=\" } \",c&&(a+=\" else \"+m+\" = true; \"),a+=\" }  \",c&&(a+=\" if (\"+m+\") { \",p+=\"}\");var me=pe.minimum,ve=pe.maximum;if(void 0!==me||void 0!==ve){a+=\" var \"+u+\" = true; \";var G=l;if(void 0!==me){var ye=me,ge=\"minimum\",Pe=\"less\";a+=\" \"+u+\" = pgPropCount\"+s+\" >= \"+me+\"; \",l=e.errSchemaPath+\"/patternGroups/minimum\",a+=\"  if (!\"+u+\") {   \";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"patternGroups\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { reason: '\"+ge+\"', limit: \"+ye+\", pattern: '\"+e.util.escapeQuotes(N)+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have \"+Pe+\" than \"+ye+' properties matching pattern \"'+e.util.escapeQuotes(N)+\"\\\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",void 0!==ve&&(a+=\" else \")}if(void 0!==ve){var ye=ve,ge=\"maximum\",Pe=\"more\";a+=\" \"+u+\" = pgPropCount\"+s+\" <= \"+ve+\"; \",l=e.errSchemaPath+\"/patternGroups/maximum\",a+=\"  if (!\"+u+\") {   \";var K=K||[];K.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"patternGroups\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { reason: '\"+ge+\"', limit: \"+ye+\", pattern: '\"+e.util.escapeQuotes(N)+\"' } \",e.opts.messages!==!1&&(a+=\" , message: 'should NOT have \"+Pe+\" than \"+ye+' properties matching pattern \"'+e.util.escapeQuotes(N)+\"\\\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var B=a;a=K.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+B+\"]); \":\" validate.errors = [\"+B+\"]; return false; \":\" var err = \"+B+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \"}l=G,c&&(a+=\" if (\"+u+\") { \",p+=\"}\")}}}}return c&&(a+=\" \"+p+\" if (\"+f+\" == errors) {\"),a=e.util.cleanUpCode(a)}},{}],32:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s,o=\" \",i=e.level,n=e.dataLevel,l=e.schema[r],c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(n||\"\"),f=\"valid\"+i;if(\"#\"==l||\"#/\"==l)e.isRoot?(a=e.async,s=\"validate\"):(a=e.root.schema.$async===!0,s=\"root.refVal[0]\");else{var d=e.resolveRef(e.baseId,l,e.isRoot);if(void 0===d){var p=\"can't resolve reference \"+l+\" from id \"+e.baseId;if(\"fail\"==e.opts.missingRefs){console.log(p);var m=m||[];m.push(o),o=\"\",e.createErrors!==!1?(o+=\" { keyword: '\"+(t||\"$ref\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { ref: '\"+e.util.escapeQuotes(l)+\"' } \",e.opts.messages!==!1&&(o+=\" , message: 'can\\\\'t resolve reference \"+e.util.escapeQuotes(l)+\"' \"),e.opts.verbose&&(o+=\" , schema: \"+e.util.toQuotedString(l)+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),o+=\" } \"):o+=\" {} \";var v=o;o=m.pop(),o+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+v+\"]); \":\" validate.errors = [\"+v+\"]; return false; \":\" var err = \"+v+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",h&&(o+=\" if (false) { \")}else{if(\"ignore\"!=e.opts.missingRefs){var y=new Error(p);throw y.missingRef=e.resolve.url(e.baseId,l),y.missingSchema=e.resolve.normalizeId(e.resolve.fullPath(y.missingRef)),y}console.log(p),h&&(o+=\" if (true) { \")}}else if(d.inline){var g=e.util.copy(e);g.level++;var P=\"valid\"+g.level;g.schema=d.schema,g.schemaPath=\"\",g.errSchemaPath=l;var E=e.validate(g).replace(/validate\\.schema/g,d.code);o+=\" \"+E+\" \",h&&(o+=\" if (\"+P+\") { \")}else a=d.$async===!0,s=d.code}if(s){var m=m||[];m.push(o),o=\"\",o+=e.opts.passContext?\" \"+s+\".call(this, \":\" \"+s+\"( \",o+=\" \"+u+\", (dataPath || '')\",'\"\"'!=e.errorPath&&(o+=\" + \"+e.errorPath);o+=\" , \"+(n?\"data\"+(n-1||\"\"):\"parentData\")+\" , \"+(n?e.dataPathArr[n]:\"parentDataProperty\")+\", rootData)  \";var b=o;if(o=m.pop(),a){if(!e.async)throw new Error(\"async schema referenced by sync schema\");o+=\" try { \",h&&(o+=\"var \"+f+\" =\"),o+=\" \"+e.yieldAwait+\" \"+b+\"; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } \",h&&(o+=\" if (\"+f+\") { \")}else o+=\" if (!\"+b+\") { if (vErrors === null) vErrors = \"+s+\".errors; else vErrors = vErrors.concat(\"+s+\".errors); errors = vErrors.length; } \",h&&(o+=\" else { \")}return o}},{}],33:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;f&&(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \");var d=\"schema\"+s;if(!f)if(i.length<e.opts.loopRequired&&e.schema.properties&&Object.keys(e.schema.properties).length){var p=[],m=i;if(m)for(var v,y=-1,g=m.length-1;y<g;){v=m[y+=1];var P=e.schema.properties[v];P&&e.util.schemaHasRules(P,e.RULES.all)||(p[p.length]=v)}}else var p=i;if(f||p.length){var E=e.errorPath,b=f||p.length>=e.opts.loopRequired;if(c)if(a+=\" var missing\"+s+\"; \",b){f||(a+=\" var \"+d+\" = validate.schema\"+n+\"; \");var w=\"i\"+s,j=\"schema\"+s+\"[\"+w+\"]\",S=\"' + \"+j+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(E,j,e.opts.jsonPointers)),a+=\" var \"+u+\" = true; \",f&&(a+=\" if (schema\"+s+\" === undefined) \"+u+\" = true; else if (!Array.isArray(schema\"+s+\")) \"+u+\" = false; else {\"),a+=\" for (var \"+w+\" = 0; \"+w+\" < \"+d+\".length; \"+w+\"++) { \"+u+\" = \"+h+\"[\"+d+\"[\"+w+\"]] !== undefined; if (!\"+u+\") break; } \",f&&(a+=\"  }  \"),a+=\"  if (!\"+u+\") {   \";var $=$||[];$.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var x=a;a=$.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+x+\"]); \":\" validate.errors = [\"+x+\"]; return false; \":\" var err = \"+x+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else { \"}else{a+=\" if ( \";var _=p;if(_)for(var O,w=-1,R=_.length-1;w<R;){O=_[w+=1],w&&(a+=\" || \");var I=e.util.getProperty(O);a+=\" ( \"+h+I+\" === undefined && (missing\"+s+\" = \"+e.util.toQuotedString(e.opts.jsonPointers?O:I)+\") ) \"}a+=\") {  \";var j=\"missing\"+s,S=\"' + \"+j+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(E,j,!0):E+\" + \"+j);var $=$||[];$.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var x=a;a=$.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+x+\"]); \":\" validate.errors = [\"+x+\"]; return false; \":\" var err = \"+x+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else { \"}else if(b){f||(a+=\" var \"+d+\" = validate.schema\"+n+\"; \");var w=\"i\"+s,j=\"schema\"+s+\"[\"+w+\"]\",S=\"' + \"+j+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(E,j,e.opts.jsonPointers)),f&&(a+=\" if (\"+d+\" && !Array.isArray(\"+d+\")) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (\"+d+\" !== undefined) { \"),a+=\" for (var \"+w+\" = 0; \"+w+\" < \"+d+\".length; \"+w+\"++) { if (\"+h+\"[\"+d+\"[\"+w+\"]] === undefined) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } \",f&&(a+=\"  }  \")}else{var A=p;if(A)for(var k,q=-1,D=A.length-1;q<D;){k=A[q+=1];var I=e.util.getProperty(k),S=e.util.escapeQuotes(k);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(E,k,e.opts.jsonPointers)),a+=\" if (\"+h+I+\" === undefined) {  var err =   \",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"required\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { missingProperty: '\"+S+\"' } \",e.opts.messages!==!1&&(a+=\" , message: '\",a+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+S+\"\\\\'\",a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \",a+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } \"}}e.errorPath=E}else c&&(a+=\" if (true) {\");return a}},{}],34:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=\"errs__\"+s,d=e.util.copy(e),p=\"\";d.level++;var m,v=\"valid\"+d.level,y=\"ifPassed\"+e.level,g=d.baseId;a+=\"var \"+y+\";\";var P=i;if(P)for(var E,b=-1,w=P.length-1;b<w;){if(E=P[b+=1],b&&!m&&(a+=\" if (!\"+y+\") { \",p+=\"}\"),E.if&&e.util.schemaHasRules(E.if,e.RULES.all)){a+=\" var \"+f+\" = errors;   \";var j=e.compositeRule;if(e.compositeRule=d.compositeRule=!0,d.createErrors=!1,d.schema=E.if,d.schemaPath=n+\"[\"+b+\"].if\",d.errSchemaPath=l+\"/\"+b+\"/if\",a+=\"  \"+e.validate(d)+\" \",d.baseId=g,d.createErrors=!0,e.compositeRule=d.compositeRule=j,a+=\" \"+y+\" = \"+v+\"; if (\"+y+\") {  \",\"boolean\"==typeof E.then){if(E.then===!1){var S=S||[];S.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"switch\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { caseIndex: \"+b+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should pass \\\"switch\\\" keyword validation' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var $=a;a=S.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+$+\"]); \":\" validate.errors = [\"+$+\"]; return false; \":\" var err = \"+$+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}a+=\" var \"+v+\" = \"+E.then+\"; \"}else d.schema=E.then,d.schemaPath=n+\"[\"+b+\"].then\",d.errSchemaPath=l+\"/\"+b+\"/then\",a+=\"  \"+e.validate(d)+\" \",d.baseId=g;a+=\"  } else {  errors = \"+f+\"; if (vErrors !== null) { if (\"+f+\") vErrors.length = \"+f+\"; else vErrors = null; } } \"}else if(a+=\" \"+y+\" = true;  \",\"boolean\"==typeof E.then){if(E.then===!1){var S=S||[];S.push(a),a=\"\",e.createErrors!==!1?(a+=\" { keyword: '\"+(t||\"switch\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { caseIndex: \"+b+\" } \",e.opts.messages!==!1&&(a+=\" , message: 'should pass \\\"switch\\\" keyword validation' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var $=a;a=S.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+$+\"]); \":\" validate.errors = [\"+$+\"]; return false; \":\" var err = \"+$+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}a+=\" var \"+v+\" = \"+E.then+\"; \"}else d.schema=E.then,d.schemaPath=n+\"[\"+b+\"].then\",d.errSchemaPath=l+\"/\"+b+\"/then\",a+=\"  \"+e.validate(d)+\" \",d.baseId=g;m=E.continue}return a+=\"\"+p+\"var \"+u+\" = \"+v+\"; \",a=e.util.cleanUpCode(a)}},{}],35:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=\"valid\"+o,d=e.opts.v5&&n&&n.$data;if(d?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n,(n||d)&&e.opts.uniqueItems!==!1){d&&(s+=\" var \"+f+\"; if (\"+a+\" === false || \"+a+\" === undefined) \"+f+\" = true; else if (typeof \"+a+\" != 'boolean') \"+f+\" = false; else { \"),s+=\" var \"+f+\" = true; if (\"+u+\".length > 1) { var i = \"+u+\".length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(\"+u+\"[i], \"+u+\"[j])) { \"+f+\" = false; break outer; } } } } \",d&&(s+=\"  }  \"),s+=\" if (!\"+f+\") {   \";var p=p||[];p.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(t||\"uniqueItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { i: i, j: j } \",e.opts.messages!==!1&&(s+=\" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=d?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \",h&&(s+=\" else { \")}else h&&(s+=\" if (true) { \");return s}},{}],36:[function(e,r,t){\"use strict\";r.exports=function(e,r){function t(e){for(var r=0;r<e.rules.length;r++)if(a(e.rules[r]))return!0}function a(r){return void 0!==e.schema[r.keyword]||\"properties\"==r.keyword&&(e.schema.additionalProperties===!1||\"object\"==typeof e.schema.additionalProperties||e.schema.patternProperties&&Object.keys(e.schema.patternProperties).length||e.opts.v5&&e.schema.patternGroups&&Object.keys(e.schema.patternGroups).length)}var s=\"\",o=e.schema.$async===!0;if(e.isTop){var i=e.isTop,n=e.level=0,l=e.dataLevel=0,c=\"data\";if(e.rootId=e.resolve.fullPath(e.root.schema.id),e.baseId=e.baseId||e.rootId,o){e.async=!0;var h=\"es7\"==e.opts.async;e.yieldAwait=h?\"await\":\"yield\"}delete e.isTop,e.dataPathArr=[void 0],s+=\" var validate = \",o?h?s+=\" (async function \":(\"co*\"==e.opts.async&&(s+=\"co.wrap\"),s+=\"(function* \"):s+=\" (function \",s+=\" (data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; var vErrors = null; \",s+=\" var errors = 0;     \",s+=\" if (rootData === undefined) rootData = data;\"}else{var n=e.level,l=e.dataLevel,c=\"data\"+(l||\"\");if(e.schema.id&&(e.baseId=e.resolve.url(e.baseId,e.schema.id)),o&&!e.async)throw new Error(\"async schema in sync schema\");s+=\" var errs_\"+n+\" = errors;\"}var u,f=\"valid\"+n,d=!e.opts.allErrors,p=\"\",m=\"\",v=e.schema.type,y=Array.isArray(v);if(v&&e.opts.coerceTypes){var g=e.util.coerceToTypes(e.opts.coerceTypes,v);if(g){var P=e.schemaPath+\".type\",E=e.errSchemaPath+\"/type\",b=y?\"checkDataTypes\":\"checkDataType\";s+=\" if (\"+e.util[b](v,c,!0)+\") {  \";var w=\"dataType\"+n,j=\"coerced\"+n;s+=\" var \"+w+\" = typeof \"+c+\"; \",\"array\"==e.opts.coerceTypes&&(s+=\" if (\"+w+\" == 'object' && Array.isArray(\"+c+\")) \"+w+\" = 'array'; \"),s+=\" var \"+j+\" = undefined; \";var S=\"\",$=g;if($)for(var x,_=-1,O=$.length-1;_<O;)x=$[_+=1],_&&(s+=\" if (\"+j+\" === undefined) { \",S+=\"}\"),\"array\"==e.opts.coerceTypes&&\"array\"!=x&&(s+=\" if (\"+w+\" == 'array' && \"+c+\".length == 1) { \"+j+\" = \"+c+\" = \"+c+\"[0]; \"+w+\" = typeof \"+c+\";  } \"),\"string\"==x?s+=\" if (\"+w+\" == 'number' || \"+w+\" == 'boolean') \"+j+\" = '' + \"+c+\"; else if (\"+c+\" === null) \"+j+\" = ''; \":\"number\"==x||\"integer\"==x?(s+=\" if (\"+w+\" == 'boolean' || \"+c+\" === null || (\"+w+\" == 'string' && \"+c+\" && \"+c+\" == +\"+c+\" \",\"integer\"==x&&(s+=\" && !(\"+c+\" % 1)\"),s+=\")) \"+j+\" = +\"+c+\"; \"):\"boolean\"==x?s+=\" if (\"+c+\" === 'false' || \"+c+\" === 0 || \"+c+\" === null) \"+j+\" = false; else if (\"+c+\" === 'true' || \"+c+\" === 1) \"+j+\" = true; \":\"null\"==x?s+=\" if (\"+c+\" === '' || \"+c+\" === 0 || \"+c+\" === false) \"+j+\" = null; \":\"array\"==e.opts.coerceTypes&&\"array\"==x&&(s+=\" if (\"+w+\" == 'string' || \"+w+\" == 'number' || \"+w+\" == 'boolean' || \"+c+\" == null) \"+j+\" = [\"+c+\"]; \");s+=\" \"+S+\" if (\"+j+\" === undefined) {   \";var R=R||[];R.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(u||\"type\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(E)+\" , params: { type: '\",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+P+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),s+=\" } \"):s+=\" {} \";var I=s;s=R.pop(),s+=!e.compositeRule&&d?e.async?\" throw new ValidationError([\"+I+\"]); \":\" validate.errors = [\"+I+\"]; return false; \":\" var err = \"+I+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } else {  \";var A=l?\"data\"+(l-1||\"\"):\"parentData\",k=l?e.dataPathArr[l]:\"parentDataProperty\";s+=\" \"+c+\" = \"+j+\"; \",l||(s+=\"if (\"+A+\" !== undefined)\"),s+=\" \"+A+\"[\"+k+\"] = \"+j+\"; } } \"}}var q;if(e.schema.$ref&&(q=e.util.schemaHasRulesExcept(e.schema,e.RULES.all,\"$ref\"))){if(\"fail\"==e.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path \"'+e.errSchemaPath+'\"');\"ignore\"==e.opts.extendRefs?(q=!1,console.log('$ref: keywords ignored in schema at path \"'+e.errSchemaPath+'\"')):e.opts.extendRefs!==!0&&console.log('$ref: all keywords used in schema at path \"'+e.errSchemaPath+'\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour')}if(e.schema.$ref&&!q)s+=\" \"+e.RULES.all.$ref.code(e,\"$ref\")+\" \",d&&(s+=\" } if (errors === \",s+=i?\"0\":\"errs_\"+n,s+=\") { \",m+=\"}\");else{var D=e.RULES;if(D)for(var L,Q=-1,C=D.length-1;Q<C;)if(L=D[Q+=1],t(L)){if(L.type&&(s+=\" if (\"+e.util.checkDataType(L.type,c)+\") { \"),e.opts.useDefaults&&!e.compositeRule)if(\"object\"==L.type&&e.schema.properties){var V=e.schema.properties,z=Object.keys(V),U=z;if(U)for(var T,M=-1,N=U.length-1;M<N;){T=U[M+=1];var F=V[T];if(void 0!==F.default){var H=c+e.util.getProperty(T);s+=\"  if (\"+H+\" === undefined) \"+H+\" = \",s+=\"shared\"==e.opts.useDefaults?\" \"+e.useDefault(F.default)+\" \":\" \"+JSON.stringify(F.default)+\" \",s+=\"; \"}}}else if(\"array\"==L.type&&Array.isArray(e.schema.items)){var J=e.schema.items;if(J)for(var F,_=-1,G=J.length-1;_<G;)if(F=J[_+=1],void 0!==F.default){var H=c+\"[\"+_+\"]\";s+=\"  if (\"+H+\" === undefined) \"+H+\" = \",s+=\"shared\"==e.opts.useDefaults?\" \"+e.useDefault(F.default)+\" \":\" \"+JSON.stringify(F.default)+\" \",s+=\"; \"}}var K=L.rules;if(K)for(var B,Z=-1,Y=K.length-1;Z<Y;)B=K[Z+=1],a(B)&&(s+=\" \"+B.code(e,B.keyword)+\" \",d&&(p+=\"}\"));if(d&&(s+=\" \"+p+\" \",p=\"\"),L.type&&(s+=\" } \",v&&v===L.type)){var W=!0;s+=\" else { \";var P=e.schemaPath+\".type\",E=e.errSchemaPath+\"/type\",R=R||[];R.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(u||\"type\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(E)+\" , params: { type: '\",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+P+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),s+=\" } \"):s+=\" {} \";var I=s;s=R.pop(),s+=!e.compositeRule&&d?e.async?\" throw new ValidationError([\"+I+\"]); \":\" validate.errors = [\"+I+\"]; return false; \":\" var err = \"+I+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \"}d&&(s+=\" if (errors === \",s+=i?\"0\":\"errs_\"+n,s+=\") { \",m+=\"}\")}}if(v&&!W&&(!e.opts.coerceTypes||!g)){var P=e.schemaPath+\".type\",E=e.errSchemaPath+\"/type\",b=y?\"checkDataTypes\":\"checkDataType\";s+=\" if (\"+e.util[b](v,c,!0)+\") {   \";var R=R||[];R.push(s),s=\"\",e.createErrors!==!1?(s+=\" { keyword: '\"+(u||\"type\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(E)+\" , params: { type: '\",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' } \",e.opts.messages!==!1&&(s+=\" , message: 'should be \",s+=y?\"\"+v.join(\",\"):\"\"+v,s+=\"' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+P+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),s+=\" } \"):s+=\" {} \";var I=s;s=R.pop(),s+=!e.compositeRule&&d?e.async?\" throw new ValidationError([\"+I+\"]); \":\" validate.errors = [\"+I+\"]; return false; \":\" var err = \"+I+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" }\"}return d&&(s+=\" \"+m+\" \"),i?(o?(s+=\" if (errors === 0) return true;           \",s+=\" else throw new ValidationError(vErrors); \"):(s+=\" validate.errors = vErrors; \",s+=\" return errors === 0;       \"),s+=\" }); return validate;\"):s+=\" var \"+f+\" = errors === errs_\"+n+\";\",s=e.util.cleanUpCode(s),i&&d&&(s=e.util.cleanUpVarErrors(s,o)),s}},{}],37:[function(e,r,t){\"use strict\";function a(e,r){function t(e,r,t){for(var a,o=0;o<s.length;o++){var i=s[o];if(i.type==r){a=i;break}}a||(a={type:r,rules:[]},s.push(a));var l={keyword:e,definition:t,custom:!0,code:n};a.rules.push(l),s.custom[e]=l}function a(e){if(!s.types[e])throw new Error(\"Unknown type \"+e)}var s=this.RULES;if(s.keywords[e])throw new Error(\"Keyword \"+e+\" is already defined\");if(!i.test(e))throw new Error(\"Keyword \"+e+\" is not a valid identifier\");if(r){if(r.macro&&void 0!==r.valid)throw new Error('\"valid\" option cannot be used with macro keywords');var o=r.type;if(Array.isArray(o)){var l,c=o.length;for(l=0;l<c;l++)a(o[l]);for(l=0;l<c;l++)t(e,o[l],r)}else o&&a(o),t(e,o,r);var h=r.$data===!0&&this._opts.v5;if(h&&!r.validate)throw new Error('$data support: \"validate\" function is not defined');var u=r.metaSchema;u&&(h&&(u={anyOf:[u,{$ref:\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#/definitions/$data\"}]}),r.validateSchema=this.compile(u,!0))}s.keywords[e]=s.all[e]=!0}function s(e){var r=this.RULES.custom[e];return r?r.definition:this.RULES.keywords[e]||!1}function o(e){var r=this.RULES;delete r.keywords[e],delete r.all[e],delete r.custom[e];for(var t=0;t<r.length;t++)for(var a=r[t].rules,s=0;s<a.length;s++)if(a[s].keyword==e){a.splice(s,1);break}}var i=/^[a-z_$][a-z0-9_$\\-]*$/i,n=e(\"./dotjs/custom\");r.exports={add:a,get:s,remove:o}},{\"./dotjs/custom\":21}],38:[function(e,r,t){r.exports={id:\"http://json-schema.org/draft-04/schema#\",$schema:\"http://json-schema.org/draft-04/schema#\",description:\"Core schema meta-schema\",definitions:{schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},positiveInteger:{type:\"integer\",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:\"#/definitions/positiveInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},minItems:1,uniqueItems:!0}},type:\"object\",properties:{id:{type:\"string\",format:\"uri\"},$schema:{type:\"string\",format:\"uri\"},title:{type:\"string\"},description:{type:\"string\"},default:{},multipleOf:{type:\"number\",minimum:0,exclusiveMinimum:!0},maximum:{type:\"number\"},exclusiveMaximum:{type:\"boolean\",default:!1},minimum:{type:\"number\"},exclusiveMinimum:{type:\"boolean\",default:!1},maxLength:{$ref:\"#/definitions/positiveInteger\"},minLength:{$ref:\"#/definitions/positiveIntegerDefault0\"},pattern:{type:\"string\",format:\"regex\"},additionalItems:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}],default:{}},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:{}},maxItems:{$ref:\"#/definitions/positiveInteger\"},minItems:{$ref:\"#/definitions/positiveIntegerDefault0\"},uniqueItems:{type:\"boolean\",default:!1},maxProperties:{$ref:\"#/definitions/positiveInteger\"},minProperties:{$ref:\"#/definitions/positiveIntegerDefault0\"},required:{$ref:\"#/definitions/stringArray\"},additionalProperties:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}],default:{}},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},enum:{type:\"array\",minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"}},dependencies:{exclusiveMaximum:[\"maximum\"],exclusiveMinimum:[\"minimum\"]},default:{}}},{}],39:[function(e,r,t){r.exports={id:\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#\",$schema:\"http://json-schema.org/draft-04/schema#\",description:\"Core schema meta-schema (v5 proposals)\",definitions:{schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},positiveInteger:{type:\"integer\",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:\"#/definitions/positiveInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},minItems:1,uniqueItems:!0},$data:{type:\"object\",required:[\"$data\"],properties:{$data:{type:\"string\",anyOf:[{format:\"relative-json-pointer\"},{format:\"json-pointer\"}]}},additionalProperties:!1}},type:\"object\",properties:{id:{type:\"string\",format:\"uri\"},$schema:{type:\"string\",format:\"uri\"},title:{type:\"string\"},description:{type:\"string\"},default:{},multipleOf:{anyOf:[{type:\"number\",minimum:0,exclusiveMinimum:!0},{$ref:\"#/definitions/$data\"}]},maximum:{anyOf:[{type:\"number\"},{$ref:\"#/definitions/$data\"}]},exclusiveMaximum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},minimum:{anyOf:[{type:\"number\"},{$ref:\"#/definitions/$data\"}]},exclusiveMinimum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},maxLength:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minLength:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},pattern:{anyOf:[{type:\"string\",format:\"regex\"},{$ref:\"#/definitions/$data\"}]},additionalItems:{anyOf:[{type:\"boolean\"},{$ref:\"#\"},{$ref:\"#/definitions/$data\"}],default:{}},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:{}},maxItems:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minItems:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},uniqueItems:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},maxProperties:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minProperties:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},required:{anyOf:[{$ref:\"#/definitions/stringArray\"},{$ref:\"#/definitions/$data\"}]},additionalProperties:{anyOf:[{type:\"boolean\"},{$ref:\"#\"},{$ref:\"#/definitions/$data\"}],default:{}},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},enum:{anyOf:[{type:\"array\",minItems:1,uniqueItems:!0},{$ref:\"#/definitions/$data\"}]},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"},format:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatMaximum:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatMinimum:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatExclusiveMaximum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},formatExclusiveMinimum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},constant:{anyOf:[{},{$ref:\"#/definitions/$data\"}]},contains:{$ref:\"#\"},patternGroups:{type:\"object\",additionalProperties:{type:\"object\",required:[\"schema\"],properties:{maximum:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minimum:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},schema:{$ref:\"#\"}},additionalProperties:!1},default:{}},switch:{type:\"array\",items:{required:[\"then\"],properties:{if:{$ref:\"#\"},then:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}]},continue:{type:\"boolean\"}},additionalProperties:!1,dependencies:{continue:[\"if\"]}}}},dependencies:{exclusiveMaximum:[\"maximum\"],exclusiveMinimum:[\"minimum\"],formatMaximum:[\"format\"],formatMinimum:[\"format\"],formatExclusiveMaximum:[\"formatMaximum\"],formatExclusiveMinimum:[\"formatMinimum\"]},default:{}}},{}],40:[function(e,r,t){\"use strict\";function a(r){function t(e,t,s){var o={inline:s||a[e],statements:!0,errors:\"full\"};t&&(o.type=t),r.addKeyword(e,o)}var a={switch:e(\"./dotjs/switch\"),constant:e(\"./dotjs/constant\"),_formatLimit:e(\"./dotjs/_formatLimit\"),patternRequired:e(\"./dotjs/patternRequired\")};if(r._opts.meta!==!1){r.addMetaSchema(e(\"./refs/json-schema-v5.json\"),o)}t(\"constant\"),r.addKeyword(\"contains\",{type:\"array\",macro:s}),\nt(\"formatMaximum\",\"string\",a._formatLimit),t(\"formatMinimum\",\"string\",a._formatLimit),r.addKeyword(\"formatExclusiveMaximum\"),r.addKeyword(\"formatExclusiveMinimum\"),r.addKeyword(\"patternGroups\"),t(\"patternRequired\",\"object\"),t(\"switch\")}function s(e){return{not:{items:{not:e}}}}var o=\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json\";r.exports={enable:a,META_SCHEMA_ID:o}},{\"./dotjs/_formatLimit\":13,\"./dotjs/constant\":20,\"./dotjs/patternRequired\":30,\"./dotjs/switch\":34,\"./refs/json-schema-v5.json\":39}],41:[function(r,t,a){(function(r){!function(s){function o(e){throw new RangeError(D[e])}function i(e,r){for(var t=e.length,a=[];t--;)a[t]=r(e[t]);return a}function n(e,r){var t=e.split(\"@\"),a=\"\";return t.length>1&&(a=t[0]+\"@\",e=t[1]),e=e.replace(q,\".\"),a+i(e.split(\".\"),r).join(\".\")}function l(e){for(var r,t,a=[],s=0,o=e.length;s<o;)r=e.charCodeAt(s++),r>=55296&&r<=56319&&s<o?(t=e.charCodeAt(s++),56320==(64512&t)?a.push(((1023&r)<<10)+(1023&t)+65536):(a.push(r),s--)):a.push(r);return a}function c(e){return i(e,function(e){var r=\"\";return e>65535&&(e-=65536,r+=C(e>>>10&1023|55296),e=56320|1023&e),r+=C(e)}).join(\"\")}function h(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:j}function u(e,r){return e+22+75*(e<26)-((0!=r)<<5)}function f(e,r,t){var a=0;for(e=t?Q(e/_):e>>1,e+=Q(e/r);e>L*$>>1;a+=j)e=Q(e/L);return Q(a+(L+1)*e/(e+x))}function d(e){var r,t,a,s,i,n,l,u,d,p,m=[],v=e.length,y=0,g=R,P=O;for(t=e.lastIndexOf(I),t<0&&(t=0),a=0;a<t;++a)e.charCodeAt(a)>=128&&o(\"not-basic\"),m.push(e.charCodeAt(a));for(s=t>0?t+1:0;s<v;){for(i=y,n=1,l=j;s>=v&&o(\"invalid-input\"),u=h(e.charCodeAt(s++)),(u>=j||u>Q((w-y)/n))&&o(\"overflow\"),y+=u*n,d=l<=P?S:l>=P+$?$:l-P,!(u<d);l+=j)p=j-d,n>Q(w/p)&&o(\"overflow\"),n*=p;r=m.length+1,P=f(y-i,r,0==i),Q(y/r)>w-g&&o(\"overflow\"),g+=Q(y/r),y%=r,m.splice(y++,0,g)}return c(m)}function p(e){var r,t,a,s,i,n,c,h,d,p,m,v,y,g,P,E=[];for(e=l(e),v=e.length,r=R,t=0,i=O,n=0;n<v;++n)m=e[n],m<128&&E.push(C(m));for(a=s=E.length,s&&E.push(I);a<v;){for(c=w,n=0;n<v;++n)m=e[n],m>=r&&m<c&&(c=m);for(y=a+1,c-r>Q((w-t)/y)&&o(\"overflow\"),t+=(c-r)*y,r=c,n=0;n<v;++n)if(m=e[n],m<r&&++t>w&&o(\"overflow\"),m==r){for(h=t,d=j;p=d<=i?S:d>=i+$?$:d-i,!(h<p);d+=j)P=h-p,g=j-p,E.push(C(u(p+P%g,0))),h=Q(P/g);E.push(C(u(h,0))),i=f(t,y,a==s),t=0,++a}++t,++r}return E.join(\"\")}function m(e){return n(e,function(e){return A.test(e)?d(e.slice(4).toLowerCase()):e})}function v(e){return n(e,function(e){return k.test(e)?\"xn--\"+p(e):e})}var y=\"object\"==typeof a&&a&&!a.nodeType&&a,g=\"object\"==typeof t&&t&&!t.nodeType&&t,P=\"object\"==typeof r&&r;P.global!==P&&P.window!==P&&P.self!==P||(s=P);var E,b,w=2147483647,j=36,S=1,$=26,x=38,_=700,O=72,R=128,I=\"-\",A=/^xn--/,k=/[^\\x20-\\x7E]/,q=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,D={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},L=j-S,Q=Math.floor,C=String.fromCharCode;if(E={version:\"1.4.1\",ucs2:{decode:l,encode:c},decode:d,encode:p,toASCII:v,toUnicode:m},\"function\"==typeof e&&\"object\"==typeof e.amd&&e.amd)e(\"punycode\",function(){return E});else if(y&&g)if(t.exports==y)g.exports=E;else for(b in E)E.hasOwnProperty(b)&&(y[b]=E[b]);else s.punycode=E}(this)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],42:[function(e,r,t){\"use strict\";function a(e,r){return Object.prototype.hasOwnProperty.call(e,r)}r.exports=function(e,r,t,o){r=r||\"&\",t=t||\"=\";var i={};if(\"string\"!=typeof e||0===e.length)return i;var n=/\\+/g;e=e.split(r);var l=1e3;o&&\"number\"==typeof o.maxKeys&&(l=o.maxKeys);var c=e.length;l>0&&c>l&&(c=l);for(var h=0;h<c;++h){var u,f,d,p,m=e[h].replace(n,\"%20\"),v=m.indexOf(t);v>=0?(u=m.substr(0,v),f=m.substr(v+1)):(u=m,f=\"\"),d=decodeURIComponent(u),p=decodeURIComponent(f),a(i,d)?s(i[d])?i[d].push(p):i[d]=[i[d],p]:i[d]=p}return i};var s=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}},{}],43:[function(e,r,t){\"use strict\";function a(e,r){if(e.map)return e.map(r);for(var t=[],a=0;a<e.length;a++)t.push(r(e[a],a));return t}var s=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};r.exports=function(e,r,t,n){return r=r||\"&\",t=t||\"=\",null===e&&(e=void 0),\"object\"==typeof e?a(i(e),function(i){var n=encodeURIComponent(s(i))+t;return o(e[i])?a(e[i],function(e){return n+encodeURIComponent(s(e))}).join(r):n+encodeURIComponent(s(e[i]))}).join(r):n?encodeURIComponent(s(n))+t+encodeURIComponent(s(e)):\"\"};var o=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},i=Object.keys||function(e){var r=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(t);return r}},{}],44:[function(e,r,t){\"use strict\";t.decode=t.parse=e(\"./decode\"),t.encode=t.stringify=e(\"./encode\")},{\"./decode\":42,\"./encode\":43}],45:[function(e,r,t){\"use strict\";function a(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}function s(e,r,t){if(e&&c.isObject(e)&&e instanceof a)return e;var s=new a;return s.parse(e,r,t),s}function o(e){return c.isString(e)&&(e=s(e)),e instanceof a?e.format():a.prototype.format.call(e)}function i(e,r){return s(e,!1,!0).resolve(r)}function n(e,r){return e?s(e,!1,!0).resolveObject(r):r}var l=e(\"punycode\"),c=e(\"./util\");t.parse=s,t.resolve=i,t.resolveObject=n,t.format=o,t.Url=a;var h=/^([a-z0-9.+-]+:)/i,u=/:[0-9]*$/,f=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,d=[\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"],p=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat(d),m=[\"'\"].concat(p),v=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(m),y=[\"/\",\"?\",\"#\"],g=/^[+a-z0-9A-Z_-]{0,63}$/,P=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,E={javascript:!0,\"javascript:\":!0},b={javascript:!0,\"javascript:\":!0},w={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},j=e(\"querystring\");a.prototype.parse=function(e,r,t){if(!c.isString(e))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof e);var a=e.indexOf(\"?\"),s=a!==-1&&a<e.indexOf(\"#\")?\"?\":\"#\",o=e.split(s);o[0]=o[0].replace(/\\\\/g,\"/\"),e=o.join(s);var i=e;if(i=i.trim(),!t&&1===e.split(\"#\").length){var n=f.exec(i);if(n)return this.path=i,this.href=i,this.pathname=n[1],n[2]?(this.search=n[2],this.query=r?j.parse(this.search.substr(1)):this.search.substr(1)):r&&(this.search=\"\",this.query={}),this}var u=h.exec(i);if(u){u=u[0];var d=u.toLowerCase();this.protocol=d,i=i.substr(u.length)}if(t||u||i.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var p=\"//\"===i.substr(0,2);!p||u&&b[u]||(i=i.substr(2),this.slashes=!0)}if(!b[u]&&(p||u&&!w[u])){for(var S=-1,$=0;$<y.length;$++){var x=i.indexOf(y[$]);x!==-1&&(S===-1||x<S)&&(S=x)}var _,O;O=S===-1?i.lastIndexOf(\"@\"):i.lastIndexOf(\"@\",S),O!==-1&&(_=i.slice(0,O),i=i.slice(O+1),this.auth=decodeURIComponent(_)),S=-1;for(var $=0;$<v.length;$++){var x=i.indexOf(v[$]);x!==-1&&(S===-1||x<S)&&(S=x)}S===-1&&(S=i.length),this.host=i.slice(0,S),i=i.slice(S),this.parseHost(),this.hostname=this.hostname||\"\";var R=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!R)for(var I=this.hostname.split(/\\./),$=0,A=I.length;$<A;$++){var k=I[$];if(k&&!k.match(g)){for(var q=\"\",D=0,L=k.length;D<L;D++)q+=k.charCodeAt(D)>127?\"x\":k[D];if(!q.match(g)){var Q=I.slice(0,$),C=I.slice($+1),V=k.match(P);V&&(Q.push(V[1]),C.unshift(V[2])),C.length&&(i=\"/\"+C.join(\".\")+i),this.hostname=Q.join(\".\");break}}}this.hostname=this.hostname.length>255?\"\":this.hostname.toLowerCase(),R||(this.hostname=l.toASCII(this.hostname));var z=this.port?\":\"+this.port:\"\";this.host=(this.hostname||\"\")+z,this.href+=this.host,R&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),\"/\"!==i[0]&&(i=\"/\"+i))}if(!E[d])for(var $=0,A=m.length;$<A;$++){var U=m[$];if(i.indexOf(U)!==-1){var T=encodeURIComponent(U);T===U&&(T=escape(U)),i=i.split(U).join(T)}}var M=i.indexOf(\"#\");M!==-1&&(this.hash=i.substr(M),i=i.slice(0,M));var N=i.indexOf(\"?\");if(N!==-1?(this.search=i.substr(N),this.query=i.substr(N+1),r&&(this.query=j.parse(this.query)),i=i.slice(0,N)):r&&(this.search=\"\",this.query={}),i&&(this.pathname=i),w[d]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){var z=this.pathname||\"\";this.path=z+(this.search||\"\")}return this.href=this.format(),this},a.prototype.format=function(){var e=this.auth||\"\";e&&(e=encodeURIComponent(e),e=e.replace(/%3A/i,\":\"),e+=\"@\");var r=this.protocol||\"\",t=this.pathname||\"\",a=this.hash||\"\",s=!1,o=\"\";this.host?s=e+this.host:this.hostname&&(s=e+(this.hostname.indexOf(\":\")===-1?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(s+=\":\"+this.port)),this.query&&c.isObject(this.query)&&Object.keys(this.query).length&&(o=j.stringify(this.query));var i=this.search||o&&\"?\"+o||\"\";return r&&\":\"!==r.substr(-1)&&(r+=\":\"),this.slashes||(!r||w[r])&&s!==!1?(s=\"//\"+(s||\"\"),t&&\"/\"!==t.charAt(0)&&(t=\"/\"+t)):s||(s=\"\"),a&&\"#\"!==a.charAt(0)&&(a=\"#\"+a),i&&\"?\"!==i.charAt(0)&&(i=\"?\"+i),t=t.replace(/[?#]/g,function(e){return encodeURIComponent(e)}),i=i.replace(\"#\",\"%23\"),r+s+t+i+a},a.prototype.resolve=function(e){return this.resolveObject(s(e,!1,!0)).format()},a.prototype.resolveObject=function(e){if(c.isString(e)){var r=new a;r.parse(e,!1,!0),e=r}for(var t=new a,s=Object.keys(this),o=0;o<s.length;o++){var i=s[o];t[i]=this[i]}if(t.hash=e.hash,\"\"===e.href)return t.href=t.format(),t;if(e.slashes&&!e.protocol){for(var n=Object.keys(e),l=0;l<n.length;l++){var h=n[l];\"protocol\"!==h&&(t[h]=e[h])}return w[t.protocol]&&t.hostname&&!t.pathname&&(t.path=t.pathname=\"/\"),t.href=t.format(),t}if(e.protocol&&e.protocol!==t.protocol){if(!w[e.protocol]){for(var u=Object.keys(e),f=0;f<u.length;f++){var d=u[f];t[d]=e[d]}return t.href=t.format(),t}if(t.protocol=e.protocol,e.host||b[e.protocol])t.pathname=e.pathname;else{for(var p=(e.pathname||\"\").split(\"/\");p.length&&!(e.host=p.shift()););e.host||(e.host=\"\"),e.hostname||(e.hostname=\"\"),\"\"!==p[0]&&p.unshift(\"\"),p.length<2&&p.unshift(\"\"),t.pathname=p.join(\"/\")}return t.search=e.search,t.query=e.query,t.host=e.host||\"\",t.auth=e.auth,t.hostname=e.hostname||e.host,t.port=e.port,(t.pathname||t.search)&&(t.path=(t.pathname||\"\")+(t.search||\"\")),t.slashes=t.slashes||e.slashes,t.href=t.format(),t}var m=t.pathname&&\"/\"===t.pathname.charAt(0),v=e.host||e.pathname&&\"/\"===e.pathname.charAt(0),y=v||m||t.host&&e.pathname,g=y,P=t.pathname&&t.pathname.split(\"/\")||[],p=e.pathname&&e.pathname.split(\"/\")||[],E=t.protocol&&!w[t.protocol];if(E&&(t.hostname=\"\",t.port=null,t.host&&(\"\"===P[0]?P[0]=t.host:P.unshift(t.host)),t.host=\"\",e.protocol&&(e.hostname=null,e.port=null,e.host&&(\"\"===p[0]?p[0]=e.host:p.unshift(e.host)),e.host=null),y=y&&(\"\"===p[0]||\"\"===P[0])),v)t.host=e.host||\"\"===e.host?e.host:t.host,t.hostname=e.hostname||\"\"===e.hostname?e.hostname:t.hostname,t.search=e.search,t.query=e.query,P=p;else if(p.length)P||(P=[]),P.pop(),P=P.concat(p),t.search=e.search,t.query=e.query;else if(!c.isNullOrUndefined(e.search)){if(E){t.hostname=t.host=P.shift();var j=!!(t.host&&t.host.indexOf(\"@\")>0)&&t.host.split(\"@\");j&&(t.auth=j.shift(),t.host=t.hostname=j.shift())}return t.search=e.search,t.query=e.query,c.isNull(t.pathname)&&c.isNull(t.search)||(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.href=t.format(),t}if(!P.length)return t.pathname=null,t.path=t.search?\"/\"+t.search:null,t.href=t.format(),t;for(var S=P.slice(-1)[0],$=(t.host||e.host||P.length>1)&&(\".\"===S||\"..\"===S)||\"\"===S,x=0,_=P.length;_>=0;_--)S=P[_],\".\"===S?P.splice(_,1):\"..\"===S?(P.splice(_,1),x++):x&&(P.splice(_,1),x--);if(!y&&!g)for(;x--;x)P.unshift(\"..\");!y||\"\"===P[0]||P[0]&&\"/\"===P[0].charAt(0)||P.unshift(\"\"),$&&\"/\"!==P.join(\"/\").substr(-1)&&P.push(\"\");var O=\"\"===P[0]||P[0]&&\"/\"===P[0].charAt(0);if(E){t.hostname=t.host=O?\"\":P.length?P.shift():\"\";var j=!!(t.host&&t.host.indexOf(\"@\")>0)&&t.host.split(\"@\");j&&(t.auth=j.shift(),t.host=t.hostname=j.shift())}return y=y||t.host&&P.length,y&&!O&&P.unshift(\"\"),P.length?t.pathname=P.join(\"/\"):(t.pathname=null,t.path=null),c.isNull(t.pathname)&&c.isNull(t.search)||(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.auth=e.auth||t.auth,t.slashes=t.slashes||e.slashes,t.href=t.format(),t},a.prototype.parseHost=function(){var e=this.host,r=u.exec(e);r&&(r=r[0],\":\"!==r&&(this.port=r.substr(1)),e=e.substr(0,e.length-r.length)),e&&(this.hostname=e)}},{\"./util\":46,punycode:41,querystring:44}],46:[function(e,r,t){\"use strict\";r.exports={isString:function(e){return\"string\"==typeof e},isObject:function(e){return\"object\"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},{}],47:[function(e,r,t){function a(e){var r=this,t=f.call(arguments,1);return new Promise(function(a,o){function i(r){var t;try{t=e.next(r)}catch(e){return o(e)}c(t)}function n(r){var t;try{t=e.throw(r)}catch(e){return o(e)}c(t)}function c(e){if(e.done)return a(e.value);var t=s.call(r,e.value);return t&&l(t)?t.then(i,n):n(new TypeError('You may only yield a function, promise, generator, array, or object, but the following object was passed: \"'+String(e.value)+'\"'))}if(\"function\"==typeof e&&(e=e.apply(r,t)),!e||\"function\"!=typeof e.next)return a(e);i()})}function s(e){return e?l(e)?e:h(e)||c(e)?a.call(this,e):\"function\"==typeof e?o.call(this,e):Array.isArray(e)?i.call(this,e):u(e)?n.call(this,e):e:e}function o(e){var r=this;return new Promise(function(t,a){e.call(r,function(e,r){if(e)return a(e);arguments.length>2&&(r=f.call(arguments,1)),t(r)})})}function i(e){return Promise.all(e.map(s,this))}function n(e){function r(e,r){t[r]=void 0,o.push(e.then(function(e){t[r]=e}))}for(var t=new e.constructor,a=Object.keys(e),o=[],i=0;i<a.length;i++){var n=a[i],c=s.call(this,e[n]);c&&l(c)?r(c,n):t[n]=e[n]}return Promise.all(o).then(function(){return t})}function l(e){return\"function\"==typeof e.then}function c(e){return\"function\"==typeof e.next&&\"function\"==typeof e.throw}function h(e){var r=e.constructor;return!!r&&(\"GeneratorFunction\"===r.name||\"GeneratorFunction\"===r.displayName||c(r.prototype))}function u(e){return Object==e.constructor}var f=Array.prototype.slice;r.exports=a.default=a.co=a,a.wrap=function(e){function r(){return a.call(this,e.apply(this,arguments))}return r.__generatorFunction__=e,r}},{}],48:[function(e,r,t){var a=\"undefined\"!=typeof JSON?JSON:e(\"jsonify\");r.exports=function(e,r){r||(r={}),\"function\"==typeof r&&(r={cmp:r});var t=r.space||\"\";\"number\"==typeof t&&(t=Array(t+1).join(\" \"));var i=\"boolean\"==typeof r.cycles&&r.cycles,n=r.replacer||function(e,r){return r},l=r.cmp&&function(e){return function(r){return function(t,a){return e({key:t,value:r[t]},{key:a,value:r[a]})}}}(r.cmp),c=[];return function e(r,h,u,f){var d=t?\"\\n\"+new Array(f+1).join(t):\"\",p=t?\": \":\":\";if(u&&u.toJSON&&\"function\"==typeof u.toJSON&&(u=u.toJSON()),u=n.call(r,h,u),void 0!==u){if(\"object\"!=typeof u||null===u)return a.stringify(u);if(s(u)){for(var m=[],v=0;v<u.length;v++){m.push(d+t+(e(u,v,u[v],f+1)||a.stringify(null)))}return\"[\"+m.join(\",\")+d+\"]\"}if(c.indexOf(u)!==-1){if(i)return a.stringify(\"__cycle__\");throw new TypeError(\"Converting circular structure to JSON\")}c.push(u);for(var y=o(u).sort(l&&l(u)),m=[],v=0;v<y.length;v++){var h=y[v],g=e(u,h,u[h],f+1);if(g){m.push(d+t+(a.stringify(h)+p+g))}}return c.splice(c.indexOf(u),1),\"{\"+m.join(\",\")+d+\"}\"}}({\"\":e},\"\",e,0)};var s=Array.isArray||function(e){return\"[object Array]\"==={}.toString.call(e)},o=Object.keys||function(e){var r=Object.prototype.hasOwnProperty||function(){return!0},t=[];for(var a in e)r.call(e,a)&&t.push(a);return t}},{jsonify:49}],49:[function(e,r,t){t.parse=e(\"./lib/parse\"),t.stringify=e(\"./lib/stringify\")},{\"./lib/parse\":50,\"./lib/stringify\":51}],50:[function(e,r,t){var a,s,o,i,n={'\"':'\"',\"\\\\\":\"\\\\\",\"/\":\"/\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"},l=function(e){throw{name:\"SyntaxError\",message:e,at:a,text:o}},c=function(e){return e&&e!==s&&l(\"Expected '\"+e+\"' instead of '\"+s+\"'\"),s=o.charAt(a),a+=1,s},h=function(){var e,r=\"\";for(\"-\"===s&&(r=\"-\",c(\"-\"));s>=\"0\"&&s<=\"9\";)r+=s,c();if(\".\"===s)for(r+=\".\";c()&&s>=\"0\"&&s<=\"9\";)r+=s;if(\"e\"===s||\"E\"===s)for(r+=s,c(),\"-\"!==s&&\"+\"!==s||(r+=s,c());s>=\"0\"&&s<=\"9\";)r+=s,c();if(e=+r,isFinite(e))return e;l(\"Bad number\")},u=function(){var e,r,t,a=\"\";if('\"'===s)for(;c();){if('\"'===s)return c(),a;if(\"\\\\\"===s)if(c(),\"u\"===s){for(t=0,r=0;r<4&&(e=parseInt(c(),16),isFinite(e));r+=1)t=16*t+e;a+=String.fromCharCode(t)}else{if(\"string\"!=typeof n[s])break;a+=n[s]}else a+=s}l(\"Bad string\")},f=function(){for(;s&&s<=\" \";)c()},d=function(){switch(s){case\"t\":return c(\"t\"),c(\"r\"),c(\"u\"),c(\"e\"),!0;case\"f\":return c(\"f\"),c(\"a\"),c(\"l\"),c(\"s\"),c(\"e\"),!1;case\"n\":return c(\"n\"),c(\"u\"),c(\"l\"),c(\"l\"),null}l(\"Unexpected '\"+s+\"'\")},p=function(){var e=[];if(\"[\"===s){if(c(\"[\"),f(),\"]\"===s)return c(\"]\"),e;for(;s;){if(e.push(i()),f(),\"]\"===s)return c(\"]\"),e;c(\",\"),f()}}l(\"Bad array\")},m=function(){var e,r={};if(\"{\"===s){if(c(\"{\"),f(),\"}\"===s)return c(\"}\"),r;for(;s;){if(e=u(),f(),c(\":\"),Object.hasOwnProperty.call(r,e)&&l('Duplicate key \"'+e+'\"'),r[e]=i(),f(),\"}\"===s)return c(\"}\"),r;c(\",\"),f()}}l(\"Bad object\")};i=function(){switch(f(),s){case\"{\":return m();case\"[\":return p();case'\"':return u();case\"-\":return h();default:return s>=\"0\"&&s<=\"9\"?h():d()}},r.exports=function(e,r){var t;return o=e,a=0,s=\" \",t=i(),f(),s&&l(\"Syntax error\"),\"function\"==typeof r?function e(t,a){var s,o,i=t[a];if(i&&\"object\"==typeof i)for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&(o=e(i,s),void 0!==o?i[s]=o:delete i[s]);return r.call(t,a,i)}({\"\":t},\"\"):t}},{}],51:[function(e,r,t){function a(e){return l.lastIndex=0,l.test(e)?'\"'+e.replace(l,function(e){var r=c[e];return\"string\"==typeof r?r:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+e+'\"'}function s(e,r){var t,l,c,h,u,f=o,d=r[e];switch(d&&\"object\"==typeof d&&\"function\"==typeof d.toJSON&&(d=d.toJSON(e)),\"function\"==typeof n&&(d=n.call(r,e,d)),typeof d){case\"string\":return a(d);case\"number\":return isFinite(d)?String(d):\"null\";case\"boolean\":case\"null\":return String(d);case\"object\":if(!d)return\"null\";if(o+=i,u=[],\"[object Array]\"===Object.prototype.toString.apply(d)){for(h=d.length,t=0;t<h;t+=1)u[t]=s(t,d)||\"null\";return c=0===u.length?\"[]\":o?\"[\\n\"+o+u.join(\",\\n\"+o)+\"\\n\"+f+\"]\":\"[\"+u.join(\",\")+\"]\",o=f,c}if(n&&\"object\"==typeof n)for(h=n.length,t=0;t<h;t+=1)l=n[t],\"string\"==typeof l&&(c=s(l,d),c&&u.push(a(l)+(o?\": \":\":\")+c));else for(l in d)Object.prototype.hasOwnProperty.call(d,l)&&(c=s(l,d),c&&u.push(a(l)+(o?\": \":\":\")+c));return c=0===u.length?\"{}\":o?\"{\\n\"+o+u.join(\",\\n\"+o)+\"\\n\"+f+\"}\":\"{\"+u.join(\",\")+\"}\",o=f,c}}var o,i,n,l=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,c={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"};r.exports=function(e,r,t){var a;if(o=\"\",i=\"\",\"number\"==typeof t)for(a=0;a<t;a+=1)i+=\" \";else\"string\"==typeof t&&(i=t);if(n=r,r&&\"function\"!=typeof r&&(\"object\"!=typeof r||\"number\"!=typeof r.length))throw new Error(\"JSON.stringify\");return s(\"\",{\"\":e})}},{}],ajv:[function(e,r,t){\"use strict\";function a(e){return g.test(e)}function s(r){function t(e,r){var t;if(\"string\"==typeof e){if(t=S(e),!t)throw new Error('no schema with key or ref \"'+e+'\"')}else{var a=R(e);t=a.validate||I(a)}var s=t(r);return t.$async===!0?\"*\"==V._opts.async?m(s):s:(V.errors=t.errors,s)}function v(e,r){var t=R(e,void 0,r);return t.validate||I(t)}function E(e,r,t,a){if(Array.isArray(e))for(var s=0;s<e.length;s++)E(e[s],void 0,t,a);else r=i.normalizeId(r||e.id),Q(r),V._schemas[r]=R(e,t,a,!0)}function b(e,r,t){E(e,r,t,!0)}function w(e,r){var s=e.$schema||V._opts.defaultMeta||j(),o=V._formats.uri;V._formats.uri=\"function\"==typeof o?a:g;var i;try{i=t(s,e)}finally{V._formats.uri=o}if(!i&&r){var n=\"schema is invalid: \"+A();if(\"log\"!=V._opts.validateSchema)throw new Error(n);console.error(n)}return i}function j(){var e=V._opts.meta;return V._opts.defaultMeta=\"object\"==typeof e?e.id||e:V._opts.v5?f.META_SCHEMA_ID:y}function S(e){var r=x(e);switch(typeof r){case\"object\":return r.validate||I(r);case\"string\":return S(r);case\"undefined\":return $(e)}}function $(e){var r=i.schema.call(V,{schema:{}},e);if(r){var t=r.schema,a=r.root,s=r.baseId,n=o.call(V,t,a,void 0,s);return V._fragments[e]=new l({ref:e,fragment:!0,schema:t,root:a,baseId:s,validate:n}),n}}function x(e){return e=i.normalizeId(e),V._schemas[e]||V._refs[e]||V._fragments[e]}function _(e){if(e instanceof RegExp)return O(V._schemas,e),void O(V._refs,e);switch(typeof e){case\"undefined\":return O(V._schemas),O(V._refs),void V._cache.clear();case\"string\":var r=x(e);return r&&V._cache.del(r.jsonStr),delete V._schemas[e],void delete V._refs[e];case\"object\":V._cache.del(c(e));var t=e.id;t&&(t=i.normalizeId(t),delete V._schemas[t],delete V._refs[t])}}function O(e,r){for(var t in e){var a=e[t];a.meta||r&&!r.test(t)||(V._cache.del(a.jsonStr),delete e[t])}}function R(e,r,t,a){if(\"object\"!=typeof e)throw new Error(\"schema should be object\");var s=c(e),o=V._cache.get(s);if(o)return o;a=a||V._opts.addUsedSchema!==!1;var n=i.normalizeId(e.id);n&&a&&Q(n);var h,u=V._opts.validateSchema!==!1&&!r;u&&!(h=e.id&&e.id==e.$schema)&&w(e,!0);var f=i.ids.call(V,e),d=new l({id:n,schema:e,localRefs:f,jsonStr:s,meta:t});return\"#\"!=n[0]&&a&&(V._refs[n]=d),V._cache.put(s,d),u&&h&&w(e,!0),d}function I(e,r){function t(){var r=e.validate,a=r.apply(null,arguments);return t.errors=r.errors,a}if(e.compiling)return e.validate=t,t.schema=e.schema,t.errors=null,t.root=r?r:t,e.schema.$async===!0&&(t.$async=!0),t;e.compiling=!0;var a;e.meta&&(a=V._opts,V._opts=V._metaOpts);var s;try{s=o.call(V,e.schema,r,e.localRefs)}finally{e.compiling=!1,e.meta&&(V._opts=a)}return e.validate=s,e.refs=s.refs,e.refVal=s.refVal,e.root=s.root,s}function A(e,r){if(e=e||V.errors,!e)return\"No errors\";r=r||{};for(var t=void 0===r.separator?\", \":r.separator,a=void 0===r.dataVar?\"data\":r.dataVar,s=\"\",o=0;o<e.length;o++){var i=e[o];i&&(s+=a+i.dataPath+\" \"+i.message+t)}return s.slice(0,-t.length)}function k(e,r){\"string\"==typeof r&&(r=new RegExp(r)),V._formats[e]=r}function q(){if(V._opts.meta!==!1){b(e(\"./refs/json-schema-draft-04.json\"),y,!0),V._refs[\"http://json-schema.org/schema\"]=y}}function D(){var e=V._opts.schemas;if(e)if(Array.isArray(e))E(e);else for(var r in e)E(e[r],r)}function L(){for(var e in V._opts.formats){k(e,V._opts.formats[e])}}function Q(e){if(V._schemas[e]||V._refs[e])throw new Error('schema with key or id \"'+e+'\" already exists')}function C(){for(var e=d.copy(V._opts),r=0;r<P.length;r++)delete e[P[r]];return e}if(!(this instanceof s))return new s(r);var V=this;r=this._opts=d.copy(r)||{},this._schemas={},this._refs={},this._fragments={},this._formats=h(r.format),this._cache=r.cache||new n,this._loadingSchemas={},this._compilations=[],this.RULES=u(),this.validate=t,this.compile=v,this.addSchema=E,this.addMetaSchema=b,this.validateSchema=w,this.getSchema=S,this.removeSchema=_,this.addFormat=k,this.errorsText=A,this._addSchema=R,this._compile=I,r.loopRequired=r.loopRequired||1/0,(r.async||r.transpile)&&p.setup(r),r.beautify===!0&&(r.beautify={indent_size:2}),\"property\"==r.errorDataPath&&(r._errorDataPathProperty=!0),this._metaOpts=C(),r.formats&&L(),q(),r.v5&&f.enable(this),\"object\"==typeof r.meta&&b(r.meta),D()}var o=e(\"./compile\"),i=e(\"./compile/resolve\"),n=e(\"./cache\"),l=e(\"./compile/schema_obj\"),c=e(\"json-stable-stringify\"),h=e(\"./compile/formats\"),u=e(\"./compile/rules\"),f=e(\"./v5\"),d=e(\"./compile/util\"),p=e(\"./async\"),m=e(\"co\");r.exports=s,s.prototype.compileAsync=p.compile;var v=e(\"./keyword\");s.prototype.addKeyword=v.add,s.prototype.getKeyword=v.get,s.prototype.removeKeyword=v.remove,s.ValidationError=e(\"./compile/validation_error\");var y=\"http://json-schema.org/draft-04/schema\",g=/^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,P=[\"removeAdditional\",\"useDefaults\",\"coerceTypes\"]},{\"./async\":1,\"./cache\":2,\"./compile\":6,\"./compile/formats\":5,\"./compile/resolve\":7,\"./compile/rules\":8,\"./compile/schema_obj\":9,\"./compile/util\":11,\"./compile/validation_error\":12,\"./keyword\":37,\"./refs/json-schema-draft-04.json\":38,\"./v5\":40,co:47,\"json-stable-stringify\":48}]},{},[])(\"ajv\")});\n//# sourceMappingURL=ajv.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-schema/~/ajv/dist/ajv.min.js\n// module id = 30\n// module chunks = 0","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-schema/~/mustache/mustache.js\n// module id = 31\n// module chunks = 0","module.exports = {\n\t\"swagger\": \"2.0\",\n\t\"basePath\": \"{{{ config.OPENAPI_BASEPATH }}}\",\n\t\"host\": \"{{ config.OPENAPI_HOST }}\",\n\t\"info\": {\n\t\t\"title\": \"Anno Server API\",\n\t\t\"version\": \"0.0.1\",\n\t\t\"description\": \" See [Web Annotation Protocol](https://www.w3.org/TR/annotation-protocol) \"\n\t},\n\t\"consumes\": [\n\t\t\"application/ld+json\"\n\t],\n\t\"produces\": [\n\t\t\"application/ld+json;profile=\\\"http://www.w3.org/ns/anno.jsonld\\\"\"\n\t],\n\t\"tags\": [\n\t\t{\n\t\t\t\"name\": \"anno\",\n\t\t\t\"description\": \"Web Annotation Protocol\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"extensions\",\n\t\t\t\"description\": \"Extensions to Web Annotation Protocol\"\n\t\t}\n\t],\n\t\"securityDefinitions\": {\n\t\t\"Bearer\": {\n\t\t\t\"type\": \"apiKey\",\n\t\t\t\"name\": \"Authorization\",\n\t\t\t\"description\": \"Format: 'Bearer HIER_DAS_TOKEN'\",\n\t\t\t\"in\": \"header\"\n\t\t}\n\t},\n\t\"paths\": {\n\t\t\"/{{ config.OPENAPI_PATH }}\": {\n\t\t\t\"head\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get all annotations that adhere to query without body/target\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"name\": \"$target\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"format\": \"url\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get all annotations that adhere to query\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"name\": \"target.source\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"format\": \"url\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"header\",\n\t\t\t\t\t\t\"name\": \"Prefer\",\n\t\t\t\t\t\t\"description\": \"<a href=\\\"https://www.w3.org/TR/annotation-protocol/#container-representations\\\">Preferred Container Representation</a>\",\n\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\"return=representation;include=\\\"http://www.w3.org/ns/ldp#PreferMinimalContainer\\\"\",\n\t\t\t\t\t\t\t\"return=representation;include=\\\"http://www.w3.org/ns/oa#PreferContainedIRIs\",\n\t\t\t\t\t\t\t\"return=representation;include=\\\"http://www.w3.org/ns/oa#PreferContainedDescriptions\\\"\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Bearer\": []\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Post a new annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"description\": \"New annotation to post\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"header\",\n\t\t\t\t\t\t\"name\": \"Slug\",\n\t\t\t\t\t\t\"description\": \"Preferred annotation ID\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"delete\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"Bearer\": []\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Wipe the store\",\n\t\t\t\t\"parameters\": [],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/{{ config.OPENAPI_PATH }}/{annoId}\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"head\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single annotation without body/target\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"delete\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Delete an annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Annotation deleted\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Annotation not found\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"put\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"anno\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Store a new revision of an annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"description\": \"Updated annotation\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"Created a new revision\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Annotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/anno/{annoId}-rev-{revId}\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single revision of one annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"revId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the revision\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"head\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Get a single revision of one annotation without body/target\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"revId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the revision\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"all okay\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/anno/{annoId}/reply\": {\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"extensions\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Reply to an annotation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"name\": \"annoId\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"ID of the annotation\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"Reply to post\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/AnnotationReply\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"201\": {\n\t\t\t\t\t\t\"description\": \"Reply created\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Annotation not found\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-schema/openapi.json\n// module id = 32\n// module chunks = 0","module.exports = require('./lib/axios');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/index.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/axios.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/cancel/CancelToken.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/Axios.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/InterceptorManager.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/dispatchRequest.js\n// module id = 38\n// module chunks = 0","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.response = response;\n  return error;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/enhanceError.js\n// module id = 39\n// module chunks = 0","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response\n    ));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/settle.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/core/transformData.js\n// module id = 41\n// module chunks = 0","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/btoa.js\n// module id = 42\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/buildURL.js\n// module id = 43\n// module chunks = 0","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/combineURLs.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/cookies.js\n// module id = 45\n// module chunks = 0","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/isAbsoluteURL.js\n// module id = 46\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/isURLSameOrigin.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/normalizeHeaderName.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/parseHeaders.js\n// module id = 49\n// module chunks = 0","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-http/~/axios/lib/helpers/spread.js\n// module id = 50\n// module chunks = 0","module.exports.BinarySearchTree = require('./lib/bst');\nmodule.exports.AVLTree = require('./lib/avltree');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/binary-search-tree/index.js\n// module id = 51\n// module chunks = 0","/**\n * Self-balancing binary search tree using the AVL implementation\n */\nvar BinarySearchTree = require('./bst')\n  , customUtils = require('./customUtils')\n  , util = require('util')\n  , _ = require('underscore')\n  ;\n\n\n/**\n * Constructor\n * We can't use a direct pointer to the root node (as in the simple binary search tree)\n * as the root will change during tree rotations\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction AVLTree (options) {\n  this.tree = new _AVLTree(options);\n}\n\n\n/**\n * Constructor of the internal AVLTree\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction _AVLTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n/**\n * Inherit basic functions from the basic binary search tree\n */\nutil.inherits(_AVLTree, BinarySearchTree);\n\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\nAVLTree._AVLTree = _AVLTree;\n\n\n/**\n * Check the recorded height is correct for every node\n * Throws if one height doesn't match\n */\n_AVLTree.prototype.checkHeightCorrect = function () {\n  var leftH, rightH;\n\n  if (!this.hasOwnProperty('key')) { return; }   // Empty tree\n\n  if (this.left && this.left.height === undefined) { throw new Error(\"Undefined height for node \" + this.left.key); }\n  if (this.right && this.right.height === undefined) { throw new Error(\"Undefined height for node \" + this.right.key); }\n  if (this.height === undefined) { throw new Error(\"Undefined height for node \" + this.key); }\n\n  leftH = this.left ? this.left.height : 0;\n  rightH = this.right ? this.right.height : 0;\n\n  if (this.height !== 1 + Math.max(leftH, rightH)) { throw new Error(\"Height constraint failed for node \" + this.key); }\n  if (this.left) { this.left.checkHeightCorrect(); }\n  if (this.right) { this.right.checkHeightCorrect(); }\n};\n\n\n/**\n * Return the balance factor\n */\n_AVLTree.prototype.balanceFactor = function () {\n  var leftH = this.left ? this.left.height : 0\n    , rightH = this.right ? this.right.height : 0\n    ;\n  return leftH - rightH;\n};\n\n\n/**\n * Check that the balance factors are all between -1 and 1\n */\n_AVLTree.prototype.checkBalanceFactors = function () {\n  if (Math.abs(this.balanceFactor()) > 1) { throw new Error('Tree is unbalanced at node ' + this.key); }\n\n  if (this.left) { this.left.checkBalanceFactors(); }\n  if (this.right) { this.right.checkBalanceFactors(); }\n};\n\n\n/**\n * When checking if the BST conditions are met, also check that the heights are correct\n * and the tree is balanced\n */\n_AVLTree.prototype.checkIsAVLT = function () {\n  _AVLTree.super_.prototype.checkIsBST.call(this);\n  this.checkHeightCorrect();\n  this.checkBalanceFactors();\n};\nAVLTree.prototype.checkIsAVLT = function () { this.tree.checkIsAVLT(); };\n\n\n/**\n * Perform a right rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.rightRotation = function () {\n  var q = this\n    , p = this.left\n    , b\n    , ah, bh, ch;\n\n  if (!p) { return this; }   // No change\n\n  b = p.right;\n\n  // Alter tree structure\n  if (q.parent) {\n    p.parent = q.parent;\n    if (q.parent.left === q) { q.parent.left = p; } else { q.parent.right = p; }\n  } else {\n    p.parent = null;\n  }\n  p.right = q;\n  q.parent = p;\n  q.left = b;\n  if (b) { b.parent = q; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  q.height = Math.max(bh, ch) + 1;\n  p.height = Math.max(ah, q.height) + 1;\n\n  return p;\n};\n\n\n/**\n * Perform a left rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.leftRotation = function () {\n  var p = this\n    , q = this.right\n    , b\n    , ah, bh, ch;\n\n  if (!q) { return this; }   // No change\n\n  b = q.left;\n\n  // Alter tree structure\n  if (p.parent) {\n    q.parent = p.parent;\n    if (p.parent.left === p) { p.parent.left = q; } else { p.parent.right = q; }\n  } else {\n    q.parent = null;\n  }\n  q.left = p;\n  p.parent = q;\n  p.right = b;\n  if (b) { b.parent = p; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  p.height = Math.max(ah, bh) + 1;\n  q.height = Math.max(ch, p.height) + 1;\n\n  return q;\n};\n\n\n/**\n * Modify the tree if its right subtree is too small compared to the left\n * Return the new root if any\n */\n_AVLTree.prototype.rightTooSmall = function () {\n  if (this.balanceFactor() <= 1) { return this; }   // Right is not too small, don't change\n\n  if (this.left.balanceFactor() < 0) {\n    this.left.leftRotation();\n  }\n\n  return this.rightRotation();\n};\n\n\n/**\n * Modify the tree if its left subtree is too small compared to the right\n * Return the new root if any\n */\n_AVLTree.prototype.leftTooSmall = function () {\n  if (this.balanceFactor() >= -1) { return this; }   // Left is not too small, don't change\n\n  if (this.right.balanceFactor() > 0) {\n    this.right.rightRotation();\n  }\n\n  return this.leftRotation();\n};\n\n\n/**\n * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n * in the insert and delete functions).\n * Returns the new root of the tree\n * Of course, the first element of the path must be the root of the tree\n */\n_AVLTree.prototype.rebalanceAlongPath = function (path) {\n  var newRoot = this\n    , rotated\n    , i;\n\n  if (!this.hasOwnProperty('key')) { delete this.height; return this; }   // Empty tree\n\n  // Rebalance the tree and update all heights\n  for (i = path.length - 1; i >= 0; i -= 1) {\n    path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0);\n\n    if (path[i].balanceFactor() > 1) {\n      rotated = path[i].rightTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n\n    if (path[i].balanceFactor() < -1) {\n      rotated = path[i].leftTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n  }\n\n  return newRoot;\n};\n\n\n/**\n * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n * Return a pointer to the root node, which may have changed\n */\n_AVLTree.prototype.insert = function (key, value) {\n  var insertPath = []\n    , currentNode = this\n    ;\n\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    this.height = 1;\n    return this;\n  }\n\n  // Insert new leaf at the right place\n  while (true) {\n    // Same key: no change in the tree structure\n    if (currentNode.compareKeys(currentNode.key, key) === 0) {\n      if (currentNode.unique) {\n        var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n        err.key = key;\n        err.errorType = 'uniqueViolated';\n        throw err;\n      } else {\n        currentNode.data.push(value);\n      }\n      return this;\n    }\n\n    insertPath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (!currentNode.left) {\n        insertPath.push(currentNode.createLeftChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.left;\n      }\n    } else {\n      if (!currentNode.right) {\n        insertPath.push(currentNode.createRightChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.right;\n      }\n    }\n  }\n\n  return this.rebalanceAlongPath(insertPath);\n};\n\n// Insert in the internal tree, update the pointer to the root if needed\nAVLTree.prototype.insert = function (key, value) {\n  var newTree = this.tree.insert(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Delete a key or just a value and return the new root of the tree\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n_AVLTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    , currentNode = this\n    , deletePath = []\n    ;\n\n  if (!this.hasOwnProperty('key')) { return this; }   // Empty tree\n\n  // Either no match is found and the function will return from within the loop\n  // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n  while (true) {\n    if (currentNode.compareKeys(key, currentNode.key) === 0) { break; }\n\n    deletePath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (currentNode.left) {\n        currentNode = currentNode.left;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    } else {\n      // currentNode.compareKeys(key, currentNode.key) is > 0\n      if (currentNode.right) {\n        currentNode = currentNode.right;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    }\n  }\n\n  // Delete only a value (no tree modification)\n  if (currentNode.data.length > 1 && value) {\n    currentNode.data.forEach(function (d) {\n      if (!currentNode.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    currentNode.data = newData;\n    return this;\n  }\n\n  // Delete a whole node\n\n  // Leaf\n  if (!currentNode.left && !currentNode.right) {\n    if (currentNode === this) {   // This leaf is also the root\n      delete currentNode.key;\n      currentNode.data = [];\n      delete currentNode.height;\n      return this;\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = null;\n      } else {\n        currentNode.parent.right = null;\n      }\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with only one child\n  if (!currentNode.left || !currentNode.right) {\n    replaceWith = currentNode.left ? currentNode.left : currentNode.right;\n\n    if (currentNode === this) {   // This node is also the root\n      replaceWith.parent = null;\n      return replaceWith;   // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      } else {\n        currentNode.parent.right = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with two children\n  // Use the in-order predecessor (no need to randomize since we actively rebalance)\n  deletePath.push(currentNode);\n  replaceWith = currentNode.left;\n\n  // Special case: the in-order predecessor is right below the node to delete\n  if (!replaceWith.right) {\n    currentNode.key = replaceWith.key;\n    currentNode.data = replaceWith.data;\n    currentNode.left = replaceWith.left;\n    if (replaceWith.left) { replaceWith.left.parent = currentNode; }\n    return this.rebalanceAlongPath(deletePath);\n  }\n\n  // After this loop, replaceWith is the right-most leaf in the left subtree\n  // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n  while (true) {\n    if (replaceWith.right) {\n      deletePath.push(replaceWith);\n      replaceWith = replaceWith.right;\n    } else {\n      break;\n    }\n  }\n\n  currentNode.key = replaceWith.key;\n  currentNode.data = replaceWith.data;\n\n  replaceWith.parent.right = replaceWith.left;\n  if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n\n  return this.rebalanceAlongPath(deletePath);\n};\n\n// Delete a value\nAVLTree.prototype.delete = function (key, value) {\n  var newTree = this.tree.delete(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments);\n  };\n});\n\n\n// Interface\nmodule.exports = AVLTree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/binary-search-tree/lib/avltree.js\n// module id = 52\n// module chunks = 0","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/localforage/dist/localforage.js\n// module id = 53\n// module chunks = 0","/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\n\nvar localforage = require('localforage')\n\n// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\nlocalforage.config({\n  name: 'NeDB'\n, storeName: 'nedbdata'\n});\n\n\nfunction exists (filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {   // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\n\n\nfunction rename (filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () { return callback(); });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () { return callback(); });\n      });\n    }\n  });\n}\n\n\nfunction writeFile (filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.setItem(filename, contents, function () { return callback(); });\n}\n\n\nfunction appendFile (filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () { return callback(); });\n  });\n}\n\n\nfunction readFile (filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.getItem(filename, function (err, contents) { return callback(null, contents || ''); });\n}\n\n\nfunction unlink (filename, callback) {\n  localforage.removeItem(filename, function () { return callback(); });\n}\n\n\n// Nothing to do, no directories will be used on the browser\nfunction mkdirp (dir, callback) {\n  return callback();\n}\n\n\n// Nothing to do, no data corruption possible in the brower\nfunction ensureDatafileIntegrity (filename, callback) {\n  return callback(null);\n}\n\n\n// Interface\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile;   // No need for a crash safe function in the browser\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/browser-version/browser-specific/lib/storage.js\n// module id = 54\n// module chunks = 0","var Datastore = require('./lib/datastore');\n\nmodule.exports = Datastore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/index.js\n// module id = 55\n// module chunks = 0","/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model')\n  , _ = require('underscore')\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/lib/cursor.js\n// module id = 56\n// module chunks = 0","var customUtils = require('./customUtils')\n  , model = require('./model')\n  , async = require('async')\n  , Executor = require('./executor')\n  , Index = require('./indexes')\n  , util = require('util')\n  , _ = require('underscore')\n  , Persistence = require('./persistence')\n  , Cursor = require('./cursor')\n  ;\n\n\n/**\n * Create a new collection\n * @param {String} options.filename Optional, datastore will be in-memory only if not provided\n * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)\n * @param {Boolean} options.inMemoryOnly Optional, defaults to false\n * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n * @param {Boolean} options.autoload Optional, defaults to false\n * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown\n * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks\n * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt\n * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting\n *\n * Event Emitter - Events\n * * compaction.done - Fired whenever a compaction operation was finished\n */\nfunction Datastore (options) {\n  var filename;\n\n  // Retrocompatibility with v0.6 and before\n  if (typeof options === 'string') {\n    filename = options;\n    this.inMemoryOnly = false;   // Default\n  } else {\n    options = options || {};\n    filename = options.filename;\n    this.inMemoryOnly = options.inMemoryOnly || false;\n    this.autoload = options.autoload || false;\n    this.timestampData = options.timestampData || false;\n  }\n\n  // Determine whether in memory or persistent\n  if (!filename || typeof filename !== 'string' || filename.length === 0) {\n    this.filename = null;\n    this.inMemoryOnly = true;\n  } else {\n    this.filename = filename;\n  }\n\n  // String comparison function\n  this.compareStrings = options.compareStrings;\n\n  // Persistence handling\n  this.persistence = new Persistence({ db: this, nodeWebkitAppName: options.nodeWebkitAppName\n                                      , afterSerialization: options.afterSerialization\n                                      , beforeDeserialization: options.beforeDeserialization\n                                      , corruptAlertThreshold: options.corruptAlertThreshold\n                                      });\n\n  // This new executor is ready if we don't use persistence\n  // If we do, it will only be ready once loadDatabase is called\n  this.executor = new Executor();\n  if (this.inMemoryOnly) { this.executor.ready = true; }\n\n  // Indexed by field name, dot notation can be used\n  // _id is always indexed and since _ids are generated randomly the underlying\n  // binary is always well-balanced\n  this.indexes = {};\n  this.indexes._id = new Index({ fieldName: '_id', unique: true });\n  this.ttlIndexes = {};\n\n  // Queue a load of the database right away and call the onload handler\n  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n  if (this.autoload) { this.loadDatabase(options.onload || function (err) {\n    if (err) { throw err; }\n  }); }\n}\n\nutil.inherits(Datastore, require('events').EventEmitter);\n\n\n/**\n * Load the database from the datafile, and trigger the execution of buffered commands if any\n */\nDatastore.prototype.loadDatabase = function () {\n  this.executor.push({ this: this.persistence, fn: this.persistence.loadDatabase, arguments: arguments }, true);\n};\n\n\n/**\n * Get an array of all the data in the database\n */\nDatastore.prototype.getAllData = function () {\n  return this.indexes._id.getAll();\n};\n\n\n/**\n * Reset all currently defined indexes\n */\nDatastore.prototype.resetIndexes = function (newData) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].reset(newData);\n  });\n};\n\n\n/**\n * Ensure an index is kept for this field. Same parameters as lib/indexes\n * For now this function is synchronous, we need to test how much time it takes\n * We use an async API for consistency with the rest of the code\n * @param {String} options.fieldName\n * @param {Boolean} options.unique\n * @param {Boolean} options.sparse\n * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.ensureIndex = function (options, cb) {\n  var err\n    , callback = cb || function () {};\n\n  options = options || {};\n\n  if (!options.fieldName) {\n    err = new Error(\"Cannot create an index without a fieldName\");\n    err.missingFieldName = true;\n    return callback(err);\n  }\n  if (this.indexes[options.fieldName]) { return callback(null); }\n\n  this.indexes[options.fieldName] = new Index(options);\n  if (options.expireAfterSeconds !== undefined) { this.ttlIndexes[options.fieldName] = options.expireAfterSeconds; }   // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n  try {\n    this.indexes[options.fieldName].insert(this.getAllData());\n  } catch (e) {\n    delete this.indexes[options.fieldName];\n    return callback(e);\n  }\n\n  // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n  this.persistence.persistNewState([{ $$indexCreated: options }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Remove an index\n * @param {String} fieldName\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.removeIndex = function (fieldName, cb) {\n  var callback = cb || function () {};\n\n  delete this.indexes[fieldName];\n\n  this.persistence.persistNewState([{ $$indexRemoved: fieldName }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Add one or several document(s) to all indexes\n */\nDatastore.prototype.addToIndexes = function (doc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].insert(doc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the insert on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].remove(doc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove one or several document(s) from all indexes\n */\nDatastore.prototype.removeFromIndexes = function (doc) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].remove(doc);\n  });\n};\n\n\n/**\n * Update one or several documents in all indexes\n * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs\n * If one update violates a constraint, all changes are rolled back\n */\nDatastore.prototype.updateIndexes = function (oldDoc, newDoc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].update(oldDoc, newDoc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the update on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Return the list of candidates for a given query\n * Crude implementation for now, we return the candidates given by the first usable index if any\n * We try the following query types, in this order: basic match, $in match, comparison match\n * One way to make it better would be to enable the use of multiple indexes if the first usable index\n * returns too much data. I may do it in the future.\n *\n * Returned candidates will be scanned to find and remove all expired documents\n *\n * @param {Query} query\n * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations\n * @param {Function} callback Signature err, docs\n */\nDatastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {\n  var indexNames = Object.keys(this.indexes)\n    , self = this\n    , usableQueryKeys;\n\n  if (typeof dontExpireStaleDocs === 'function') {\n    callback = dontExpireStaleDocs;\n    dontExpireStaleDocs = false;\n  }\n\n  async.waterfall([\n  // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n  function (cb) {\n    // For a basic match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));\n    }\n\n    // For a $in match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && query[k].hasOwnProperty('$in')) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));\n    }\n\n    // For a comparison match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));\n    }\n\n    // By default, return all the DB data\n    return cb(null, self.getAllData());\n  }\n  // STEP 2: remove all expired documents\n  , function (docs) {\n    if (dontExpireStaleDocs) { return callback(null, docs); }\n\n    var expiredDocsIds = [], validDocs = [], ttlIndexesFieldNames = Object.keys(self.ttlIndexes);\n\n    docs.forEach(function (doc) {\n      var valid = true;\n      ttlIndexesFieldNames.forEach(function (i) {\n        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {\n          valid = false;\n        }\n      });\n      if (valid) { validDocs.push(doc); } else { expiredDocsIds.push(doc._id); }\n    });\n\n    async.eachSeries(expiredDocsIds, function (_id, cb) {\n      self._remove({ _id: _id }, {}, function (err) {\n        if (err) { return callback(err); }\n        return cb();\n      });\n    }, function (err) {\n      return callback(null, validDocs);\n    });\n  }]);\n};\n\n\n/**\n * Insert a new document\n * @param {Function} cb Optional callback, signature: err, insertedDoc\n *\n * @api private Use Datastore.insert which has the same signature\n */\nDatastore.prototype._insert = function (newDoc, cb) {\n  var callback = cb || function () {}\n    , preparedDoc\n    ;\n\n  try {\n    preparedDoc = this.prepareDocumentForInsertion(newDoc)\n    this._insertInCache(preparedDoc);\n  } catch (e) {\n    return callback(e);\n  }\n\n  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {\n    if (err) { return callback(err); }\n    return callback(null, model.deepCopy(preparedDoc));\n  });\n};\n\n/**\n * Create a new _id that's not already in use\n */\nDatastore.prototype.createNewId = function () {\n  var tentativeId = customUtils.uid(16);\n  // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n  if (this.indexes._id.getMatching(tentativeId).length > 0) {\n    tentativeId = this.createNewId();\n  }\n  return tentativeId;\n};\n\n/**\n * Prepare a document (or array of documents) to be inserted in a database\n * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n * @api private\n */\nDatastore.prototype.prepareDocumentForInsertion = function (newDoc) {\n  var preparedDoc, self = this;\n\n  if (util.isArray(newDoc)) {\n    preparedDoc = [];\n    newDoc.forEach(function (doc) { preparedDoc.push(self.prepareDocumentForInsertion(doc)); });\n  } else {\n    preparedDoc = model.deepCopy(newDoc);\n    if (preparedDoc._id === undefined) { preparedDoc._id = this.createNewId(); }\n    var now = new Date();\n    if (this.timestampData && preparedDoc.createdAt === undefined) { preparedDoc.createdAt = now; }\n    if (this.timestampData && preparedDoc.updatedAt === undefined) { preparedDoc.updatedAt = now; }\n    model.checkObject(preparedDoc);\n  }\n\n  return preparedDoc;\n};\n\n/**\n * If newDoc is an array of documents, this will insert all documents in the cache\n * @api private\n */\nDatastore.prototype._insertInCache = function (preparedDoc) {\n  if (util.isArray(preparedDoc)) {\n    this._insertMultipleDocsInCache(preparedDoc);\n  } else {\n    this.addToIndexes(preparedDoc);\n  }\n};\n\n/**\n * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n * inserts and throws the error\n * @api private\n */\nDatastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {\n  var i, failingI, error;\n\n  for (i = 0; i < preparedDocs.length; i += 1) {\n    try {\n      this.addToIndexes(preparedDocs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.removeFromIndexes(preparedDocs[i]);\n    }\n\n    throw error;\n  }\n};\n\nDatastore.prototype.insert = function () {\n  this.executor.push({ this: this, fn: this._insert, arguments: arguments });\n};\n\n\n/**\n * Count all documents matching the query\n * @param {Object} query MongoDB-style query\n */\nDatastore.prototype.count = function(query, callback) {\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    return callback(null, docs.length);\n  });\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find all documents matching the query\n * If no callback is passed, we return the cursor so that user can limit, skip and finally exec\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.find = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    var res = [], i;\n\n    if (err) { return callback(err); }\n\n    for (i = 0; i < docs.length; i += 1) {\n      res.push(model.deepCopy(docs[i]));\n    }\n    return callback(null, res);\n  });\n\n  cursor.projection(projection);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find one document matching the query\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.findOne = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    if (docs.length === 1) {\n      return callback(null, model.deepCopy(docs[0]));\n    } else {\n      return callback(null, null);\n    }\n  });\n\n  cursor.projection(projection).limit(1);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Update all docs matching query\n * @param {Object} query\n * @param {Object} updateQuery\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n *                 options.upsert If true, document is inserted if the query doesn't match anything\n *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)\n * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)\n *                      If update was an upsert, upsert flag is set to true\n *                      affectedDocuments can be one of the following:\n *                        * For an upsert, the upserted document\n *                        * For an update with returnUpdatedDocs option false, null\n *                        * For an update with returnUpdatedDocs true and multi false, the updated document\n *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents\n *\n * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,\n *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert\n *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of\n *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the\n *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on\n *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary.\n *\n * @api private Use Datastore.update which has the same signature\n */\nDatastore.prototype._update = function (query, updateQuery, options, cb) {\n  var callback\n    , self = this\n    , numReplaced = 0\n    , multi, upsert\n    , i\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n  upsert = options.upsert !== undefined ? options.upsert : false;\n\n  async.waterfall([\n  function (cb) {   // If upsert option is set, check whether we need to insert the doc\n    if (!upsert) { return cb(); }\n\n    // Need to use an internal function not tied to the executor to avoid deadlock\n    var cursor = new Cursor(self, query);\n    cursor.limit(1)._exec(function (err, docs) {\n      if (err) { return callback(err); }\n      if (docs.length === 1) {\n        return cb();\n      } else {\n        var toBeInserted;\n\n        try {\n          model.checkObject(updateQuery);\n          // updateQuery is a simple object with no modifier, use it as the document to insert\n          toBeInserted = updateQuery;\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          try {\n            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);\n          } catch (err) {\n            return callback(err);\n          }\n        }\n\n        return self._insert(toBeInserted, function (err, newDoc) {\n          if (err) { return callback(err); }\n          return callback(null, 1, newDoc, true);\n        });\n      }\n    });\n  }\n  , function () {   // Perform the update\n    var modifiedDoc , modifications = [], createdAt;\n\n    self.getCandidates(query, function (err, candidates) {\n      if (err) { return callback(err); }\n\n      // Preparing update (if an error is thrown here neither the datafile nor\n      // the in-memory indexes are affected)\n      try {\n        for (i = 0; i < candidates.length; i += 1) {\n          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {\n            numReplaced += 1;\n            if (self.timestampData) { createdAt = candidates[i].createdAt; }\n            modifiedDoc = model.modify(candidates[i], updateQuery);\n            if (self.timestampData) {\n              modifiedDoc.createdAt = createdAt;\n              modifiedDoc.updatedAt = new Date();\n            }\n            modifications.push({ oldDoc: candidates[i], newDoc: modifiedDoc });\n          }\n        }\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Change the docs in memory\n      try {\n        self.updateIndexes(modifications);\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Update the datafile\n      var updatedDocs = _.pluck(modifications, 'newDoc');\n      self.persistence.persistNewState(updatedDocs, function (err) {\n        if (err) { return callback(err); }\n        if (!options.returnUpdatedDocs) {\n          return callback(null, numReplaced);\n        } else {\n          var updatedDocsDC = [];\n          updatedDocs.forEach(function (doc) { updatedDocsDC.push(model.deepCopy(doc)); });\n          if (! multi) { updatedDocsDC = updatedDocsDC[0]; }\n          return callback(null, numReplaced, updatedDocsDC);\n        }\n      });\n    });\n  }]);\n};\n\nDatastore.prototype.update = function () {\n  this.executor.push({ this: this, fn: this._update, arguments: arguments });\n};\n\n\n/**\n * Remove all docs matching the query\n * For now very naive implementation (similar to update)\n * @param {Object} query\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n * @param {Function} cb Optional callback, signature: err, numRemoved\n *\n * @api private Use Datastore.remove which has the same signature\n */\nDatastore.prototype._remove = function (query, options, cb) {\n  var callback\n    , self = this, numRemoved = 0, removedDocs = [], multi\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n\n  this.getCandidates(query, true, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      candidates.forEach(function (d) {\n        if (model.match(d, query) && (multi || numRemoved === 0)) {\n          numRemoved += 1;\n          removedDocs.push({ $$deleted: true, _id: d._id });\n          self.removeFromIndexes(d);\n        }\n      });\n    } catch (err) { return callback(err); }\n\n    self.persistence.persistNewState(removedDocs, function (err) {\n      if (err) { return callback(err); }\n      return callback(null, numRemoved);\n    });\n  });\n};\n\nDatastore.prototype.remove = function () {\n  this.executor.push({ this: this, fn: this._remove, arguments: arguments });\n};\n\n\n\nmodule.exports = Datastore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/lib/datastore.js\n// module id = 57\n// module chunks = 0","/**\n * Responsible for sequentially executing actions on the database\n */\n\nvar async = require('async')\n  ;\n\nfunction Executor () {\n  this.buffer = [];\n  this.ready = false;\n\n  // This queue will execute all commands, one-by-one in order\n  this.queue = async.queue(function (task, cb) {\n    var newArguments = [];\n\n    // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array\n    for (var i = 0; i < task.arguments.length; i += 1) { newArguments.push(task.arguments[i]); }\n    var lastArg = task.arguments[task.arguments.length - 1];\n\n    // Always tell the queue task is complete. Execute callback if any was given.\n    if (typeof lastArg === 'function') {\n      // Callback was supplied\n      newArguments[newArguments.length - 1] = function () {\n        if (typeof setImmediate === 'function') {\n           setImmediate(cb);\n        } else {\n          process.nextTick(cb);\n        }\n        lastArg.apply(null, arguments);\n      };\n    } else if (!lastArg && task.arguments.length !== 0) {\n      // false/undefined/null supplied as callbback\n      newArguments[newArguments.length - 1] = function () { cb(); };\n    } else {\n      // Nothing supplied as callback\n      newArguments.push(function () { cb(); });\n    }\n\n\n    task.fn.apply(task.this, newArguments);\n  }, 1);\n}\n\n\n/**\n * If executor is ready, queue task (and process it immediately if executor was idle)\n * If not, buffer task for later processing\n * @param {Object} task\n *                 task.this - Object to use as this\n *                 task.fn - Function to execute\n *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)\n *                                                                 and the last argument cannot be false/undefined/null\n * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready\n */\nExecutor.prototype.push = function (task, forceQueuing) {\n  if (this.ready || forceQueuing) {\n    this.queue.push(task);\n  } else {\n    this.buffer.push(task);\n  }\n};\n\n\n/**\n * Queue all tasks in buffer (in the same order they came in)\n * Automatically sets executor as ready\n */\nExecutor.prototype.processBuffer = function () {\n  var i;\n  this.ready = true;\n  for (i = 0; i < this.buffer.length; i += 1) { this.queue.push(this.buffer[i]); }\n  this.buffer = [];\n};\n\n\n\n// Interface\nmodule.exports = Executor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/lib/executor.js\n// module id = 58\n// module chunks = 0","/**\n * Handle every persistence-related task\n * The interface Datastore expects to be implemented is\n * * Persistence.loadDatabase(callback) and callback has signature err\n * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err\n */\n\nvar storage = require('./storage')\n  , path = require('path')\n  , model = require('./model')\n  , async = require('async')\n  , customUtils = require('./customUtils')\n  , Index = require('./indexes')\n  ;\n\n\n/**\n * Create a new Persistence object for database options.db\n * @param {Datastore} options.db\n * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n */\nfunction Persistence (options) {\n  var i, j, randomString;\n\n  this.db = options.db;\n  this.inMemoryOnly = this.db.inMemoryOnly;\n  this.filename = this.db.filename;\n  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;\n\n  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {\n    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");\n  }\n\n  // After serialization and before deserialization hooks with some basic sanity checks\n  if (options.afterSerialization && !options.beforeDeserialization) {\n    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  if (!options.afterSerialization && options.beforeDeserialization) {\n    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  this.afterSerialization = options.afterSerialization || function (s) { return s; };\n  this.beforeDeserialization = options.beforeDeserialization || function (s) { return s; };\n  for (i = 1; i < 30; i += 1) {\n    for (j = 0; j < 10; j += 1) {\n      randomString = customUtils.uid(i);\n      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");\n      }\n    }\n  }\n\n  // For NW apps, store data in the same directory where NW stores application data\n  if (this.filename && options.nodeWebkitAppName) {\n    console.log(\"==================================================================\");\n    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");\n    console.log(\"To get the path to the directory where Node Webkit stores the data\");\n    console.log(\"for your app, use the internal nw.gui module like this\");\n    console.log(\"require('nw.gui').App.dataPath\");\n    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");\n    console.log(\"==================================================================\");\n    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);\n  }\n};\n\n\n/**\n * Check if a directory exists and create it on the fly if it is not the case\n * cb is optional, signature: err\n */\nPersistence.ensureDirectoryExists = function (dir, cb) {\n  var callback = cb || function () {}\n    ;\n\n  storage.mkdirp(dir, function (err) { return callback(err); });\n};\n\n\n\n\n/**\n * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores\n * data for this application. Probably the best place to store data\n */\nPersistence.getNWAppFilename = function (appName, relativeFilename) {\n  var home;\n\n  switch (process.platform) {\n    case 'win32':\n    case 'win64':\n      home = process.env.LOCALAPPDATA || process.env.APPDATA;\n      if (!home) { throw new Error(\"Couldn't find the base application data folder\"); }\n      home = path.join(home, appName);\n      break;\n    case 'darwin':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, 'Library', 'Application Support', appName);\n      break;\n    case 'linux':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, '.config', appName);\n      break;\n    default:\n      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);\n      break;\n  }\n\n  return path.join(home, 'nedb-data', relativeFilename);\n}\n\n\n/**\n * Persist cached database\n * This serves as a compaction function since the cache always contains only the number of documents in the collection\n * while the data file is append-only so it may grow larger\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.persistCachedDatabase = function (cb) {\n  var callback = cb || function () {}\n    , toPersist = ''\n    , self = this\n    ;\n\n  if (this.inMemoryOnly) { return callback(null); }\n\n  this.db.getAllData().forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n  Object.keys(this.db.indexes).forEach(function (fieldName) {\n    if (fieldName != \"_id\") {   // The special _id index is managed by datastore.js, the others need to be persisted\n      toPersist += self.afterSerialization(model.serialize({ $$indexCreated: { fieldName: fieldName, unique: self.db.indexes[fieldName].unique, sparse: self.db.indexes[fieldName].sparse }})) + '\\n';\n    }\n  });\n\n  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {\n    if (err) { return callback(err); }\n    self.db.emit('compaction.done');\n    return callback(null);\n  });\n};\n\n\n/**\n * Queue a rewrite of the datafile\n */\nPersistence.prototype.compactDatafile = function () {\n  this.db.executor.push({ this: this, fn: this.persistCachedDatabase, arguments: [] });\n};\n\n\n/**\n * Set automatic compaction every interval ms\n * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds\n */\nPersistence.prototype.setAutocompactionInterval = function (interval) {\n  var self = this\n    , minInterval = 5000\n    , realInterval = Math.max(interval || 0, minInterval)\n    ;\n\n  this.stopAutocompaction();\n\n  this.autocompactionIntervalId = setInterval(function () {\n    self.compactDatafile();\n  }, realInterval);\n};\n\n\n/**\n * Stop autocompaction (do nothing if autocompaction was not running)\n */\nPersistence.prototype.stopAutocompaction = function () {\n  if (this.autocompactionIntervalId) { clearInterval(this.autocompactionIntervalId); }\n};\n\n\n/**\n * Persist new state for the given newDocs (can be insertion, update or removal)\n * Use an append-only format\n * @param {Array} newDocs Can be empty if no doc was updated/removed\n * @param {Function} cb Optional, signature: err\n */\nPersistence.prototype.persistNewState = function (newDocs, cb) {\n  var self = this\n    , toPersist = ''\n    , callback = cb || function () {}\n    ;\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  newDocs.forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n\n  if (toPersist.length === 0) { return callback(null); }\n\n  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {\n    return callback(err);\n  });\n};\n\n\n/**\n * From a database's raw data, return the corresponding\n * machine understandable collection\n */\nPersistence.prototype.treatRawData = function (rawData) {\n  var data = rawData.split('\\n')\n    , dataById = {}\n    , tdata = []\n    , i\n    , indexes = {}\n    , corruptItems = -1   // Last line of every data file is usually blank so not really corrupt\n    ;\n\n  for (i = 0; i < data.length; i += 1) {\n    var doc;\n\n    try {\n      doc = model.deserialize(this.beforeDeserialization(data[i]));\n      if (doc._id) {\n        if (doc.$$deleted === true) {\n          delete dataById[doc._id];\n        } else {\n          dataById[doc._id] = doc;\n        }\n      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {\n        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;\n      } else if (typeof doc.$$indexRemoved === \"string\") {\n        delete indexes[doc.$$indexRemoved];\n      }\n    } catch (e) {\n      corruptItems += 1;\n    }\n  }\n\n  // A bit lenient on corruption\n  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {\n    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  Object.keys(dataById).forEach(function (k) {\n    tdata.push(dataById[k]);\n  });\n\n  return { data: tdata, indexes: indexes };\n};\n\n\n/**\n * Load the database\n * 1) Create all indexes\n * 2) Insert all data\n * 3) Compact the database\n * This means pulling data out of the data file or creating it if it doesn't exist\n * Also, all data is persisted right away, which has the effect of compacting the database file\n * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.loadDatabase = function (cb) {\n  var callback = cb || function () {}\n    , self = this\n    ;\n\n  self.db.resetIndexes();\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  async.waterfall([\n    function (cb) {\n      Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {\n        storage.ensureDatafileIntegrity(self.filename, function (err) {\n          storage.readFile(self.filename, 'utf8', function (err, rawData) {\n            if (err) { return cb(err); }\n\n            try {\n              var treatedData = self.treatRawData(rawData);\n            } catch (e) {\n              return cb(e);\n            }\n\n            // Recreate all indexes in the datafile\n            Object.keys(treatedData.indexes).forEach(function (key) {\n              self.db.indexes[key] = new Index(treatedData.indexes[key]);\n            });\n\n            // Fill cached database (i.e. all indexes) with data\n            try {\n              self.db.resetIndexes(treatedData.data);\n            } catch (e) {\n              self.db.resetIndexes();   // Rollback any index which didn't fail\n              return cb(e);\n            }\n\n            self.db.persistence.persistCachedDatabase(cb);\n          });\n        });\n      });\n    }\n  ], function (err) {\n       if (err) { return callback(err); }\n\n       self.db.executor.processBuffer();\n       return callback(null);\n     });\n};\n\n\n// Interface\nmodule.exports = Persistence;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-memory/~/nedb/lib/persistence.js\n// module id = 59\n// module chunks = 0","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Lodash rest function without function.toString()\n// remappings\nfunction rest(func, start) {\n    return overRest$1(func, start, identity);\n}\n\nvar initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    });\n};\n\nfunction applyEach$1(eachfn) {\n    return rest(function (fns, args) {\n        var go = initialParams(function (args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        } else {\n            return go;\n        }\n    });\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  value = Object(value);\n  return (symToStringTag && symToStringTag in value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key: key } : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (value === breakLoop || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, iteratee, callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, iteratee, callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, iteratee, callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a transformed\n * item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n        return fn.apply(null, args.concat(callArgs));\n    });\n});\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2016 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function to convert to an\n * asynchronous function.\n * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n * (callback).\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es6 example\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                callback(null, value);\n            }, function (err) {\n                callback(err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the functions in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the functions pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * Functions also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the function itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while (readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            runningTasks--;\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function (val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = args;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = args;\n                taskComplete(key);\n            }\n        }));\n\n        runningTasks++;\n        var taskFn = task[task.length - 1];\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is a function of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (taskFn.length === 1) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            taskFn.apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return rest(function (fn, args) {\n        defer(function () {\n            fn.apply(null, args);\n        });\n    });\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = DLL;\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    }\n\n    function _next(tasks) {\n        return rest(function (args) {\n            workers -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n                var index = baseIndexOf(workersList, task, 0);\n                if (index >= 0) {\n                    workersList.splice(index);\n                }\n\n                task.callback.apply(task, args);\n\n                if (args[0] != null) {\n                    q.error(args[0], task.data);\n                }\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        });\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated: noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var tasks = [],\n                    data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    data.push(node.data);\n                }\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n                workers += 1;\n                workersList.push(tasks[0]);\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing an array\n * of queued tasks, which must call its `callback(err)` argument when finished,\n * with an optional `err` argument. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n  return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * `key` is the item's key, or index in the case of an array. The iteratee is\n * passed a `callback(err)` which must be called once it has completed. If no\n * error has occurred, the callback should be run without arguments or with an\n * explicit `null` argument. Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    eachOfSeries(coll, function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nvar seq$1 = rest(function seq(functions) {\n    return rest(function (args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(functions, args, function (newargs, fn, cb) {\n            fn.apply(that, newargs.concat(rest(function (err, nextargs) {\n                cb(err, nextargs);\n            })));\n        }, function (err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    });\n});\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = rest(function (args) {\n  return seq$1.apply(null, args.reverse());\n});\n\nfunction concat$1(eachfn, arr, fn, callback) {\n    var result = [];\n    eachfn(arr, function (x, index, cb) {\n        fn(x, function (err, y) {\n            result = result.concat(y || []);\n            cb(err);\n        });\n    }, function (err) {\n        callback(err, result);\n    });\n}\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doParallel(concat$1);\n\nfunction doSeries(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOfSeries, obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doSeries(concat$1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {Function} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = rest(function (values) {\n    var args = [null].concat(values);\n    return initialParams(function (ignoredArgs, callback) {\n        return callback.apply(this, args);\n    });\n});\n\nfunction _createTester(check, getResult) {\n    return function (eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function (value, _, callback) {\n            iteratee(value, function (err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return rest(function (fn, args) {\n        fn.apply(null, args.concat(rest(function (err, args) {\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        })));\n    });\n}\n\n/**\n * Logs the result of an `async` function to the `console` using `console.dir`\n * to display the properties of the resulting object. Only works in Node.js or\n * in browsers that support `console.dir` and `console.error` (such as FF and\n * Chrome). If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occured, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        args.push(check);\n        test.apply(this, args);\n    });\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    check(null, true);\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `fn`. Invoked with the non-error callback results of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(fn, test, callback) {\n    doWhilst(fn, function () {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occured, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n\n    function next(err) {\n        if (err) return callback(err);\n        test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item\n * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n * it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is not\n * passed to the iteratee. Invoked with (item, callback). If you need the index,\n * use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n  eachOf(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * iteratee is passed a `callback(err)` which must be called once it has\n * completed. If no error has occurred, the `callback` should be run without\n * arguments or with an explicit `null` argument. The array index is not passed\n * to the iteratee. Invoked with (item, callback). If you need the index, use\n * `eachOfLimit`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n * once it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is\n * not passed to the iteratee. Invoked with (item, callback). If you need the\n * index, use `eachOfSeries`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {Function} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({ index: index, value: x });\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, iteratee, callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the\n * callback then `errback` is called with the error, and execution stops,\n * otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = ensureAsync(fn);\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function (coll, limit, iteratee, callback) {\n    callback = callback || noop;\n\n    mapLimit(coll, limit, function (val, callback) {\n        iteratee(val, function (err, key) {\n            if (err) return callback(err);\n            return callback(null, { key: key, val: val });\n        });\n    }, function (err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    eachOfLimit(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value and key in\n * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n * called once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat(rest(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @alias setImmediate\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        task(rest(function (err, args) {\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            results[key] = args;\n            callback(err);\n        }));\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n  _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Collection} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n  _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n  return queue(function (items, cb) {\n    worker(items[0], cb);\n  }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing functions to run. Each function\n * is passed a `callback(err, result)` which it must call on completion with an\n * error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        tasks[i](callback);\n    }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = slice.call(array).reverse();\n  reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the function in another function that always returns data even when it\n * errors.\n *\n * The object returned has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(rest(function callback(err, cbArgs) {\n            if (err) {\n                reflectCallback(null, {\n                    error: err\n                });\n            } else {\n                var value = null;\n                if (cbArgs.length === 1) {\n                    value = cbArgs[0];\n                } else if (cbArgs.length > 1) {\n                    value = cbArgs;\n                }\n                reflectCallback(null, {\n                    value: value\n                });\n            }\n        }));\n\n        return fn.apply(this, args);\n    });\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function (value, cb) {\n        iteratee(value, function (err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * A helper function that wraps an array or an object of functions with reflect.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n * @returns {Array} Returns an array of functions, each function wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function (task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {Function} task - A function which receives two arguments: (1) a\n * `callback(err, result)` which must be called when finished, passing `err`\n * (which can be `null`) and the `result` of the function's execution, and (2)\n * a `results` object, containing the results of the previously executed\n * functions (if nested inside another control flow). Invoked with\n * (callback, results).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // It can also be embedded within other control flow functions to retry\n * // individual methods that are not as reliable, like this:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retry(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var attempt = 1;\n    function retryAttempt() {\n        task(function (err) {\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n * retryable, rather than immediately calling it with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {Function} task - the asynchronous function to wrap\n * @returns {Functions} The wrapped function, which when invoked, will retry on\n * an error, based on the parameters specified in `opts`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n * function is passed a `callback(err, result)` it must call on completion with\n * an error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, sortValue)` which must be called once\n * it has completed with an error (which can be `null`) and a value to use as\n * the sort criteria. Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy(coll, iteratee, callback) {\n    map(coll, function (x, callback) {\n        iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, { value: x, criteria: criteria });\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria,\n            b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} asyncFn - The asynchronous function you want to set the\n * time limit.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {Function} Returns a wrapped function that can be used with any of\n * the control flow functions. Invoke this function with the same\n * parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var originalCallback, timer;\n    var timedOut = false;\n\n    function injectedCallback() {\n        if (!timedOut) {\n            originalCallback.apply(null, arguments);\n            clearTimeout(timer);\n        }\n    }\n\n    function timeoutCallback() {\n        var name = asyncFn.name || 'anonymous';\n        var error = new Error('Callback function \"' + name + '\" timed out.');\n        error.code = 'ETIMEDOUT';\n        if (info) {\n            error.info = info;\n        }\n        timedOut = true;\n        originalCallback(error);\n    }\n\n    return initialParams(function (args, origCallback) {\n        originalCallback = origCallback;\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        asyncFn.apply(null, args.concat(injectedCallback));\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax$1 = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {Function} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator. The `iteratee` is\n * passed a `callback(err)` which accepts an optional error as its first\n * argument. If an error is passed to the callback, the transform is stopped\n * and the main `callback` is immediately called with the error.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform(coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n\n    eachOf(coll, function (v, k, cb) {\n        iteratee(accumulator, v, k, cb);\n    }, function (err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {Function} fn - the memoized function\n * @returns {Function} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    if (!test()) return callback(null);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    whilst(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function (tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n */\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\nvar index = {\n  applyEach: applyEach,\n  applyEachSeries: applyEachSeries,\n  apply: apply$2,\n  asyncify: asyncify,\n  auto: auto,\n  autoInject: autoInject,\n  cargo: cargo,\n  compose: compose,\n  concat: concat,\n  concatSeries: concatSeries,\n  constant: constant,\n  detect: detect,\n  detectLimit: detectLimit,\n  detectSeries: detectSeries,\n  dir: dir,\n  doDuring: doDuring,\n  doUntil: doUntil,\n  doWhilst: doWhilst,\n  during: during,\n  each: eachLimit,\n  eachLimit: eachLimit$1,\n  eachOf: eachOf,\n  eachOfLimit: eachOfLimit,\n  eachOfSeries: eachOfSeries,\n  eachSeries: eachSeries,\n  ensureAsync: ensureAsync,\n  every: every,\n  everyLimit: everyLimit,\n  everySeries: everySeries,\n  filter: filter,\n  filterLimit: filterLimit,\n  filterSeries: filterSeries,\n  forever: forever,\n  groupBy: groupBy,\n  groupByLimit: groupByLimit,\n  groupBySeries: groupBySeries,\n  log: log,\n  map: map,\n  mapLimit: mapLimit,\n  mapSeries: mapSeries,\n  mapValues: mapValues,\n  mapValuesLimit: mapValuesLimit,\n  mapValuesSeries: mapValuesSeries,\n  memoize: memoize,\n  nextTick: nextTick,\n  parallel: parallelLimit,\n  parallelLimit: parallelLimit$1,\n  priorityQueue: priorityQueue,\n  queue: queue$1,\n  race: race,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  reflect: reflect,\n  reflectAll: reflectAll,\n  reject: reject,\n  rejectLimit: rejectLimit,\n  rejectSeries: rejectSeries,\n  retry: retry,\n  retryable: retryable,\n  seq: seq$1,\n  series: series,\n  setImmediate: setImmediate$1,\n  some: some,\n  someLimit: someLimit,\n  someSeries: someSeries,\n  sortBy: sortBy,\n  timeout: timeout,\n  times: times,\n  timesLimit: timeLimit,\n  timesSeries: timesSeries,\n  transform: transform,\n  unmemoize: unmemoize,\n  until: until,\n  waterfall: waterfall,\n  whilst: whilst,\n\n  // aliases\n  all: every,\n  any: some,\n  forEach: eachLimit,\n  forEachSeries: eachSeries,\n  forEachLimit: eachLimit$1,\n  forEachOf: eachOf,\n  forEachOfSeries: eachOfSeries,\n  forEachOfLimit: eachOfLimit,\n  inject: reduce,\n  foldl: reduce,\n  foldr: reduceRight,\n  select: filter,\n  selectLimit: filterLimit,\n  selectSeries: filterSeries,\n  wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.apply = apply$2;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq$1;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store-mongolike/~/async/dist/async.js\n// module id = 60\n// module chunks = 0","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Lodash rest function without function.toString()\n// remappings\nfunction rest(func, start) {\n    return overRest$1(func, start, identity);\n}\n\nvar initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    });\n};\n\nfunction applyEach$1(eachfn) {\n    return rest(function (fns, args) {\n        var go = initialParams(function (args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        } else {\n            return go;\n        }\n    });\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  value = Object(value);\n  return (symToStringTag && symToStringTag in value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key: key } : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (value === breakLoop || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, iteratee, callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, iteratee, callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, iteratee, callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a transformed\n * item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n        return fn.apply(null, args.concat(callArgs));\n    });\n});\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2016 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function to convert to an\n * asynchronous function.\n * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n * (callback).\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es6 example\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                callback(null, value);\n            }, function (err) {\n                callback(err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the functions in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the functions pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * Functions also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the function itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while (readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            runningTasks--;\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function (val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = args;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = args;\n                taskComplete(key);\n            }\n        }));\n\n        runningTasks++;\n        var taskFn = task[task.length - 1];\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is a function of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (taskFn.length === 1) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            taskFn.apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return rest(function (fn, args) {\n        defer(function () {\n            fn.apply(null, args);\n        });\n    });\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = DLL;\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    }\n\n    function _next(tasks) {\n        return rest(function (args) {\n            workers -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n                var index = baseIndexOf(workersList, task, 0);\n                if (index >= 0) {\n                    workersList.splice(index);\n                }\n\n                task.callback.apply(task, args);\n\n                if (args[0] != null) {\n                    q.error(args[0], task.data);\n                }\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        });\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated: noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var tasks = [],\n                    data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    data.push(node.data);\n                }\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n                workers += 1;\n                workersList.push(tasks[0]);\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing an array\n * of queued tasks, which must call its `callback(err)` argument when finished,\n * with an optional `err` argument. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n  return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * `key` is the item's key, or index in the case of an array. The iteratee is\n * passed a `callback(err)` which must be called once it has completed. If no\n * error has occurred, the callback should be run without arguments or with an\n * explicit `null` argument. Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    eachOfSeries(coll, function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nvar seq$1 = rest(function seq(functions) {\n    return rest(function (args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(functions, args, function (newargs, fn, cb) {\n            fn.apply(that, newargs.concat(rest(function (err, nextargs) {\n                cb(err, nextargs);\n            })));\n        }, function (err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    });\n});\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = rest(function (args) {\n  return seq$1.apply(null, args.reverse());\n});\n\nfunction concat$1(eachfn, arr, fn, callback) {\n    var result = [];\n    eachfn(arr, function (x, index, cb) {\n        fn(x, function (err, y) {\n            result = result.concat(y || []);\n            cb(err);\n        });\n    }, function (err) {\n        callback(err, result);\n    });\n}\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doParallel(concat$1);\n\nfunction doSeries(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOfSeries, obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doSeries(concat$1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {Function} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = rest(function (values) {\n    var args = [null].concat(values);\n    return initialParams(function (ignoredArgs, callback) {\n        return callback.apply(this, args);\n    });\n});\n\nfunction _createTester(check, getResult) {\n    return function (eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function (value, _, callback) {\n            iteratee(value, function (err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return rest(function (fn, args) {\n        fn.apply(null, args.concat(rest(function (err, args) {\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        })));\n    });\n}\n\n/**\n * Logs the result of an `async` function to the `console` using `console.dir`\n * to display the properties of the resulting object. Only works in Node.js or\n * in browsers that support `console.dir` and `console.error` (such as FF and\n * Chrome). If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occured, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        args.push(check);\n        test.apply(this, args);\n    });\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    check(null, true);\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `fn`. Invoked with the non-error callback results of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(fn, test, callback) {\n    doWhilst(fn, function () {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occured, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n\n    function next(err) {\n        if (err) return callback(err);\n        test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item\n * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n * it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is not\n * passed to the iteratee. Invoked with (item, callback). If you need the index,\n * use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n  eachOf(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * iteratee is passed a `callback(err)` which must be called once it has\n * completed. If no error has occurred, the `callback` should be run without\n * arguments or with an explicit `null` argument. The array index is not passed\n * to the iteratee. Invoked with (item, callback). If you need the index, use\n * `eachOfLimit`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n * once it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is\n * not passed to the iteratee. Invoked with (item, callback). If you need the\n * index, use `eachOfSeries`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {Function} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({ index: index, value: x });\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, iteratee, callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the\n * callback then `errback` is called with the error, and execution stops,\n * otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = ensureAsync(fn);\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function (coll, limit, iteratee, callback) {\n    callback = callback || noop;\n\n    mapLimit(coll, limit, function (val, callback) {\n        iteratee(val, function (err, key) {\n            if (err) return callback(err);\n            return callback(null, { key: key, val: val });\n        });\n    }, function (err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, key)` which must be called once it\n * has completed with an error (which can be `null`) and the `key` to group the\n * value under. Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    eachOfLimit(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value and key in\n * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n * called once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat(rest(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @alias setImmediate\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        task(rest(function (err, args) {\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            results[key] = args;\n            callback(err);\n        }));\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n  _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Collection} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n  _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n  return queue(function (items, cb) {\n    worker(items[0], cb);\n  }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing functions to run. Each function\n * is passed a `callback(err, result)` which it must call on completion with an\n * error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        tasks[i](callback);\n    }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = slice.call(array).reverse();\n  reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the function in another function that always returns data even when it\n * errors.\n *\n * The object returned has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(rest(function callback(err, cbArgs) {\n            if (err) {\n                reflectCallback(null, {\n                    error: err\n                });\n            } else {\n                var value = null;\n                if (cbArgs.length === 1) {\n                    value = cbArgs[0];\n                } else if (cbArgs.length > 1) {\n                    value = cbArgs;\n                }\n                reflectCallback(null, {\n                    value: value\n                });\n            }\n        }));\n\n        return fn.apply(this, args);\n    });\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function (value, cb) {\n        iteratee(value, function (err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * A helper function that wraps an array or an object of functions with reflect.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n * @returns {Array} Returns an array of functions, each function wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function (task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {Function} task - A function which receives two arguments: (1) a\n * `callback(err, result)` which must be called when finished, passing `err`\n * (which can be `null`) and the `result` of the function's execution, and (2)\n * a `results` object, containing the results of the previously executed\n * functions (if nested inside another control flow). Invoked with\n * (callback, results).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // It can also be embedded within other control flow functions to retry\n * // individual methods that are not as reliable, like this:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retry(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var attempt = 1;\n    function retryAttempt() {\n        task(function (err) {\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n * retryable, rather than immediately calling it with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {Function} task - the asynchronous function to wrap\n * @returns {Functions} The wrapped function, which when invoked, will retry on\n * an error, based on the parameters specified in `opts`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n * function is passed a `callback(err, result)` it must call on completion with\n * an error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, sortValue)` which must be called once\n * it has completed with an error (which can be `null`) and a value to use as\n * the sort criteria. Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy(coll, iteratee, callback) {\n    map(coll, function (x, callback) {\n        iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, { value: x, criteria: criteria });\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria,\n            b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} asyncFn - The asynchronous function you want to set the\n * time limit.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {Function} Returns a wrapped function that can be used with any of\n * the control flow functions. Invoke this function with the same\n * parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var originalCallback, timer;\n    var timedOut = false;\n\n    function injectedCallback() {\n        if (!timedOut) {\n            originalCallback.apply(null, arguments);\n            clearTimeout(timer);\n        }\n    }\n\n    function timeoutCallback() {\n        var name = asyncFn.name || 'anonymous';\n        var error = new Error('Callback function \"' + name + '\" timed out.');\n        error.code = 'ETIMEDOUT';\n        if (info) {\n            error.info = info;\n        }\n        timedOut = true;\n        originalCallback(error);\n    }\n\n    return initialParams(function (args, origCallback) {\n        originalCallback = origCallback;\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        asyncFn.apply(null, args.concat(injectedCallback));\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax$1 = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {Function} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator. The `iteratee` is\n * passed a `callback(err)` which accepts an optional error as its first\n * argument. If an error is passed to the callback, the transform is stopped\n * and the main `callback` is immediately called with the error.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform(coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n\n    eachOf(coll, function (v, k, cb) {\n        iteratee(accumulator, v, k, cb);\n    }, function (err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {Function} fn - the memoized function\n * @returns {Function} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    if (!test()) return callback(null);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    whilst(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function (tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n */\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\nvar index = {\n  applyEach: applyEach,\n  applyEachSeries: applyEachSeries,\n  apply: apply$2,\n  asyncify: asyncify,\n  auto: auto,\n  autoInject: autoInject,\n  cargo: cargo,\n  compose: compose,\n  concat: concat,\n  concatSeries: concatSeries,\n  constant: constant,\n  detect: detect,\n  detectLimit: detectLimit,\n  detectSeries: detectSeries,\n  dir: dir,\n  doDuring: doDuring,\n  doUntil: doUntil,\n  doWhilst: doWhilst,\n  during: during,\n  each: eachLimit,\n  eachLimit: eachLimit$1,\n  eachOf: eachOf,\n  eachOfLimit: eachOfLimit,\n  eachOfSeries: eachOfSeries,\n  eachSeries: eachSeries,\n  ensureAsync: ensureAsync,\n  every: every,\n  everyLimit: everyLimit,\n  everySeries: everySeries,\n  filter: filter,\n  filterLimit: filterLimit,\n  filterSeries: filterSeries,\n  forever: forever,\n  groupBy: groupBy,\n  groupByLimit: groupByLimit,\n  groupBySeries: groupBySeries,\n  log: log,\n  map: map,\n  mapLimit: mapLimit,\n  mapSeries: mapSeries,\n  mapValues: mapValues,\n  mapValuesLimit: mapValuesLimit,\n  mapValuesSeries: mapValuesSeries,\n  memoize: memoize,\n  nextTick: nextTick,\n  parallel: parallelLimit,\n  parallelLimit: parallelLimit$1,\n  priorityQueue: priorityQueue,\n  queue: queue$1,\n  race: race,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  reflect: reflect,\n  reflectAll: reflectAll,\n  reject: reject,\n  rejectLimit: rejectLimit,\n  rejectSeries: rejectSeries,\n  retry: retry,\n  retryable: retryable,\n  seq: seq$1,\n  series: series,\n  setImmediate: setImmediate$1,\n  some: some,\n  someLimit: someLimit,\n  someSeries: someSeries,\n  sortBy: sortBy,\n  timeout: timeout,\n  times: times,\n  timesLimit: timeLimit,\n  timesSeries: timesSeries,\n  transform: transform,\n  unmemoize: unmemoize,\n  until: until,\n  waterfall: waterfall,\n  whilst: whilst,\n\n  // aliases\n  all: every,\n  any: some,\n  forEach: eachLimit,\n  forEachSeries: eachSeries,\n  forEachLimit: eachLimit$1,\n  forEachOf: eachOf,\n  forEachOfSeries: eachOfSeries,\n  forEachOfLimit: eachOfLimit,\n  inject: reduce,\n  foldl: reduce,\n  foldr: reduceRight,\n  select: filter,\n  selectLimit: filterLimit,\n  selectSeries: filterSeries,\n  wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.apply = apply$2;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq$1;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store/~/async/dist/async.js\n// module id = 61\n// module chunks = 0","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = require('./slugid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store/~/slugid/index.js\n// module id = 62\n// module chunks = 0","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar uuid = require('uuid');\n\n/**\n * Returns the given uuid as a 22 character slug. This can be a regular v4\n * slug or a \"nice\" slug.\n */\nexports.encode = function(uuid_) {\n  var bytes   = uuid.parse(uuid_);\n  var base64  = (new Buffer(bytes)).toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/**\n * Returns the uuid represented by the given v4 or \"nice\" slug\n */\nexports.decode = function(slug) {\n  var base64 = slug\n                  .replace(/-/g, '+')\n                  .replace(/_/g, '/')\n                  + '==';\n  return uuid.unparse(new Buffer(base64, 'base64'));\n};\n\n/**\n * Returns a randomly generated uuid v4 compliant slug\n */\nexports.v4 = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/** \n * Returns a randomly generated uuid v4 compliant slug which conforms to a set\n * of \"nice\" properties, at the cost of some entropy. Currently this means one\n * extra fixed bit (the first bit of the uuid is set to 0) which guarantees the\n * slug will begin with [A-Za-f]. For example such slugs don't require special\n * handling when used as command line parameters (whereas non-nice slugs may\n * start with `-` which can confuse command line tools).\n *\n * Potentially other \"nice\" properties may be added in future to further\n * restrict the range of potential uuids that may be generated.\n */\nexports.nice = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  bytes[0] = bytes[0] & 0x7f;  // unset first bit to ensure [A-Za-f] first char\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store/~/slugid/slugid.js\n// module id = 63\n// module chunks = 0","\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store/~/uuid/rng-browser.js\n// module id = 64\n// module chunks = 0","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../anno-store/~/uuid/uuid.js\n// module id = 65\n// module chunks = 0","const Store = require('@kba/anno-store')\nconst schema = require('@kba/anno-schema')\nconst async = require('async')\nconst errors = require('@kba/anno-errors')\nconst config = require('@kba/anno-config').loadConfig({\n    COLLECTION: 'default'\n})\n\nclass MongolikeStore extends Store {\n\n    constructor(...args) { super(...args) }\n\n    /* @override */\n    _wipe(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        throw(new Error(\"Must override '_wipe'\"))\n    }\n\n    /* @override */\n    _disconnect(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        return cb();\n    }\n\n    /* @override */\n    _get(options, cb) {\n        var annoId = options.annoId\n        const projection = this._projectionFromOptions(options)\n        annoId = this._idFromURL(annoId)\n        var [_id, _revid] = annoId.split(/-rev-/)\n        const query = {_id, deleted: {$exists: false}}\n        this.db.findOne(query, projection, (err, doc) => {\n            if (err) return cb(err)\n            if (!doc) return cb(errors.annotationNotFound(annoId))\n            const rev = (_revid) \n                ? doc._revisions[_revid -1]\n                : doc._revisions[doc._revisions.length - 1]\n            if (!rev) return cb(errors.revisionNotFound(_id, _revid))\n            if (options.latest) {\n                annoId = `${_id}-rev-${doc._revisions.length}`\n                doc = rev\n            }\n            return cb(null, this._toJSONLD(annoId, doc, options))\n        })\n    }\n\n    /* @override */\n    _create(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        var annos = JSON.parse(JSON.stringify(options.annos))\n        var wasArray = Array.isArray(annos)\n        if (!wasArray) {\n            annos = [annos]\n        }\n        const validationErrors = []\n        annos = annos.map(anno => {\n            anno = this._deleteId(anno)\n            const validFn = schema.validate.Annotation\n            // console.log(anno)\n            if (!validFn(anno)) {\n                return validationErrors.push(errors.invalidAnnotation(anno, validFn.errors))\n            }\n            anno = this._normalizeTarget(anno)\n            anno = this._normalizeType(anno)\n            anno._revisions = [JSON.parse(JSON.stringify(anno))]\n            const created = new Date().toISOString()\n            anno.modified = created\n            anno.created = created\n            anno._revisions[0].created = created\n            anno._id = this._genid()\n            return anno\n        })\n        if (validationErrors.length > 0) return cb(errors.invalidAnnotation({validationErrors}))\n        this.db.insert(annos, (err, savedAnnos) => {\n            // Mongodb returns an object describing the result, nedb returns just the results\n            var {insertedIds} = savedAnnos\n            if (!insertedIds) insertedIds = savedAnnos.map(savedAnno => savedAnno._id)\n            if (err) return cb(err)\n            if (!wasArray) return this.get(insertedIds[0], options, cb)\n            return this.get(insertedIds, options, cb)\n        })\n    }\n\n    // https://www.w3.org/TR/annotation-protocol/#update-an-existing-annotation\n    /* @override */\n    _revise(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        const annoId = this._idFromURL(options.annoId)\n        var anno = options.anno\n        var [_id, _revid] = annoId.split(/-rev-/)\n        this.db.findOne({_id}, (err, existingAnno) => {\n            if (err) return cb(err)\n            if (!existingAnno) return cb(errors.annotationNotFound(_id))\n            ;['canonical', 'via', 'hasVersion', 'versionOf'].forEach(prop => {\n                if (anno[prop] && anno[prop] !== existingAnno[prop]) {\n                    return cb(errors.readonlyValue(annoId, 'canonical'))\n                }\n            })\n            var newData = JSON.parse(JSON.stringify(anno))\n            newData.created = new Date().toISOString()\n            this._deleteId(newData)\n            this._normalizeType(newData)\n            const validFn = schema.validate.Annotation\n            if (!validFn(newData)) {\n                return cb(errors.invalidAnnotation(anno, validFn.errors))\n            }\n            // TODO no idempotency of targets with normalization -> disabled for now\n            // anno = this._normalizeTarget(anno)\n            this.db.update({_id}, {\n                $push: {_revisions: newData},\n                $set: newData,\n            }, {}, (err, arg) => {\n                if (err) return cb(err)\n                options.latest = true\n                delete options.anno\n                return this.get(_id, options, cb)\n            })\n        })\n    }\n\n    /* @override */\n    _delete(options, cb) {\n        if (typeof options === 'function') [cb, options] = [options, {}]\n        const _id = this._idFromURL(options.annoId)\n        this.db.update({_id}, {$set: {deleted: new Date()}}, (err) => {\n            if (err) return cb(err)\n            return cb()\n        })\n    }\n\n    /* @override */\n    _search(options, cb) {\n        var {query} = options \n\n        if ('$target' in query) {\n            query.$or = [\n                { target: query.$target },\n                { 'target.source': query.$target },\n            ]\n            delete query.$target\n        }\n        if (query.includeDeleted) {\n            delete query.includeDeleted\n        } else {\n            query.deleted = {$exists: false}\n        }\n\n        const projection = this._projectionFromOptions(options)\n\n        // console.log(JSON.stringify({query, projection}, null, 2))\n        this.db.find(query, projection, (err, docs) => {\n            if (err) return cb(err)\n            if (docs === undefined) docs = []\n            // mongodb returns a cursor, nedb a list of documents\n            if (Array.isArray(docs))\n                return cb(null, docs.map(doc => this._toJSONLD(doc, {skipContext: true})))\n            else\n                docs.toArray((err, docs) => {\n                    if (err) return cb(err)\n                    return cb(null, docs.map(doc => this._toJSONLD(doc, {skipContext: true})))\n                })\n        })\n    }\n\n    /* ******************************************\n     * Protected API\n     * ******************************************\n     */\n    _toJSONLD(annoId, anno, options={}) {\n        if (typeof annoId === 'object') [annoId, anno] = [annoId._id, annoId]\n        const ret = {}\n        if (!options.skipContext) {\n            ret['@context'] = 'http://www.w3.org/ns/anno.jsonld'\n        }\n        ret.id = `${this.config.BASE_URL}/anno/${annoId}`\n        ret.type = \"Annotation\"\n        Object.keys(anno).forEach(prop => {\n            if (prop === '_revisions') {\n                if (anno._revisions.length > 0 && !options.skipVersions) {\n                    var revId = 0\n                    ret.hasVersion = anno._revisions.map(revision => {\n                        const revisionLD = this._toJSONLD(`${annoId}-rev-${++revId}`, revision,\n                            {skipContext: true})\n                        revisionLD.versionOf = ret.id\n                        return revisionLD\n                    })\n                }\n            } else if (!prop.match(/^_/)) {\n                ret[prop] = anno[prop]\n            }\n        })\n\n        return ret\n    }\n\n    _projectionFromOptions(options) {\n        const ret = {}\n        if (options.metadataOnly) {\n            Object.assign(ret, {\n                body: false,\n                target: false,\n            })\n            // HACK\n            for (let i = 0; i < 20; i++) {\n                ret[`_revisions.${i}.body`] = false\n                ret[`_revisions.${i}.target`] = false\n            }\n        }\n        return ret\n    }\n\n\n\n}\n\nmodule.exports = MongolikeStore\n\n\n\n// WEBPACK FOOTER //\n// ../anno-store-mongolike/store-mongolike.js","module.exports = {\n    Schema: require('@kba/anno-schema'),\n    Config: require('@kba/anno-config'),\n    Errors: require('@kba/anno-errors'),\n    Store: require('@kba/anno-store'),\n    HttpStore: require('@kba/anno-store-http'),\n    MemoryStore: require('@kba/anno-store-memory'),\n    BasicAuthMiddleware: require('@kba/anno-mw-basicauth'),\n    HttpHeadersMiddleware: require('@kba/anno-mw-httpheaders'),\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entry.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 68\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 69\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 70\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 71\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 72\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/path-browserify/index.js\n// module id = 73\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/decode.js\n// module id = 74\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/encode.js\n// module id = 75\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/index.js\n// module id = 76\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 77\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 78\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 79\n// module chunks = 0"],"sourceRoot":""}